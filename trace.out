#
# Compressed Instruction Trace Generated By Pin
#
@1
%mov rdi, rsp
%call 0x7fd169012ea0
1
@2
%push rbp
%mov rbp, rsp
%push r15
%push r14
%push r13
%push r12
%mov r12, rdi
%push rbx
%sub rsp, 0x48
%rdtsc 
%shl rdx, 0x20
%mov eax, eax
%or rdx, rax
%mov rax, qword ptr [rip+0x225fa2]
%mov qword ptr [rip+0x225853], rdx
%lea rdx, ptr [rip+0x225f94]
%mov r14, rdx
%sub r14, qword ptr [rip+0x226122]
%test rax, rax
%mov qword ptr [rip+0x226b18], rdx
%mov qword ptr [rip+0x226b01], r14
%jz 0x7fd169012f90
@3
%lea rdi, ptr [rip+0x226164]
%mov r9, 0x3800003d0
%mov rcx, 0x37ffffb70
%mov r8d, 0x6fffffff
%mov r11d, 0x6ffffdff
%mov ebx, 0x6ffffeff
%add r9, rdi
%mov r10d, 0x31
%add rdi, rcx
%lea rsi, ptr [rip+0x226afc]
%jmp 0x7fd169012f5b
2
3
@4
%cmp rax, 0x21
%jbe 0x7fd169012f4b
@5
%mov rcx, r8
%sub rcx, rax
%cmp rcx, 0xf
%jbe 0x7fd169012f40
@6
%lea ecx, ptr [rax+rax*1]
%sar ecx, 0x1
%cmp ecx, 0xfffffffc
%jbe 0x7fd169013290
4
@7
%mov qword ptr [rsi+rax*8], rdx
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%test rax, rax
%jz 0x7fd169012f90
@8
%cmp rax, 0x21
%jbe 0x7fd169012f4b
@9
%mov rcx, r8
%sub rcx, rax
%cmp rcx, 0xf
%jbe 0x7fd169012f40
7
8
7
8
9
@10
%lea ecx, ptr [rax+rax*1]
%sar ecx, 0x1
%cmp ecx, 0xfffffffc
%jbe 0x7fd169013290
@11
%mov eax, r10d
%sub eax, ecx
%mov qword ptr [rsi+rax*8], rdx
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd169012f5b
@12
%test r14, r14
%jz 0x7fd169013019
10
@13
%mov rcx, r11
%sub rcx, rax
%cmp rcx, 0xb
%jnbe 0x7fd169013320
@14
%neg rax
%mov qword ptr [rdi+rax*8], rdx
%jmp 0x7fd169012f4f
13
@15
%mov rcx, rbx
%sub rcx, rax
%cmp rcx, 0xa
%jnbe 0x7fd169012f4f
@16
%neg rax
%mov qword ptr [r9+rax*8], rdx
%jmp 0x7fd169012f4f
15
16
@17
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%test rax, rax
%jz 0x7fd169012f90
@18
%cmp rax, 0x21
%jbe 0x7fd169012f4b
@19
%mov rcx, r8
%sub rcx, rax
%cmp rcx, 0xf
%jbe 0x7fd169012f40
17
18
7
8
7
8
7
8
7
8
7
8
7
8
7
8
7
8
7
8
7
8
7
8
9
@20
%mov ecx, 0x70000021
%sub rcx, rax
%mov rax, rcx
%mov qword ptr [rsi+rax*8], rdx
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%test rax, rax
%jz 0x7fd169012f90
@21
%cmp rax, 0x21
%jbe 0x7fd169012f4b
@22
%mov rcx, r8
%sub rcx, rax
%cmp rcx, 0xf
%jbe 0x7fd169012f40
20
21
22
20
21
22
20
21
22
20
@23
%test r14, r14
%jz 0x7fd169013019
@24
%mov rax, qword ptr [rip+0x226ab0]
%test rax, rax
%jz 0x7fd169012fa9
@25
%add qword ptr [rax+0x8], r14
%mov rax, qword ptr [rip+0x226a98]
%test rax, rax
%jz 0x7fd169012fb9
23
24
25
@26
%add qword ptr [rax+0x8], r14
%mov rax, qword ptr [rip+0x226a98]
%test rax, rax
%jz 0x7fd169012fc9
@27
%add qword ptr [rax+0x8], r14
%mov rax, qword ptr [rip+0x226a90]
%test rax, rax
%jz 0x7fd169012fd9
@28
%add qword ptr [rax+0x8], r14
%mov rax, qword ptr [rip+0x226a88]
%test rax, rax
%jz 0x7fd169012fe9
26
27
28
@29
%add qword ptr [rax+0x8], r14
%mov rax, qword ptr [rip+0x226af8]
%test rax, rax
%jz 0x7fd169012ff9
@30
%add qword ptr [rax+0x8], r14
%mov rax, qword ptr [rip+0x226bb8]
%test rax, rax
%jz 0x7fd169013009
@31
%add qword ptr [rax+0x8], r14
%mov rax, qword ptr [rip+0x226c78]
%test rax, rax
%jz 0x7fd169013019
29
30
31
@32
%add qword ptr [rax+0x8], r14
%mov rdx, qword ptr [rip+0x226ab0]
%test rdx, rdx
%jz 0x7fd169013030
@33
%cmp qword ptr [rdx+0x8], 0x7
%jnz 0x7fd169013458
@34
%mov rax, qword ptr [rip+0x226a31]
%test rax, rax
%jz 0x7fd16901304e
32
33
34
@35
%mov rcx, qword ptr [rip+0x226a35]
%cmp qword ptr [rcx+0x8], 0x18
%jnz 0x7fd169013439
@36
%mov rcx, qword ptr [rip+0x226b0b]
%test rcx, rcx
%jz 0x7fd169013068
@37
%test qword ptr [rcx+0x8], 0xfffffffffffffffe
%jnz 0x7fd16901341a
35
36
@38
%mov rcx, qword ptr [rip+0x226ab1]
%test rcx, rcx
%jz 0x7fd169013082
@39
%test qword ptr [rcx+0x8], 0xfffffffffffffff7
%jnz 0x7fd1690133fb
@40
%cmp qword ptr [rip+0x226a8e], 0x0
%jnz 0x7fd1690133dc
38
@41
%cmp qword ptr [rip+0x226a8e], 0x0
%jnz 0x7fd1690133dc
@42
%cmp qword ptr [rip+0x226a10], 0x0
%jnz 0x7fd1690133bd
@43
%test r14, r14
%jnz 0x7fd169013160
41
42
43
@44
%test rax, rax
%jz 0x7fd169013380
@45
%mov rdi, qword ptr [rax+0x8]
%mov rax, qword ptr [rip+0x2268fc]
%mov r8, qword ptr [rip+0x2269f5]
%mov rcx, qword ptr [rax+0x8]
%mov r13, rdi
%mov rax, rdi
%test r8, r8
%lea rsi, ptr [rdi+rcx*1]
%jz 0x7fd16901319a
@46
%mov r8, qword ptr [r8+0x8]
%lea r8, ptr [r8+r8*2]
%lea r13, ptr [rdi+r8*8]
%test rdx, rdx
%jz 0x7fd1690131cc
44
45
46
@47
%mov r8, qword ptr [rip+0x226942]
%mov rdx, qword ptr [rip+0x226893]
%mov r9, qword ptr [r8+0x8]
%mov rdx, qword ptr [rdx+0x8]
%mov r8, rcx
%add r9, rdx
%sub r8, rdx
%cmp r9, rsi
%lea rsi, ptr [rdx+rdi*1]
%cmovz rcx, r8
%add rsi, rcx
%mov rdx, qword ptr [rip+0x22688d]
%cmp rax, r13
%mov rdi, qword ptr [rdx+0x8]
%jnb 0x7fd169013203
@48
%nop dword ptr [rax], eax
%mov rcx, qword ptr [rax]
%add rcx, r14
%cmp dword ptr [rax+0x8], 0x8
%jnz 0x7fd16901339e
@49
%mov rdx, qword ptr [rax+0x10]
%add rax, 0x18
%add rdx, r14
%cmp rax, r13
%mov qword ptr [rcx], rdx
%jb 0x7fd1690131e0
47
48
49
@50
%mov rcx, qword ptr [rax]
%add rcx, r14
%cmp dword ptr [rax+0x8], 0x8
%jnz 0x7fd16901339e
@51
%mov rdx, qword ptr [rax+0x10]
%add rax, 0x18
%add rdx, r14
%cmp rax, r13
%mov qword ptr [rcx], rdx
%jb 0x7fd1690131e0
@52
%cmp qword ptr [rip+0x2269ad], 0x0
%jz 0x7fd169013477
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
50
51
52
@53
%cmp rsi, r13
%lea r8, ptr [rip+0x1d905]
%lea r9, ptr [rip+0x1761e]
%jbe 0x7fd1690130b5
@54
%nop dword ptr [rax+rax*1], eax
%mov rax, qword ptr [r13+0x8]
%mov rcx, qword ptr [r13]
%mov rdx, rax
%add rcx, r14
%shr rdx, 0x20
%and eax, 0xffffffff
%lea rdx, ptr [rdx+rdx*2]
%mov rbx, rax
%lea r15, ptr [rdi+rdx*8]
%jz 0x7fd1690132c8
@55
%xor eax, eax
%test r15, r15
%jz 0x7fd169013275
53
54
55
@56
%movzx edx, byte ptr [r15+0x4]
%mov rax, qword ptr [r15+0x8]
%add rax, qword ptr [rip+0x226787]
%and edx, 0xf
%cmp dl, 0xa
%jz 0x7fd169013340
@57
%lea rdx, ptr [rbx-0x6]
%cmp rdx, 0x1e
%jnbe 0x7fd1690132c8
@58
%movsxd rdx, dword ptr [r8+rdx*4]
%add rdx, r8
%jmp rdx
56
57
58
@59
%add rax, qword ptr [r13+0x10]
%mov qword ptr [rcx], rax
%jmp 0x7fd1690132c8
59
@60
%add r13, 0x18
%cmp rsi, r13
%jnbe 0x7fd169013230
@61
%jmp 0x7fd1690130b5
60
@62
%mov rax, qword ptr [r13+0x8]
%mov rcx, qword ptr [r13]
%mov rdx, rax
%add rcx, r14
%shr rdx, 0x20
%and eax, 0xffffffff
%lea rdx, ptr [rdx+rdx*2]
%mov rbx, rax
%lea r15, ptr [rdi+rdx*8]
%jz 0x7fd1690132c8
@63
%xor eax, eax
%test r15, r15
%jz 0x7fd169013275
@64
%movzx edx, byte ptr [r15+0x4]
%mov rax, qword ptr [r15+0x8]
%add rax, qword ptr [rip+0x226787]
%and edx, 0xf
%cmp dl, 0xa
%jz 0x7fd169013340
62
63
64
@65
%lea rdx, ptr [rbx-0x6]
%cmp rdx, 0x1e
%jnbe 0x7fd1690132c8
@66
%movsxd rdx, dword ptr [r8+rdx*4]
%add rdx, r8
%jmp rdx
65
66
59
60
62
63
64
65
66
59
60
62
63
64
65
66
59
60
62
63
64
65
66
59
60
62
63
64
65
66
59
60
62
63
64
65
66
59
60
62
63
64
65
66
59
60
62
63
64
65
66
59
60
61
@67
%lea rdi, ptr [rip+0x226934]
%or byte ptr [rip+0x226c41], 0x4
%call 0x7fd16901cf50
67
@68
%mov rax, qword ptr [rdi+0x298]
%test rax, rax
%jz 0x7fd16901cfb0
@69
%mov rcx, qword ptr [rax+0x8]
%mov edx, dword ptr [rcx]
%mov dword ptr [rdi+0x2ec], edx
%mov eax, dword ptr [rcx+0x8]
%mov esi, dword ptr [rcx+0x4]
%lea r8d, ptr [rax-0x1]
%test r8d, eax
%jnz 0x7fd16901cfdd
@70
%mov dword ptr [rdi+0x2f0], r8d
%lea r8, ptr [rcx+0x10]
%add eax, eax
%mov ecx, dword ptr [rcx+0xc]
%sub rdx, rsi
%lea rax, ptr [r8+rax*4]
%mov qword ptr [rdi+0x2f8], r8
%mov qword ptr [rdi+0x300], rax
%lea rax, ptr [rax+rdx*4]
%mov dword ptr [rdi+0x2f4], ecx
%mov qword ptr [rdi+0x308], rax
%ret 
68
69
70
@71
%lea rax, ptr [rip+0x226921]
%mov qword ptr [rip+0x226942], rax
%lea rax, ptr [rip-0x20dd]
%mov qword ptr [rip+0x226c4c], rax
%lea rax, ptr [rip+0x227085]
%mov qword ptr [rip+0x226c46], rax
%lea rax, ptr [rip+0x1da27]
%mov qword ptr [rip+0x226c40], rax
%rdtsc 
%lea rsi, ptr [rip+0x557]
%shl rdx, 0x20
%mov eax, eax
%or rdx, rax
%mov rdi, r12
%mov qword ptr [rip+0x225d3c], rbp
%mov qword ptr [rip+0x2268a5], rdx
%call 0x7fd16902b8e0
71
@72
%push r15
%push r14
%push r13
%push r12
%mov r13, rsi
%push rbp
%push rbx
%sub rsp, 0x58
%mov rax, qword ptr [rdi]
%mov qword ptr [rip+0x20d55d], rdi
%add rdi, 0x8
%mov qword ptr [rip+0x20ce3a], rdi
%mov dword ptr [rip+0x20ce3c], eax
%cdqe 
%lea rdi, ptr [rdi+rax*8+0x8]
%mov qword ptr [rip+0x20e7fe], rdi
%cmp qword ptr [rdi], 0x0
%mov rax, rdi
%jz 0x7fd16902b92d
@73
%add rax, 0x8
%cmp qword ptr [rax], 0x0
%jnz 0x7fd16902b923
@74
%lea rdx, ptr [rax+0x8]
%mov rax, qword ptr [rax+0x8]
%lea rsi, ptr [rip-0x198ac]
%mov qword ptr [rip+0x20ce21], 0x0
%mov qword ptr [rip+0x20ce72], rdx
%mov qword ptr [rsp+0x40], rsi
%test rax, rax
%jz 0x7fd16902bc60
72
73
@75
%add rax, 0x8
%cmp qword ptr [rax], 0x0
%jnz 0x7fd16902b923
@76
%lea rdx, ptr [rax+0x8]
%mov rax, qword ptr [rax+0x8]
%lea rsi, ptr [rip-0x198ac]
%mov qword ptr [rip+0x20ce21], 0x0
%mov qword ptr [rip+0x20ce72], rdx
%mov qword ptr [rsp+0x40], rsi
%test rax, rax
%jz 0x7fd16902bc60
@77
%mov rbx, qword ptr [rip+0x20cf4d]
%mov r11d, dword ptr [rip+0x20d4f6]
%lea rcx, ptr [rip+0x5a2b]
%mov r15, qword ptr [rip+0x20ce00]
%mov byte ptr [rsp+0x2f], 0x0
%xor r10d, r10d
%mov byte ptr [rsp+0x2e], 0x0
%mov byte ptr [rsp+0x6], 0x0
%xor r9d, r9d
%mov qword ptr [rsp+0x18], rbx
%mov rbx, qword ptr [rip+0x20cf27]
%xor r14d, r14d
%mov byte ptr [rsp+0x7], 0x0
%mov byte ptr [rsp+0x2c], 0x0
%xor r8d, r8d
%mov byte ptr [rsp+0x2d], 0x0
%xor r12d, r12d
%xor ebp, ebp
%mov qword ptr [rsp+0x8], rbx
%mov rbx, qword ptr [rip+0x20d491]
%mov qword ptr [rsp+0x20], rbx
%movzx ebx, word ptr [rip+0x20cde5]
%mov word ptr [rsp+0x4], bx
%mov ebx, dword ptr [rip+0x20cdc2]
%mov dword ptr [rsp+0x28], ebx
%mov rbx, qword ptr [rip+0x20cdd7]
%mov qword ptr [rsp+0x10], rbx
%xor ebx, ebx
%nop dword ptr [rax+rax*1], eax
%sub rax, 0x3
%cmp rax, 0x1e
%jnbe 0x7fd16902ba0c
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
75
76
77
@78
%movsxd rax, dword ptr [rcx+rax*4]
%add rax, rcx
%jmp rax
78
@79
%mov rax, qword ptr [rdx+0x8]
%add rdx, 0x10
%mov byte ptr [rsp+0x2e], 0x1
%mov qword ptr [rsp+0x18], rax
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd16902b9f0
@80
%jmp 0x7fd16902ba20
79
@81
%sub rax, 0x3
%cmp rax, 0x1e
%jnbe 0x7fd16902ba0c
@82
%movsxd rax, dword ptr [rcx+rax*4]
%add rax, rcx
%jmp rax
81
82
@83
%mov rax, qword ptr [rdx+0x8]
%add rdx, 0x10
%mov byte ptr [rsp+0x2d], 0x1
%mov qword ptr [rsp+0x10], rax
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd16902b9f0
@84
%jmp 0x7fd16902ba20
83
81
82
@85
%mov r15, qword ptr [rdx+0x8]
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%mov r8d, 0x1
%test rax, rax
%jnz 0x7fd16902b9f0
@86
%jmp 0x7fd16902ba20
85
81
82
@87
%mov eax, dword ptr [rdx+0x8]
%add rdx, 0x10
%mov byte ptr [rsp+0x7], 0x1
%mov dword ptr [rsp+0x28], eax
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd16902b9f0
@88
%jmp 0x7fd16902ba20
87
81
82
@89
%mov rbp, qword ptr [rdx+0x8]
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd16902b9f0
@90
%nop dword ptr [rax+rax*1], eax
%test r8b, r8b
%jnz 0x7fd16902c073
@91
%test r14b, r14b
%jz 0x7fd16902ba33
89
81
82
@92
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd16902b9f0
@93
%nop dword ptr [rax+rax*1], eax
%test r8b, r8b
%jnz 0x7fd16902c073
@94
%test r14b, r14b
%jz 0x7fd16902ba33
92
81
82
@95
%mov r12d, dword ptr [rdx+0x8]
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd16902b9f0
@96
%jmp 0x7fd16902ba20
95
81
82
92
81
82
92
81
82
@97
%mov rsi, qword ptr [rdx+0x8]
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%mov r14d, 0x1
%test rax, rax
%jnz 0x7fd16902b9f0
@98
%jmp 0x7fd16902ba20
97
81
82
92
81
82
92
81
82
92
81
82
92
81
82
@99
%mov r11d, dword ptr [rdx+0x8]
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%mov ebx, 0x1
%test rax, rax
%jnz 0x7fd16902b9f0
@100
%jmp 0x7fd16902ba20
99
81
82
@101
%mov rax, qword ptr [rdx+0x8]
%add rdx, 0x10
%mov byte ptr [rsp+0x2f], 0x1
%mov qword ptr [rsp+0x20], rax
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd16902b9f0
@102
%jmp 0x7fd16902ba20
101
81
82
@103
%mov rax, qword ptr [rdx+0x8]
%add rdx, 0x10
%mov byte ptr [rsp+0x2c], 0x1
%mov qword ptr [rsp+0x8], rax
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd16902b9f0
@104
%jmp 0x7fd16902ba20
103
81
82
92
81
82
@105
%mov r9, qword ptr [rdx+0x8]
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%mov r10d, 0x1
%test rax, rax
%jnz 0x7fd16902b9f0
@106
%jmp 0x7fd16902ba20
105
106
@107
%test r8b, r8b
%jnz 0x7fd16902c073
@108
%test r14b, r14b
%jz 0x7fd16902ba33
@109
%mov qword ptr [rsp+0x40], rsi
%test bl, bl
%jz 0x7fd16902ba3e
107
@110
%mov qword ptr [rip+0x20c6fe], r15
%jmp 0x7fd16902ba29
110
@111
%test r14b, r14b
%jz 0x7fd16902ba33
@112
%mov qword ptr [rsp+0x40], rsi
%test bl, bl
%jz 0x7fd16902ba3e
@113
%mov dword ptr [rip+0x20d422], r11d
%test r10b, r10b
%jz 0x7fd16902ba4a
111
112
113
@114
%mov qword ptr [rip+0x20cd1e], r9
%cmp byte ptr [rsp+0x2d], 0x0
%jz 0x7fd16902ba5d
@115
%mov rax, qword ptr [rsp+0x10]
%mov qword ptr [rip+0x20cd5b], rax
%cmp byte ptr [rsp+0x2c], 0x0
%jz 0x7fd16902ba70
@116
%mov rax, qword ptr [rsp+0x8]
%mov qword ptr [rip+0x20ce50], rax
%cmp byte ptr [rsp+0x7], 0x0
%jz 0x7fd16902ba81
114
115
116
@117
%mov eax, dword ptr [rsp+0x28]
%mov dword ptr [rip+0x20cd17], eax
%cmp byte ptr [rsp+0x6], 0x0
%jz 0x7fd16902ba94
@118
%movzx eax, word ptr [rsp+0x4]
%mov word ptr [rip+0x20cd1c], ax
%cmp byte ptr [rsp+0x2e], 0x0
%jz 0x7fd16902baa7
@119
%mov rax, qword ptr [rsp+0x18]
%mov qword ptr [rip+0x20ce09], rax
%cmp byte ptr [rsp+0x2f], 0x0
%jz 0x7fd16902bc65
117
@120
%cmp byte ptr [rsp+0x2e], 0x0
%jz 0x7fd16902baa7
@121
%mov rax, qword ptr [rsp+0x18]
%mov qword ptr [rip+0x20ce09], rax
%cmp byte ptr [rsp+0x2f], 0x0
%jz 0x7fd16902bc65
@122
%mov rax, qword ptr [rsp+0x20]
%mov qword ptr [rip+0x20d392], rax
%jmp 0x7fd16902bc65
120
121
122
@123
%call 0x7fd169029c50
123
@124
%push r15
%push r14
%mov r15, rdi
%push r13
%push r12
%push rbp
%push rbx
%sub rsp, 0x48
%mov edx, dword ptr [rip+0x20f1f9]
%test edx, edx
%jz 0x7fd169029c90
@125
%xor esi, esi
%lea rdi, ptr [rip+0x7e47]
%mov eax, 0x15
%syscall 
124
@126
%lea rax, ptr [rsp+0x30]
%mov qword ptr [rsp+0x8], rax
%lea rax, ptr [rsp+0x38]
%mov qword ptr [rsp+0x10], rax
%test r15, r15
%jz 0x7fd169029dca
@127
%mov rbx, qword ptr [r15]
%test rbx, rbx
%jz 0x7fd169029dca
@128
%movzx esi, byte ptr [rbx]
%lea rbp, ptr [r15+0x8]
%test sil, sil
%jz 0x7fd169029e65
126
127
128
@129
%cmp sil, 0x3d
%jz 0x7fd169029e65
@130
%mov eax, 0x1
%jmp 0x7fd169029ce8
129
130
@131
%movzx edx, byte ptr [rbx+rax*1]
%lea rcx, ptr [rax+0x1]
%test dl, dl
%jnz 0x7fd169029ce0
@132
%test dl, dl
%jz 0x7fd169029e40
@133
%lea r12, ptr [rax+0x1]
%test rbp, rbp
%lea r14, ptr [rbx+r12*1]
%jz 0x7fd169029dca
131
@134
%cmp dl, 0x3d
%jz 0x7fd169029cf4
@135
%mov rax, rcx
%movzx edx, byte ptr [rbx+rax*1]
%lea rcx, ptr [rax+0x1]
%test dl, dl
%jnz 0x7fd169029ce0
@136
%test dl, dl
%jz 0x7fd169029e40
134
135
134
135
134
135
134
135
134
135
134
@137
%test dl, dl
%jz 0x7fd169029e40
@138
%lea r12, ptr [rax+0x1]
%test rbp, rbp
%lea r14, ptr [rbx+r12*1]
%jz 0x7fd169029dca
@139
%cmp sil, 0x47
%jnz 0x7fd169029d4b
137
138
139
@140
%mov r10d, dword ptr [rip+0x20f10e]
%lea rdi, ptr [rip+0x20ec4f]
%xor r8d, r8d
%nop dword ptr [rax], eax
%cmp byte ptr [rdi], 0x0
%jnz 0x7fd169029db0
@141
%mov r9, qword ptr [rdi+0x8]
%test r9, r9
%jz 0x7fd169029db0
@142
%movzx edx, byte ptr [r9]
%movzx eax, byte ptr [rbx]
%test dl, dl
%jz 0x7fd169029dac
140
141
@143
%add r8d, 0x1
%add rdi, 0x38
%cmp r8d, 0x16
%jnz 0x7fd169029d60
@144
%mov r15, rbp
%test r15, r15
%jnz 0x7fd169029cad
@145
%add rsp, 0x48
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
143
@146
%cmp byte ptr [rdi], 0x0
%jnz 0x7fd169029db0
@147
%mov r9, qword ptr [rdi+0x8]
%test r9, r9
%jz 0x7fd169029db0
@148
%movzx edx, byte ptr [r9]
%movzx eax, byte ptr [rbx]
%test dl, dl
%jz 0x7fd169029dac
146
147
143
146
147
148
@149
%test al, al
%jz 0x7fd169029db0
@150
%cmp dl, al
%jnz 0x7fd169029db0
@151
%mov rcx, r9
%mov rdx, rbx
%jmp 0x7fd169029d99
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
@152
%mov rbx, qword ptr [r15]
%test rbx, rbx
%jz 0x7fd169029dca
@153
%movzx esi, byte ptr [rbx]
%lea rbp, ptr [r15+0x8]
%test sil, sil
%jz 0x7fd169029e65
@154
%cmp sil, 0x3d
%jz 0x7fd169029e65
152
153
154
@155
%mov eax, 0x1
%jmp 0x7fd169029ce8
155
131
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
151
@156
%add rcx, 0x1
%movzx esi, byte ptr [rcx]
%add rdx, 0x1
%movzx eax, byte ptr [rdx]
%test sil, sil
%jnz 0x7fd169029d90
@157
%cmp al, 0x3d
%jz 0x7fd169029de0
@158
%add r8d, 0x1
%add rdi, 0x38
%cmp r8d, 0x16
%jnz 0x7fd169029d60
156
@159
%cmp sil, al
%jnz 0x7fd169029db0
@160
%test al, al
%jz 0x7fd169029db0
@161
%add rcx, 0x1
%movzx esi, byte ptr [rcx]
%add rdx, 0x1
%movzx eax, byte ptr [rdx]
%test sil, sil
%jnz 0x7fd169029d90
159
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
151
156
159
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
151
156
159
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
151
156
159
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
151
156
159
160
161
159
143
146
147
148
149
150
151
156
159
160
161
159
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
151
156
159
160
161
159
143
146
147
148
149
150
151
156
159
160
161
159
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
151
156
159
160
161
159
143
146
147
148
149
150
151
156
159
160
161
159
143
146
147
143
146
147
148
149
150
151
156
159
160
161
159
143
146
147
143
146
147
143
146
147
148
149
150
151
156
159
160
161
159
143
144
152
153
154
155
131
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
151
156
159
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
151
156
159
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
153
154
155
131
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
135
134
137
138
139
140
141
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
148
149
150
143
146
147
143
146
147
148
149
150
143
146
147
143
146
147
143
146
147
148
149
150
143
144
152
@162
%add rsp, 0x48
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
162
@163
%xor edi, edi
%call 0x7fd16902cec0
163
@164
%mov ecx, 0xc
%mov eax, ecx
%syscall 
164
@165
%cmp rax, 0xfffffffffffff000
%mov rdx, rax
%jnbe 0x7fd16902cee8
@166
%mov qword ptr [rip+0x20d215], rax
%xor eax, eax
%cmp rdi, rdx
%jnbe 0x7fd16902cf00
@167
%ret 
165
166
167
@168
%xor eax, eax
%mov dword ptr [rsp+0x34], 0x0
%mov dword ptr [rsp+0x38], 0x0
%cpuid 
168
@169
%cmp ebx, 0x756e6547
%mov dword ptr [rip+0x20cb3b], eax
%jnz 0x7fd16902bde8
@170
%cmp ecx, 0x6c65746e
%jnz 0x7fd16902bde8
@171
%cmp edx, 0x49656e69
%jz 0x7fd16902bf70
169
170
171
@172
%lea r14, ptr [rsp+0x48]
%lea rdx, ptr [rsp+0x3c]
%lea rsi, ptr [rsp+0x38]
%lea rdi, ptr [rsp+0x34]
%mov rcx, r14
%call 0x7fd16902b660
172
@173
%push rbx
%sub rsp, 0x88
%test rdi, rdi
%jz 0x7fd16902b6c5
@174
%mov r8, rdx
%mov r9, rcx
%mov eax, 0x1
%cpuid 
173
174
@175
%mov dword ptr [rip+0x20d15c], edx
%mov edx, eax
%mov dword ptr [rip+0x20d14c], ebx
%shr edx, 0x8
%mov dword ptr [rip+0x20d147], ecx
%mov dword ptr [rip+0x20d139], eax
%and edx, 0xf
%mov dword ptr [rdi], edx
%mov edx, eax
%shr edx, 0x4
%and edx, 0xf
%mov dword ptr [rsi], edx
%mov edx, eax
%shr edx, 0xc
%and edx, 0xf0
%mov dword ptr [r8], edx
%mov edx, eax
%and edx, 0xf
%mov dword ptr [r9], edx
%cmp dword ptr [rdi], 0xf
%jz 0x7fd16902b830
@176
%cmp dword ptr [rip+0x20d100], 0x6
%jle 0x7fd16902b6ef
@177
%mov eax, 0x7
%xor ecx, ecx
%cpuid 
175
176
177
@178
%mov dword ptr [rip+0x20d103], eax
%mov dword ptr [rip+0x20d101], ebx
%mov dword ptr [rip+0x20d0ff], ecx
%mov dword ptr [rip+0x20d0fd], edx
%mov esi, dword ptr [rip+0x20d0e3]
%test esi, 0x8000000
%jz 0x7fd16902b824
@179
%xor ecx, ecx
%xgetbv 
%mov edx, eax
%and edx, 0x6
%cmp edx, 0x6
%jz 0x7fd16902b848
@180
%cmp dword ptr [rip+0x20d0b1], 0xc
%jle 0x7fd16902b824
178
179
@181
%test esi, 0x10000000
%jz 0x7fd16902b880
@182
%mov ecx, dword ptr [rip+0x20cfbe]
%mov edx, ecx
%or edx, 0x40
%test byte ptr [rip+0x20cf82], 0x20
%mov dword ptr [rip+0x20cfac], edx
%jz 0x7fd16902b878
@183
%or ecx, 0x440
%mov edx, ecx
%mov dword ptr [rip+0x20cf9c], ecx
%and esi, 0x1000
%jnz 0x7fd16902b8c8
181
182
183
@184
%and eax, 0xe0
%cmp eax, 0xe0
%jnz 0x7fd16902b714
@185
%mov edx, dword ptr [rip+0x20cf4e]
%test edx, 0x10000
%jz 0x7fd16902b714
@186
%mov eax, dword ptr [rip+0x20cf6c]
%mov ecx, eax
%or ah, 0x10
%or ch, 0x30
%and edx, 0x20000
%cmovnz eax, ecx
%mov dword ptr [rip+0x20cf55], eax
%jmp 0x7fd16902b714
184
@187
%cmp dword ptr [rip+0x20d0b1], 0xc
%jle 0x7fd16902b824
@188
%mov esi, 0xd
%xor ecx, ecx
%mov eax, esi
%cpuid 
187
188
@189
%test ebx, ebx
%jz 0x7fd16902b824
@190
%add ebx, 0x7f
%mov ecx, 0x1
%and ebx, 0xffffffc0
%mov eax, ebx
%mov dword ptr [rip+0x20d0c9], ebx
%mov qword ptr [rip+0x20d0ba], rax
%mov eax, esi
%cpuid 
189
190
@191
%test al, 0x2
%jz 0x7fd16902b824
@192
%mov rax, 0xa000000000
%mov dword ptr [rsp-0x70], 0x240
%lea r8, ptr [rsp-0x70]
%mov qword ptr [rsp-0x78], rax
%mov rax, 0x100000000a0
%lea rdi, ptr [rsp+0x10]
%mov qword ptr [rsp+0x8], rax
%mov r9d, 0x3
%mov esi, 0x2
%mov r10d, 0xee
%mov r11d, 0xd
%jmp 0x7fd16902b7e0
191
@193
%add rsp, 0x88
%pop rbx
%ret 
193
@194
%mov edx, dword ptr [rsp+0x34]
%cmp edx, 0x6
%jz 0x7fd16902bffe
@195
%mov eax, dword ptr [rip+0x20c879]
%mov esi, dword ptr [rip+0x20c843]
%mov ecx, eax
%or ch, 0x8
%test ah, 0x4
%cmovnz eax, ecx
%mov ecx, eax
%or eax, 0x100000
%or ecx, 0x20000
%and esi, 0x8000000
%mov esi, 0x1
%cmovnz eax, ecx
%mov ecx, dword ptr [rsp+0x38]
%mov dword ptr [rip+0x20c843], eax
%jmp 0x7fd16902bcce
194
@196
%mov ecx, dword ptr [rsp+0x3c]
%add ecx, dword ptr [rsp+0x38]
%mov eax, dword ptr [rip+0x20c808]
%mov esi, dword ptr [rip+0x20c7d2]
%mov dword ptr [rsp+0x38], ecx
%sub ecx, 0x1a
%cmp ecx, 0x45
%jnbe 0x7fd16902c04a
@197
%lea rdi, ptr [rip+0x53f3]
%movsxd rcx, dword ptr [rdi+rcx*4]
%add rcx, rdi
%jmp rcx
196
197
@198
%test byte ptr [rip+0x20c78a], 0x10
%jz 0x7fd16902bfa1
@199
%or eax, 0x40031
%jmp 0x7fd16902bfa1
198
199
@200
%mov ecx, eax
%or ch, 0x8
%test ah, 0x4
%cmovnz eax, ecx
%mov ecx, eax
%or eax, 0x100000
%or ecx, 0x20000
%and esi, 0x8000000
%mov esi, 0x1
%cmovnz eax, ecx
%mov ecx, dword ptr [rsp+0x38]
%mov dword ptr [rip+0x20c843], eax
%jmp 0x7fd16902bcce
200
@201
%mov eax, dword ptr [rip+0x20cb08]
%test ah, 0x1
%jz 0x7fd16902bce3
@202
%or dword ptr [rip+0x20cb31], 0x4000
%test ah, 0x80
%jz 0x7fd16902bcf2
@203
%or dword ptr [rip+0x20cb22], 0x8000
%mov dword ptr [rip+0x20cb08], edx
%lea rdx, ptr [rip-0x12bf]
%xor edi, edi
%mov dword ptr [rip+0x20cac1], esi
%mov rsi, r14
%mov dword ptr [rip+0x20caf4], ecx
%call 0x7fd16902a250
201
202
203
@204
%mov edi, edi
%lea rcx, ptr [rip+0x20e727]
%lea rax, ptr [rdi*8]
%sub rax, rdi
%lea rax, ptr [rcx+rax*8]
%mov r8d, dword ptr [rax+0x8]
%mov rax, qword ptr [rax+0x20]
%cmp r8d, 0x2
%jnbe 0x7fd16902a280
@205
%cmp r8d, 0x1
%jnb 0x7fd16902a280
@206
%mov dword ptr [rsi], eax
%jmp 0x7fd16902a283
204
@207
%mov qword ptr [rsi], rax
%lea rax, ptr [rdi*8]
%sub rax, rdi
%shl rax, 0x3
%cmp byte ptr [rcx+rax*1+0x28], 0x0
%jz 0x7fd16902a2a8
@208
%test rdx, rdx
%jz 0x7fd16902a2a8
@209
%lea rdi, ptr [rcx+rax*1+0x20]
%jmp rdx
207
@210
%ret 
210
@211
%xor edx, edx
%mov rsi, r14
%mov edi, 0xb
%call 0x7fd16902a250
211
204
205
207
210
@212
%mov rax, qword ptr [rsp+0x48]
%xor edx, edx
%mov rsi, r14
%mov edi, 0x13
%mov qword ptr [rip+0x20caee], rax
%call 0x7fd16902a250
212
204
205
207
210
@213
%mov rax, qword ptr [rsp+0x48]
%xor edx, edx
%mov rsi, r14
%mov edi, 0xc
%mov qword ptr [rip+0x20cac3], rax
%call 0x7fd16902a250
213
204
205
207
210
@214
%cmp dword ptr [rip+0x20ca67], 0x1
%mov rax, qword ptr [rsp+0x48]
%mov qword ptr [rip+0x20ca47], 0x2
%mov qword ptr [rip+0x20caa8], rax
%jz 0x7fd16902be90
@215
%mov rdi, qword ptr [rip+0x20c9e3]
%test rdi, rdi
%jz 0x7fd16902bd96
@216
%call 0x7fd1690302f0
214
@217
%mov eax, dword ptr [rip+0x20c97e]
%test ah, 0x10
%jz 0x7fd16902bef0
@218
%mov edx, dword ptr [rip+0x20c943]
%test edx, 0x10000000
%jz 0x7fd16902bef0
@219
%test edx, 0x8000000
%jz 0x7fd16902becc
217
@220
%and eax, 0x480
%cmp eax, 0x480
%jnz 0x7fd16902bd7e
@221
%mov eax, dword ptr [rip+0x20c8de]
%and eax, 0x108
%cmp eax, 0x108
%jnz 0x7fd16902bd7e
@222
%mov eax, dword ptr [rip+0x20c8bc]
%and eax, 0xc00020
%cmp eax, 0xc00020
%jnz 0x7fd16902bd7e
220
@223
%mov rdi, qword ptr [rip+0x20c9e3]
%test rdi, rdi
%jz 0x7fd16902bd96
@224
%call 0x7fd1690302f0
223
224
@225
%pxor xmm0, xmm0
%pxor xmm1, xmm1
%pxor xmm2, xmm2
%pxor xmm3, xmm3
%mov rax, rdi
%mov rcx, rdi
%and rcx, 0xfff
%cmp rcx, 0xfcf
%jnbe 0x7fd169030380
@226
%movdqu xmm4, xmmword ptr [rax]
%pcmpeqb xmm4, xmm0
%pmovmskb edx, xmm4
%test edx, edx
%jz 0x7fd16903032a
@227
%bsf eax, edx
%ret 
225
226
227
@228
%mov qword ptr [rip+0x20c9da], rax
%xor edi, edi
%call 0x7fd16902cf10
228
@229
%push rbp
%push rbx
%mov rbp, rdi
%sub rsp, 0x8
%mov rbx, qword ptr [rip+0x20d1d0]
%test rbx, rbx
%jz 0x7fd16902cf2f
@230
%mov eax, dword ptr [rip+0x20d195]
%test eax, eax
%jz 0x7fd16902cf41
@231
%xor edi, edi
%call 0x7fd16902cec0
229
230
@232
%cmp rbp, 0x0
%jz 0x7fd16902cf67
@233
%jle 0x7fd16902cf90
@234
%mov rax, rbx
%add rax, rbp
%setb al
%test al, al
%jz 0x7fd16902cf78
232
@235
%add rsp, 0x8
%mov rax, rbx
%pop rbx
%pop rbp
%ret 
235
@236
%lea rdx, ptr [rip+0x20e3cc]
%cmp rax, rdx
%jz 0x7fd16902bf38
@237
%mov eax, dword ptr [rip+0x20d0ad]
%test eax, eax
%jnz 0x7fd16902bf60
@238
%lea rdx, ptr [rsp+0x40]
%mov esi, r12d
%mov rdi, rbp
%mov rcx, qword ptr [rip+0x20c9f3]
%call r13
236
237
238
@239
%push rbp
%lea rax, ptr [rip+0x9f68]
%mov rbp, rsp
%push r15
%push r14
%push r13
%push r12
%mov r13, rdx
%push rbx
%mov r12, rcx
%mov rbx, rdi
%sub rsp, 0x1b8
%mov qword ptr [rip+0x226935], rax
%lea rax, ptr [rip-0x15b2]
%mov dword ptr [rbp-0x1a0], esi
%mov esi, dword ptr [rip+0x2257c2]
%mov qword ptr [rip+0x2268bb], rax
%lea rax, ptr [rip-0x15bc]
%mov dword ptr [rbp-0x198], 0x0
%mov qword ptr [rip+0x2268ab], rax
%lea rax, ptr [rip+0x1163c]
%test esi, esi
%mov qword ptr [rip+0x2268a3], rax
%mov rax, qword ptr [rip+0x226a44]
%mov qword ptr [rbp-0x160], rax
%lea rax, ptr [rip+0x1d4c3]
%lea rdx, ptr [rax-0x9]
%cmovz rax, rdx
%xor r14d, r14d
%mov qword ptr [rip+0x22519c], rax
%lea rax, ptr [rbp-0x160]
%mov qword ptr [rbp-0x1a8], rax
%mov rdi, qword ptr [rbp-0x1a8]
%call 0x7fd16902c3f0
239
@240
%mov rdx, qword ptr [rdi]
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd16902c40c
@241
%jmp 0x7fd16902c430
240
@242
%cmp byte ptr [rax], 0x4c
%jnz 0x7fd16902c400
@243
%cmp byte ptr [rax+0x1], 0x44
%jnz 0x7fd16902c400
@244
%cmp byte ptr [rax+0x2], 0x5f
%jnz 0x7fd16902c400
242
@245
%add rdx, 0x8
%mov rax, qword ptr [rdx]
%test rax, rax
%jz 0x7fd16902c430
@246
%cmp byte ptr [rax], 0x4c
%jnz 0x7fd16902c400
@247
%cmp byte ptr [rax+0x1], 0x44
%jnz 0x7fd16902c400
245
246
245
246
245
246
247
245
246
245
246
247
245
246
245
246
247
245
246
245
246
245
246
245
246
245
246
245
246
245
246
245
246
245
246
245
246
245
246
245
246
245
246
245
246
247
245
246
245
246
245
246
245
246
245
246
245
246
245
246
245
246
245
246
245
246
245
246
247
245
246
245
246
245
246
245
246
245
246
245
246
245
246
247
245
246
245
246
245
246
245
246
245
246
245
246
245
246
245
@248
%ret 
248
@249
%test rax, rax
%mov r15, rax
%jz 0x7fd169013ab8
@250
%movzx edx, byte ptr [rax]
%cmp dl, 0x3d
%jz 0x7fd169013702
@251
%xor eax, eax
%test dl, dl
%jnz 0x7fd169013735
249
@252
%mov eax, dword ptr [rip+0x2253a2]
%test eax, eax
%jnz 0x7fd16901652a
@253
%mov eax, dword ptr [rip+0x224bb4]
%test eax, eax
%jz 0x7fd169013ad9
@254
%test r14, r14
%jnz 0x7fd1690149d9
252
253
@255
%lea rax, ptr [rip-0x1a50]
%cmp qword ptr [r13], rax
%jnz 0x7fd169013eab
@256
%mov rax, qword ptr [rip+0x224c4f]
%lea rcx, ptr [rbp-0x178]
%lea r14, ptr [rip+0x1dfcc]
%mov qword ptr [rbp-0x1b0], rcx
%mov rax, qword ptr [rax]
%mov qword ptr [rip+0x225ee8], rax
%mov eax, dword ptr [rip+0x224c32]
%cmp eax, 0x1
%jle 0x7fd169013b69
@257
%mov rdx, qword ptr [rip+0x224c1e]
%mov ecx, 0x7
%mov rdi, r14
%mov r10, qword ptr [rdx+0x8]
%mov rsi, r10
%rep cmpsb byte ptr [rsi], byte ptr [rdi]
255
@258
%lea rsi, ptr [rip+0x1dd6d]
%xor r9d, r9d
%xor ecx, ecx
%xor edx, edx
%mov r8d, 0x20000000
%mov rdi, rsi
%call 0x7fd16901d090
258
@259
%push r15
%push r14
%mov r15d, edx
%push r13
%push r12
%mov r14, rcx
%push rbp
%push rbx
%mov r12, r9
%mov ebx, r8d
%sub rsp, 0x38
%mov qword ptr [rsp+0x10], rdi
%mov rdi, rsi
%mov dword ptr [rsp+0x2c], r8d
%mov qword ptr [rsp+0x20], rsi
%call 0x7fd1690302f0
259
225
226
227
@260
%mov r13d, dword ptr [rip+0x21b848]
%lea rdx, ptr [rax+0x1]
%mov rbp, rax
%mov eax, ebx
%mov esi, 0x1
%sar eax, 0x19
%mov qword ptr [rsp+0x18], rdx
%and eax, 0x10
%test r13d, r13d
%cmovz r13d, eax
%mov r9d, r13d
%shl r9, 0x4
%lea rdi, ptr [r9+rbp*1+0x491]
%mov qword ptr [rsp+0x8], r9
%call 0x7fd169011ec0
260
@261
%jmp qword ptr [rip+0x22716a]
261
@262
%mov rcx, rdi
%mov eax, 0xffffffff
%mov rdx, rcx
%or rdx, rsi
%imul rdi, rsi
%cmp rdx, rax
%jbe 0x7fd16902c5fc
@263
%test rsi, rsi
%jnz 0x7fd16902c608
@264
%jmp 0x7fd169011ea0
262
@265
%jmp 0x7fd169011ea0
265
@266
%jmp qword ptr [rip+0x22717a]
266
@267
%mov rcx, qword ptr [rip+0x20dc19]
%test rcx, rcx
%jz 0x7fd16902c590
@268
%mov rdx, qword ptr [rip+0x20dc11]
%add rdx, 0xf
%and rdx, 0xfffffffffffffff0
%lea rax, ptr [rdx+rdi*1]
%mov qword ptr [rip+0x20dbfe], rdx
%cmp rax, rcx
%jnb 0x7fd16902c4ee
@269
%mov rcx, rdx
%neg rcx
%cmp rcx, rdi
%jnbe 0x7fd16902c578
267
@270
%mov rax, qword ptr [rip+0x20c1e1]
%lea rdx, ptr [rip+0x20dbd2]
%lea rcx, ptr [rax+rdx*1-0x1]
%neg rax
%and rcx, rax
%mov qword ptr [rip+0x20db20], rcx
%jmp 0x7fd16902c4c7
270
@271
%add rdx, 0xf
%and rdx, 0xfffffffffffffff0
%lea rax, ptr [rdx+rdi*1]
%mov qword ptr [rip+0x20dbfe], rdx
%cmp rax, rcx
%jnb 0x7fd16902c4ee
@272
%mov rcx, rdx
%neg rcx
%cmp rcx, rdi
%jnbe 0x7fd16902c578
@273
%push rbp
%push rbx
%sub rsp, 0x8
%mov rax, qword ptr [rip+0x20c27d]
%lea rbx, ptr [rax+rdi*1-0x1]
%mov rdx, rax
%neg rdx
%and rbx, rdx
%jnz 0x7fd16902c514
271
272
@274
%mov qword ptr [rip+0x20db59], rax
%mov qword ptr [rip+0x20db42], rdx
%mov rax, rdx
%ret 
274
@275
%test rax, rax
%mov rbx, rax
%jz 0x7fd16901d2e9
@276
%mov r9, qword ptr [rsp+0x8]
%mov r10, qword ptr [rsp+0x20]
%mov qword ptr [rbx+0x28], rax
%mov rdx, qword ptr [rsp+0x18]
%lea r9, ptr [rax+r9*1+0x470]
%mov rsi, r10
%mov qword ptr [rax+0x2c8], r9
%lea rax, ptr [r9+0x8]
%lea rdi, ptr [r9+0x20]
%mov qword ptr [rsp+0x8], r9
%mov qword ptr [rbx+0x38], rax
%call 0x7fd169030840
275
276
@277
%mov rax, rdi
%cmp rdx, 0x10
%jb 0x7fd169030860
@278
%cmp rdx, 0x20
%jnbe 0x7fd1690308a6
@279
%movups xmm0, xmmword ptr [rsi]
%movups xmm1, xmmword ptr [rsi+rdx*1-0x10]
%movups xmmword ptr [rdi], xmm0
%movups xmmword ptr [rdi+rdx*1-0x10], xmm1
%ret 
277
@280
%cmp dl, 0x8
%jnb 0x7fd169030877
@281
%cmp dl, 0x4
%jnb 0x7fd169030888
@282
%cmp dl, 0x1
%jnbe 0x7fd169030895
280
281
282
@283
%jb 0x7fd169030876
@284
%movzx ecx, byte ptr [rsi]
%mov byte ptr [rdi], cl
%ret 
283
284
@285
%mov rcx, qword ptr [rsp+0x10]
%mov r9, qword ptr [rsp+0x8]
%movzx esi, byte ptr [rcx]
%mov qword ptr [r9+0x8], rax
%add rax, rbp
%mov dword ptr [r9+0x18], 0x1
%test sil, sil
%cmovnz rax, rcx
%and r15d, 0x3
%mov qword ptr [rbx+0x8], rax
%movzx eax, byte ptr [rbx+0x314]
%and eax, 0xfffffffc
%or r15d, eax
%test byte ptr [rip+0x21b5da], 0x1
%mov byte ptr [rbx+0x314], r15b
%jz 0x7fd16901d300
@286
%test r13d, r13d
%mov qword ptr [rbx+0x2d8], r14
%mov qword ptr [rbx+0x30], r12
%jz 0x7fd16901d1cc
@287
%lea edx, ptr [r13-0x1]
%lea rax, ptr [rbx+0x470]
%shl rdx, 0x4
%lea rdx, ptr [rbx+rdx*1+0x480]
%nop dword ptr [rax+rax*1], eax
%mov qword ptr [rax], rbx
%add rax, 0x10
%cmp rax, rdx
%jnz 0x7fd16901d1c0
285
@288
%mov dword ptr [rbx+0x3cc], 0x1
%jmp 0x7fd16901d194
288
@289
%test r13d, r13d
%mov qword ptr [rbx+0x2d8], r14
%mov qword ptr [rbx+0x30], r12
%jz 0x7fd16901d1cc
@290
%lea edx, ptr [r13-0x1]
%lea rax, ptr [rbx+0x470]
%shl rdx, 0x4
%lea rdx, ptr [rbx+rdx*1+0x480]
%nop dword ptr [rax+rax*1], eax
%mov qword ptr [rax], rbx
%add rax, 0x10
%cmp rax, rdx
%jnz 0x7fd16901d1c0
@291
%lea rax, ptr [r12+r12*8]
%lea rdi, ptr [rip+0x21be89]
%lea rdx, ptr [rbx+0x358]
%mov qword ptr [rbx+0x378], 0x4
%shl rax, 0x4
%mov qword ptr [rbx+0x380], rdx
%mov rax, qword ptr [rdi+rax*1]
%test rax, rax
%jz 0x7fd16901d3b8
289
290
@292
%mov qword ptr [rax], rbx
%add rax, 0x10
%cmp rax, rdx
%jnz 0x7fd16901d1c0
@293
%lea rax, ptr [r12+r12*8]
%lea rdi, ptr [rip+0x21be89]
%lea rdx, ptr [rbx+0x358]
%mov qword ptr [rbx+0x378], 0x4
%shl rax, 0x4
%mov qword ptr [rbx+0x380], rdx
%mov rax, qword ptr [rdi+rax*1]
%test rax, rax
%jz 0x7fd16901d3b8
@294
%add rax, 0x2b8
%test r14, r14
%mov edi, 0x1
%mov qword ptr [rbx+0x358], rax
%jnz 0x7fd16901d223
292
292
292
292
292
292
292
292
292
292
292
292
292
292
292
293
@295
%xor edi, edi
%test r14, r14
%jnz 0x7fd16901d223
@296
%mov r14, rbx
%jmp 0x7fd16901d237
295
296
@297
%lea rcx, ptr [r14+0x2b8]
%mov qword ptr [rdx], rcx
%lea rax, ptr [rbx+0x2b8]
%test sil, sil
%mov byte ptr [rsp+0x18], sil
%mov qword ptr [rbx+0x388], rax
%jz 0x7fd16901d2e9
@298
%mov rdi, qword ptr [rsp+0x10]
%xor r12d, r12d
%call 0x7fd1690302f0
297
@299
%add rsp, 0x38
%mov rax, rbx
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
299
@300
%test rax, rax
%mov r14, rax
%jz 0x7fd169016476
@301
%mov qword ptr [rax+0x2a0], rbx
%movzx eax, word ptr [rbp-0x1a0]
%xor esi, esi
%mov rdi, r14
%mov word ptr [r14+0x2b0], ax
%mov rax, qword ptr [r13]
%mov qword ptr [r14+0x2a8], rax
%call 0x7fd16901d000
300
301
@302
%push r12
%push rbp
%lea rbp, ptr [rip+0x21c056]
%push rbx
%mov rbx, rsi
%mov r12, rdi
%lea rdi, ptr [rbp+0x930]
%call qword ptr [rip+0x21cf42]
302
@303
%add dword ptr [rdi+0x4], 0x1
%ret 
303
@304
%lea rax, ptr [rbx+rbx*8]
%shl rax, 0x4
%add rax, rbp
%mov rdx, qword ptr [rax]
%test rdx, rdx
%jnz 0x7fd16901d03b
@305
%jmp 0x7fd16901d088
304
305
@306
%mov qword ptr [rax], r12
%jmp 0x7fd16901d04d
306
@307
%lea rax, ptr [rbx+rbx*8]
%lea rdi, ptr [rip+0x21c938]
%shl rax, 0x4
%add dword ptr [rbp+rax*1+0x8], 0x1
%mov rax, qword ptr [rip+0x21c950]
%pop rbx
%pop rbp
%mov qword ptr [r12+0x468], rax
%add rax, 0x1
%pop r12
%mov qword ptr [rip+0x21c939], rax
%jmp qword ptr [rip+0x21cee3]
307
@308
%sub dword ptr [rdi+0x4], 0x1
%ret 
308
@309
%cmp qword ptr [rip+0x22515b], r14
%jnz 0x7fd169016457
@310
%xor r13d, r13d
%mov edx, dword ptr [rbp-0x1a0]
%add dword ptr [r14+0x310], 0x1
%mov qword ptr [r14+0x348], 0x0
%mov qword ptr [r14+0x350], 0x0
%mov qword ptr [r14+0x340], 0xffffffffffffffff
%lea rax, ptr [rdx*8]
%sub rax, rdx
%lea r9, ptr [rbx+rax*8]
%cmp r9, rbx
%jbe 0x7fd16901643f
@311
%mov rsi, qword ptr [rip+0x22481c]
%mov rax, rbx
%xor r12d, r12d
%lea r8, ptr [rip+0x2260c7]
%lea rdi, ptr [rip+0x2260a0]
%neg rsi
%jmp 0x7fd169013f9d
309
310
311
@312
%mov edx, dword ptr [rax]
%cmp edx, 0x6
%jz 0x7fd169014900
@313
%jbe 0x7fd169013f75
@314
%cmp edx, 0x6474e551
%jz 0x7fd1690149cb
312
@315
%mov rdx, rbx
%sub rdx, qword ptr [rax+0x10]
%mov qword ptr [r14], rdx
%jmp 0x7fd169013f90
315
@316
%add rax, 0x38
%cmp r9, rax
%jbe 0x7fd169014034
@317
%mov edx, dword ptr [rax]
%cmp edx, 0x6
%jz 0x7fd169014900
@318
%jbe 0x7fd169013f75
316
317
318
@319
%cmp edx, 0x2
%jz 0x7fd1690148c6
@320
%cmp edx, 0x3
%jz 0x7fd16901489c
@321
%cmp edx, 0x1
%jz 0x7fd169014950
319
320
@322
%mov rdx, qword ptr [r14]
%add rdx, qword ptr [rax+0x10]
%cmp qword ptr [rip+0x225155], 0x0
%mov qword ptr [rip+0x225176], r8
%mov qword ptr [r8], rdx
%jz 0x7fd169014bb5
@323
%mov r12d, 0x1
%jmp 0x7fd169013f90
322
323
316
317
318
319
320
321
@324
%mov rdx, qword ptr [rax+0x10]
%mov r10, qword ptr [r14]
%mov rcx, rdx
%and rcx, rsi
%add rcx, r10
%cmp qword ptr [r14+0x340], rcx
%jbe 0x7fd169014970
@325
%mov qword ptr [r14+0x340], rcx
%add rdx, qword ptr [rax+0x28]
%add rdx, r10
%cmp qword ptr [r14+0x348], rdx
%jnb 0x7fd169014987
@326
%mov qword ptr [r14+0x348], rdx
%test byte ptr [rax+0x4], 0x1
%jz 0x7fd169013f90
324
325
326
@327
%cmp qword ptr [r14+0x350], rdx
%jnb 0x7fd169013f90
@328
%mov qword ptr [r14+0x350], rdx
%jmp 0x7fd169013f90
327
328
316
317
318
319
320
321
324
@329
%add rdx, qword ptr [rax+0x28]
%add rdx, r10
%cmp qword ptr [r14+0x348], rdx
%jnb 0x7fd169014987
@330
%mov qword ptr [r14+0x348], rdx
%test byte ptr [rax+0x4], 0x1
%jz 0x7fd169013f90
@331
%cmp qword ptr [r14+0x350], rdx
%jnb 0x7fd169013f90
329
330
316
317
318
319
@332
%mov rdx, qword ptr [r14]
%add rdx, qword ptr [rax+0x10]
%mov qword ptr [r14+0x10], rdx
%jmp 0x7fd169013f90
332
316
317
318
319
320
321
316
317
318
@333
%cmp edx, 0x6474e551
%jz 0x7fd1690149cb
@334
%cmp edx, 0x6474e552
%jz 0x7fd1690149b0
@335
%cmp edx, 0x7
%jnz 0x7fd169013f90
333
334
335
316
317
318
333
@336
%mov edx, dword ptr [rax+0x4]
%mov dword ptr [rip+0x2255a4], edx
%jmp 0x7fd169013f90
336
316
317
318
333
334
@337
%mov rdx, qword ptr [rax+0x10]
%mov qword ptr [r14+0x458], rdx
%mov rdx, qword ptr [rax+0x28]
%mov qword ptr [r14+0x460], rdx
%jmp 0x7fd169013f90
337
316
@338
%mov rax, qword ptr [r14+0x418]
%test rax, rax
%jz 0x7fd16901404a
@339
%add rax, qword ptr [r14]
%mov qword ptr [r14+0x418], rax
%cmp qword ptr [r14+0x348], 0x0
%jnz 0x7fd16901405f
@340
%mov qword ptr [r14+0x348], 0xffffffffffffffff
%cmp qword ptr [r14+0x350], 0x0
%jnz 0x7fd169014074
338
@341
%cmp qword ptr [r14+0x348], 0x0
%jnz 0x7fd16901405f
@342
%mov qword ptr [r14+0x348], 0xffffffffffffffff
%cmp qword ptr [r14+0x350], 0x0
%jnz 0x7fd169014074
@343
%mov qword ptr [r14+0x350], 0xffffffffffffffff
%mov rbx, qword ptr [rip+0x2259ad]
%test rbx, rbx
%jz 0x7fd1690148d6
341
@344
%cmp qword ptr [r14+0x350], 0x0
%jnz 0x7fd169014074
@345
%mov qword ptr [r14+0x350], 0xffffffffffffffff
%mov rbx, qword ptr [rip+0x2259ad]
%test rbx, rbx
%jz 0x7fd1690148d6
@346
%mov rax, qword ptr [rip+0x225a15]
%test rax, rax
%jz 0x7fd1690140ee
344
@347
%mov rbx, qword ptr [rip+0x2259ad]
%test rbx, rbx
%jz 0x7fd1690148d6
@348
%mov rax, qword ptr [rip+0x225a15]
%test rax, rax
%jz 0x7fd1690140ee
@349
%mov rdx, qword ptr [rax+0x8]
%mov rax, qword ptr [rip+0x2259bd]
%mov rdi, qword ptr [rbx]
%add rdx, qword ptr [rax+0x8]
%mov rsi, rdx
%mov qword ptr [rbp-0x1a0], rdx
%call 0x7fd16902e360
347
348
349
@350
%mov ecx, esi
%mov eax, edi
%and rcx, 0x3f
%and rax, 0x3f
%cmp ecx, 0x30
%jnbe 0x7fd16902e3b0
@351
%cmp eax, 0x30
%jnbe 0x7fd16902e3b0
@352
%movlpd xmm1, qword ptr [rdi]
%movlpd xmm2, qword ptr [rsi]
%movhpd xmm1, qword ptr [rdi+0x8]
%movhpd xmm2, qword ptr [rsi+0x8]
%pxor xmm0, xmm0
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f770
350
351
@353
%and rsi, 0xfffffffffffffff0
%and rdi, 0xfffffffffffffff0
%mov edx, 0xffff
%xor r8d, r8d
%and ecx, 0xf
%and eax, 0xf
%cmp ecx, eax
%jz 0x7fd16902e3f0
@354
%jnbe 0x7fd16902e3d3
@355
%mov r8d, edx
%xchg ecx, eax
%xchg rdi, rsi
%lea r9, ptr [rax+0xf]
%sub r9, rcx
%lea r10, ptr [rip+0x3507]
%movsxd r9, dword ptr [r10+r9*4]
%lea r10, ptr [r10+r9*1]
%jmp r10
353
354
355
@356
%pxor xmm0, xmm0
%movdqa xmm2, xmmword ptr [rdi]
%movdqa xmm1, xmmword ptr [rsi]
%pcmpeqb xmm0, xmm1
%pslldq xmm2, 0x7
%pcmpeqb xmm2, xmm1
%psubb xmm2, xmm0
%pmovmskb r9d, xmm2
%shr edx, cl
%shr r9d, cl
%sub edx, r9d
%jnz 0x7fd16902f755
@357
%movdqa xmm3, xmmword ptr [rdi]
%pxor xmm0, xmm0
%mov rcx, 0x10
%mov r9d, 0x9
%lea r10, ptr [rdi+0x9]
%and r10, 0xfff
%sub r10, 0x1000
%nop word ptr [rax+rax*1], ax
%add r10, 0x10
%jnle 0x7fd16902ef90
@358
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%movdqa xmm4, xmm2
%psrldq xmm3, 0x9
%pslldq xmm2, 0x7
%por xmm2, xmm3
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
356
@359
%lea rdi, ptr [rdi+rax*1]
%lea rsi, ptr [rsi+rcx*1]
%test r8d, r8d
%jz 0x7fd16902f770
@360
%xchg rdi, rsi
%nop
%nop word ptr [rax+rax*1], ax
%bsf rdx, rdx
%movzx ecx, byte ptr [rsi+rdx*1]
%movzx eax, byte ptr [rdi+rdx*1]
%sub eax, ecx
%ret 
359
360
@361
%test eax, eax
%jz 0x7fd1690140ee
@362
%mov qword ptr [rip+0x225f28], 0x0
%cmp qword ptr [rbx+0x8], 0x0
%mov rdx, qword ptr [rbp-0x1a0]
%mov dword ptr [rip+0x225f1a], 0x1
%mov qword ptr [rip+0x225f03], rdx
%jnz 0x7fd169016705
@363
%lea rax, ptr [rip+0x225ef6]
%mov qword ptr [rbx+0x8], rax
%test byte ptr [rip+0x225c0f], 0x4
%jz 0x7fd1690166e6
361
362
363
@364
%test r13b, r13b
%jnz 0x7fd1690142b6
@365
%mov rdx, qword ptr [r14+0x10]
%test rdx, rdx
%jz 0x7fd1690142ae
@366
%mov rax, qword ptr [rdx]
%lea rcx, ptr [r14+0x40]
%test rax, rax
%jz 0x7fd16901417c
364
365
366
@367
%mov r11d, 0x6fffffff
%mov r10d, 0x6ffffdff
%mov ebx, 0x6ffffeff
%mov r9, 0x37ffffa00
%mov r8, 0x37ffff1a0
%mov edi, 0x31
%mov r13d, 0x70000021
%cmp rax, 0x21
%jbe 0x7fd16901416c
@368
%mov rsi, r11
%sub rsi, rax
%cmp rsi, 0xf
%jnbe 0x7fd16901490f
@369
%mov rsi, r13
%sub rsi, rax
%mov rax, rsi
%mov qword ptr [rcx+rax*8], rdx
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd16901414d
367
@370
%mov qword ptr [rcx+rax*8], rdx
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd16901414d
@371
%mov rax, qword ptr [r14]
%test rax, rax
%jz 0x7fd1690141f5
@372
%mov rdx, qword ptr [r14+0x60]
%test rdx, rdx
%jz 0x7fd169014191
370
@373
%cmp rax, 0x21
%jbe 0x7fd16901416c
@374
%mov rsi, r11
%sub rsi, rax
%cmp rsi, 0xf
%jnbe 0x7fd16901490f
@375
%mov rsi, r13
%sub rsi, rax
%mov rax, rsi
%mov qword ptr [rcx+rax*8], rdx
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd16901414d
373
370
373
370
373
370
373
370
373
370
373
370
373
374
@376
%lea esi, ptr [rax+rax*1]
%sar esi, 0x1
%cmp esi, 0xfffffffc
%jbe 0x7fd169014926
@377
%mov eax, edi
%sub eax, esi
%mov qword ptr [rcx+rax*8], rdx
%jmp 0x7fd169014170
376
@378
%mov rsi, r10
%sub rsi, rax
%cmp rsi, 0xb
%jnbe 0x7fd169014b4e
@379
%imul rax, rax, 0xfffffffffffffff8
%add rax, rcx
%mov qword ptr [rax+r8*1], rdx
%jmp 0x7fd169014170
378
@380
%mov rsi, rbx
%sub rsi, rax
%cmp rsi, 0xa
%jnbe 0x7fd169014170
@381
%imul rax, rax, 0xfffffffffffffff8
%add rax, rcx
%mov qword ptr [rax+r9*1], rdx
%jmp 0x7fd169014170
380
381
@382
%add rdx, 0x10
%mov rax, qword ptr [rdx]
%test rax, rax
%jnz 0x7fd16901414d
@383
%mov rax, qword ptr [r14]
%test rax, rax
%jz 0x7fd1690141f5
@384
%mov rdx, qword ptr [r14+0x60]
%test rdx, rdx
%jz 0x7fd169014191
382
373
370
373
370
373
370
373
370
373
370
373
370
373
370
373
370
373
370
373
370
373
370
373
370
373
370
373
374
375
373
374
375
373
374
375
373
374
375
373
374
375
@385
%mov rax, qword ptr [r14]
%test rax, rax
%jz 0x7fd1690141f5
@386
%mov rdx, qword ptr [r14+0x60]
%test rdx, rdx
%jz 0x7fd169014191
@387
%add qword ptr [rdx+0x8], rax
%mov rdx, qword ptr [r14+0x58]
%test rdx, rdx
%jz 0x7fd16901419e
385
386
@388
%mov rdx, qword ptr [r14+0x58]
%test rdx, rdx
%jz 0x7fd16901419e
@389
%add qword ptr [rdx+0x8], rax
%mov rdx, qword ptr [r14+0x68]
%test rdx, rdx
%jz 0x7fd1690141ab
@390
%add qword ptr [rdx+0x8], rax
%mov rdx, qword ptr [r14+0x70]
%test rdx, rdx
%jz 0x7fd1690141b8
388
389
390
@391
%add qword ptr [rdx+0x8], rax
%mov rdx, qword ptr [r14+0x78]
%test rdx, rdx
%jz 0x7fd1690141c5
@392
%add qword ptr [rdx+0x8], rax
%mov rdx, qword ptr [r14+0xf8]
%test rdx, rdx
%jz 0x7fd1690141d5
@393
%add qword ptr [rdx+0x8], rax
%mov rdx, qword ptr [r14+0x1c8]
%test rdx, rdx
%jz 0x7fd1690141e5
391
392
393
@394
%add qword ptr [rdx+0x8], rax
%mov rdx, qword ptr [r14+0x298]
%test rdx, rdx
%jz 0x7fd1690141f5
@395
%add qword ptr [rdx+0x8], rax
%mov rax, qword ptr [r14+0xe0]
%test rax, rax
%jz 0x7fd16901420c
@396
%cmp qword ptr [rax+0x8], 0x7
%jnz 0x7fd169016762
394
395
396
@397
%cmp qword ptr [r14+0x78], 0x0
%jz 0x7fd169014225
@398
%mov rax, qword ptr [r14+0x88]
%cmp qword ptr [rax+0x8], 0x18
%jnz 0x7fd169016743
@399
%mov rax, qword ptr [r14+0x130]
%test rax, rax
%jz 0x7fd169014260
397
398
399
@400
%mov rdx, qword ptr [rax+0x8]
%test dl, 0x2
%mov dword ptr [r14+0x3d8], edx
%jz 0x7fd169014248
@401
%mov qword ptr [r14+0xc0], rax
%test dl, 0x4
%jz 0x7fd169014254
@402
%mov qword ptr [r14+0xf0], rax
%and edx, 0x8
%jz 0x7fd169014260
400
@403
%test dl, 0x4
%jz 0x7fd169014254
@404
%mov qword ptr [r14+0xf0], rax
%and edx, 0x8
%jz 0x7fd169014260
@405
%mov qword ptr [r14+0x100], rax
%mov rax, qword ptr [r14+0x170]
%test rax, rax
%jz 0x7fd169014299
403
@406
%and edx, 0x8
%jz 0x7fd169014260
@407
%mov qword ptr [r14+0x100], rax
%mov rax, qword ptr [r14+0x170]
%test rax, rax
%jz 0x7fd169014299
@408
%test byte ptr [rip+0x2244ed], 0x40
%mov rax, qword ptr [rax+0x8]
%mov edx, eax
%mov dword ptr [r14+0x3d4], eax
%jnz 0x7fd169014b6e
406
407
408
@409
%and edx, 0x1
%jz 0x7fd169014299
@410
%mov rax, qword ptr [r14+0x170]
%mov qword ptr [r14+0x100], rax
%cmp qword ptr [r14+0x128], 0x0
%jz 0x7fd1690142ae
@411
%mov qword ptr [r14+0xb8], 0x0
%mov rdi, r14
%call 0x7fd16901cf50
409
410
@412
%mov rdi, r14
%call 0x7fd16901cf50
412
68
69
70
@413
%cmp dword ptr [rbp-0x198], 0x2
%jz 0x7fd1690166c2
@414
%cmp qword ptr [rip+0x2245e5], 0x0
%jz 0x7fd1690147f3
@415
%lea rsi, ptr [rip+0x1d947]
%xor r9d, r9d
%xor r8d, r8d
%xor ecx, ecx
%mov edx, 0x1
%mov rdi, rsi
%call 0x7fd16901d090
413
414
415
259
225
226
227
260
261
262
265
266
267
268
269
274
275
276
277
280
281
282
283
284
285
288
289
@416
%lea rax, ptr [r12+r12*8]
%lea rdi, ptr [rip+0x21be89]
%lea rdx, ptr [rbx+0x358]
%mov qword ptr [rbx+0x378], 0x4
%shl rax, 0x4
%mov qword ptr [rbx+0x380], rdx
%mov rax, qword ptr [rdi+rax*1]
%test rax, rax
%jz 0x7fd16901d3b8
@417
%add rax, 0x2b8
%test r14, r14
%mov edi, 0x1
%mov qword ptr [rbx+0x358], rax
%jnz 0x7fd16901d223
@418
%mov r14, rbx
%jmp 0x7fd16901d317
416
417
418
@419
%lea rcx, ptr [r14+0x2b8]
%cmp rcx, rax
%jz 0x7fd16901d241
@420
%test byte ptr [rsp+0x2c], 0x8
%jz 0x7fd16901d3d0
@421
%mov qword ptr [rbx+0x360], rax
%jmp 0x7fd16901d23e
419
420
@422
%lea rdx, ptr [rbx+0x360]
%jmp 0x7fd16901d23e
422
@423
%mov qword ptr [rdx], rcx
%lea rax, ptr [rbx+0x2b8]
%test sil, sil
%mov byte ptr [rsp+0x18], sil
%mov qword ptr [rbx+0x388], rax
%jz 0x7fd16901d2e9
@424
%mov rdi, qword ptr [rsp+0x10]
%xor r12d, r12d
%call 0x7fd1690302f0
423
299
@425
%test rax, rax
%mov rbx, rax
%jz 0x7fd1690147f3
@426
%mov rax, qword ptr [rip+0x2245b0]
%movzx esi, word ptr [rax+0x38]
%mov rdx, qword ptr [rax+0x20]
%add rdx, rax
%test rsi, rsi
%mov qword ptr [rbx+0x2a0], rdx
%mov word ptr [rbx+0x2b0], si
%jz 0x7fd169014372
@427
%xor edi, edi
%jmp 0x7fd169014347
425
426
427
@428
%mov ecx, dword ptr [rdx]
%cmp ecx, 0x2
%jnz 0x7fd169014328
@429
%mov rcx, qword ptr [rdx+0x10]
%add rdi, 0x1
%add rdx, 0x38
%mov qword ptr [rbx+0x10], rcx
%mov rcx, qword ptr [rdx-0x10]
%shr rcx, 0x4
%cmp rdi, rsi
%mov word ptr [rbx+0x2b2], cx
%jnz 0x7fd169014347
@430
%mov qword ptr [rbx+0x340], rax
%sub rax, qword ptr [rbx]
%mov rcx, qword ptr [rbx+0x10]
%add qword ptr [rbx+0x348], rax
%add qword ptr [rbx+0x350], rax
%add rcx, rax
%mov qword ptr [rbx], rax
%test rcx, rcx
%mov qword ptr [rbx+0x10], rcx
%jz 0x7fd1690146b7
428
@431
%cmp ecx, 0x1
%jz 0x7fd169014450
@432
%cmp ecx, 0x7
%jz 0x7fd1690166a3
@433
%add rdi, 0x1
%add rdx, 0x38
%cmp rdi, rsi
%jz 0x7fd169014372
431
@434
%cmp qword ptr [rbx], 0x0
%mov rcx, qword ptr [rdx+0x10]
%jnz 0x7fd16901445d
@435
%mov qword ptr [rbx], rcx
%add rcx, qword ptr [rdx+0x28]
%cmp rcx, qword ptr [rbx+0x348]
%jb 0x7fd169014471
@436
%mov qword ptr [rbx+0x348], rcx
%test byte ptr [rdx+0x4], 0x1
%jz 0x7fd16901433a
434
435
436
@437
%cmp rcx, qword ptr [rbx+0x350]
%jb 0x7fd16901433a
@438
%mov qword ptr [rbx+0x350], rcx
%jmp 0x7fd16901433a
437
438
@439
%add rdi, 0x1
%add rdx, 0x38
%cmp rdi, rsi
%jz 0x7fd169014372
@440
%mov ecx, dword ptr [rdx]
%cmp ecx, 0x2
%jnz 0x7fd169014328
@441
%mov rcx, qword ptr [rdx+0x10]
%add rdi, 0x1
%add rdx, 0x38
%mov qword ptr [rbx+0x10], rcx
%mov rcx, qword ptr [rdx-0x10]
%shr rcx, 0x4
%cmp rdi, rsi
%mov word ptr [rbx+0x2b2], cx
%jnz 0x7fd169014347
439
440
441
428
431
432
433
428
431
432
433
@442
%mov qword ptr [rbx+0x340], rax
%sub rax, qword ptr [rbx]
%mov rcx, qword ptr [rbx+0x10]
%add qword ptr [rbx+0x348], rax
%add qword ptr [rbx+0x350], rax
%add rcx, rax
%mov qword ptr [rbx], rax
%test rcx, rcx
%mov qword ptr [rbx+0x10], rcx
%jz 0x7fd1690146b7
@443
%mov rdx, qword ptr [rcx]
%lea rsi, ptr [rbx+0x40]
%test rdx, rdx
%jz 0x7fd16901440a
@444
%mov r11d, 0x6fffffff
%mov r12d, 0x6ffffdff
%mov r13d, 0x6ffffeff
%mov r10, 0x37ffffa00
%mov r9, 0x37ffff1a0
%mov r8d, 0x31
%cmp rdx, 0x21
%jbe 0x7fd1690143fa
442
443
444
@445
%mov qword ptr [rsi+rdx*8], rcx
%add rcx, 0x10
%mov rdx, qword ptr [rcx]
%test rdx, rdx
%jnz 0x7fd1690143d9
@446
%test rax, rax
%jz 0x7fd169014600
@447
%mov rdx, qword ptr [rbx+0x60]
%test rdx, rdx
%jz 0x7fd169014494
445
@448
%cmp rdx, 0x21
%jbe 0x7fd1690143fa
@449
%mov rdi, r11
%sub rdi, rdx
%cmp rdi, 0xf
%jnbe 0x7fd169014811
@450
%mov edi, 0x70000021
%sub rdi, rdx
%mov rdx, rdi
%mov qword ptr [rsi+rdx*8], rcx
%add rcx, 0x10
%mov rdx, qword ptr [rcx]
%test rdx, rdx
%jnz 0x7fd1690143d9
448
445
448
445
448
449
@451
%lea edi, ptr [rdx+rdx*1]
%sar edi, 0x1
%cmp edi, 0xfffffffc
%jbe 0x7fd169014a66
@452
%mov edx, r8d
%sub edx, edi
%mov qword ptr [rsi+rdx*8], rcx
%jmp 0x7fd1690143fe
451
@453
%mov rdi, r12
%sub rdi, rdx
%cmp rdi, 0xb
%jnbe 0x7fd169014acf
@454
%imul rdx, rdx, 0xfffffffffffffff8
%add rdx, rsi
%mov qword ptr [rdx+r9*1], rcx
%jmp 0x7fd1690143fe
453
@455
%mov rdi, r13
%sub rdi, rdx
%cmp rdi, 0xa
%jnbe 0x7fd1690143fe
@456
%imul rdx, rdx, 0xfffffffffffffff8
%add rdx, rsi
%mov qword ptr [rdx+r10*1], rcx
%jmp 0x7fd1690143fe
455
456
@457
%add rcx, 0x10
%mov rdx, qword ptr [rcx]
%test rdx, rdx
%jnz 0x7fd1690143d9
@458
%test rax, rax
%jz 0x7fd169014600
@459
%mov rdx, qword ptr [rbx+0x60]
%test rdx, rdx
%jz 0x7fd169014494
457
448
445
448
445
448
445
448
445
448
449
450
448
449
450
448
445
448
449
450
@460
%test rax, rax
%jz 0x7fd169014600
@461
%mov rdx, qword ptr [rbx+0x60]
%test rdx, rdx
%jz 0x7fd169014494
@462
%mov rcx, qword ptr [rdx]
%mov qword ptr [rip+0x22427a], rcx
%mov rcx, qword ptr [rdx+0x8]
%mov edx, 0x1
%add rcx, rax
%mov qword ptr [rip+0x22426f], rcx
%lea rcx, ptr [rip+0x224260]
%mov qword ptr [rbx+0x60], rcx
%jmp 0x7fd169014496
460
461
462
@463
%mov rsi, qword ptr [rbx+0x58]
%test rsi, rsi
%jz 0x7fd1690144c8
@464
%movsxd rcx, edx
%lea rdi, ptr [rip+0x2241f7]
%add edx, 0x1
%shl rcx, 0x4
%add rcx, rdi
%mov rdi, qword ptr [rsi]
%mov qword ptr [rcx], rdi
%mov rdi, qword ptr [rsi+0x8]
%add rdi, rax
%mov qword ptr [rcx+0x8], rdi
%mov qword ptr [rbx+0x58], rcx
%mov rsi, qword ptr [rbx+0x68]
%test rsi, rsi
%jz 0x7fd1690144fa
@465
%movsxd rcx, edx
%lea rdi, ptr [rip+0x2241c5]
%add edx, 0x1
%shl rcx, 0x4
%add rcx, rdi
%mov rdi, qword ptr [rsi]
%mov qword ptr [rcx], rdi
%mov rdi, qword ptr [rsi+0x8]
%add rdi, rax
%mov qword ptr [rcx+0x8], rdi
%mov qword ptr [rbx+0x68], rcx
%mov rsi, qword ptr [rbx+0x70]
%test rsi, rsi
%jz 0x7fd16901452c
463
@466
%mov rsi, qword ptr [rbx+0x68]
%test rsi, rsi
%jz 0x7fd1690144fa
@467
%movsxd rcx, edx
%lea rdi, ptr [rip+0x2241c5]
%add edx, 0x1
%shl rcx, 0x4
%add rcx, rdi
%mov rdi, qword ptr [rsi]
%mov qword ptr [rcx], rdi
%mov rdi, qword ptr [rsi+0x8]
%add rdi, rax
%mov qword ptr [rcx+0x8], rdi
%mov qword ptr [rbx+0x68], rcx
%mov rsi, qword ptr [rbx+0x70]
%test rsi, rsi
%jz 0x7fd16901452c
@468
%movsxd rcx, edx
%lea rdi, ptr [rip+0x224193]
%add edx, 0x1
%shl rcx, 0x4
%add rcx, rdi
%mov rdi, qword ptr [rsi]
%mov qword ptr [rcx], rdi
%mov rdi, qword ptr [rsi+0x8]
%add rdi, rax
%mov qword ptr [rcx+0x8], rdi
%mov qword ptr [rbx+0x70], rcx
%mov rsi, qword ptr [rbx+0x78]
%test rsi, rsi
%jz 0x7fd16901455e
466
467
468
@469
%mov rsi, qword ptr [rbx+0xf8]
%test rsi, rsi
%jz 0x7fd169014596
@470
%movsxd rcx, edx
%lea rdi, ptr [rip+0x22412c]
%add edx, 0x1
%shl rcx, 0x4
%add rcx, rdi
%mov rdi, qword ptr [rsi]
%mov qword ptr [rcx], rdi
%mov rdi, qword ptr [rsi+0x8]
%add rdi, rax
%mov qword ptr [rcx+0x8], rdi
%mov qword ptr [rbx+0xf8], rcx
%mov rsi, qword ptr [rbx+0x1c8]
%test rsi, rsi
%jz 0x7fd1690145ce
@471
%movsxd rcx, edx
%lea rdi, ptr [rip+0x2240f4]
%add edx, 0x1
%shl rcx, 0x4
%add rcx, rdi
%mov rdi, qword ptr [rsi]
%mov qword ptr [rcx], rdi
%mov rdi, qword ptr [rsi+0x8]
%add rdi, rax
%mov qword ptr [rcx+0x8], rdi
%mov qword ptr [rbx+0x1c8], rcx
%mov rcx, qword ptr [rbx+0x298]
%test rcx, rcx
%jz 0x7fd169014600
469
@472
%mov rsi, qword ptr [rbx+0x1c8]
%test rsi, rsi
%jz 0x7fd1690145ce
@473
%movsxd rcx, edx
%lea rdi, ptr [rip+0x2240f4]
%add edx, 0x1
%shl rcx, 0x4
%add rcx, rdi
%mov rdi, qword ptr [rsi]
%mov qword ptr [rcx], rdi
%mov rdi, qword ptr [rsi+0x8]
%add rdi, rax
%mov qword ptr [rcx+0x8], rdi
%mov qword ptr [rbx+0x1c8], rcx
%mov rcx, qword ptr [rbx+0x298]
%test rcx, rcx
%jz 0x7fd169014600
@474
%lea rsi, ptr [rip+0x2240bf]
%movsxd rdx, edx
%add rax, qword ptr [rcx+0x8]
%shl rdx, 0x4
%add rdx, rsi
%mov rsi, qword ptr [rcx]
%mov qword ptr [rdx+0x8], rax
%mov qword ptr [rdx], rsi
%mov qword ptr [rbx+0x298], rdx
%mov rax, qword ptr [rbx+0xe0]
%test rax, rax
%jz 0x7fd169014617
472
473
474
@475
%cmp qword ptr [rbx+0x78], 0x0
%jz 0x7fd169014630
@476
%mov rax, qword ptr [rbx+0x88]
%cmp qword ptr [rax+0x8], 0x18
%jnz 0x7fd169016743
@477
%mov rax, qword ptr [rbx+0x130]
%test rax, rax
%jz 0x7fd16901466a
475
@478
%mov rax, qword ptr [rbx+0x130]
%test rax, rax
%jz 0x7fd16901466a
@479
%mov rdx, qword ptr [rax+0x8]
%test dl, 0x2
%mov dword ptr [rbx+0x3d8], edx
%jz 0x7fd169014652
@480
%mov qword ptr [rbx+0xc0], rax
%test dl, 0x4
%jz 0x7fd16901465e
478
479
480
@481
%and edx, 0x8
%jz 0x7fd16901466a
@482
%mov qword ptr [rbx+0x100], rax
%mov rax, qword ptr [rbx+0x170]
%test rax, rax
%jz 0x7fd1690146a2
@483
%test byte ptr [rip+0x2240e3], 0x40
%mov rax, qword ptr [rax+0x8]
%mov edx, eax
%mov dword ptr [rbx+0x3d4], eax
%jnz 0x7fd169014bf3
481
@484
%mov rax, qword ptr [rbx+0x170]
%test rax, rax
%jz 0x7fd1690146a2
@485
%test byte ptr [rip+0x2240e3], 0x40
%mov rax, qword ptr [rax+0x8]
%mov edx, eax
%mov dword ptr [rbx+0x3d4], eax
%jnz 0x7fd169014bf3
@486
%and edx, 0x1
%jz 0x7fd1690146a2
484
@487
%cmp qword ptr [rbx+0x128], 0x0
%jz 0x7fd1690146b7
@488
%mov qword ptr [rbx+0xb8], 0x0
%mov rdi, rbx
%call 0x7fd16901cf50
487
@489
%mov rdi, rbx
%call 0x7fd16901cf50
489
68
69
70
@490
%mov rax, qword ptr [rbx+0x388]
%lea rdx, ptr [rbx+0x28]
%or byte ptr [rbx+0x314], 0x4
%mov dword ptr [rbx+0x3cc], 0x1
%mov dword ptr [rax+0x8], 0x1
%mov qword ptr [rax], rdx
%mov rax, qword ptr [rbx+0xb0]
%test rax, rax
%jz 0x7fd169014733
@491
%mov rdx, qword ptr [rbx+0x68]
%mov r12, qword ptr [rax+0x8]
%add r12, qword ptr [rdx+0x8]
%mov rdi, r12
%call 0x7fd1690302f0
490
491
225
226
227
@492
%lea r13, ptr [rax+0x1]
%mov rdi, r13
%call 0x7fd169011ea0
492
266
267
268
269
274
@493
%test rax, rax
%jz 0x7fd169016781
@494
%mov rdx, r13
%mov rsi, r12
%mov rdi, rax
%call 0x7fd169030840
493
494
277
278
279
@495
%mov rdx, qword ptr [rbx+0x38]
%mov qword ptr [rbx+0x8], rax
%mov qword ptr [rdx], rax
%xor esi, esi
%mov rdi, rbx
%call 0x7fd16901d000
495
302
303
304
@496
%mov rax, qword ptr [rdx+0x18]
%test rax, rax
%jnz 0x7fd16901d038
@497
%mov qword ptr [r12+0x20], rdx
%mov qword ptr [rdx+0x18], r12
%lea rax, ptr [rbx+rbx*8]
%lea rdi, ptr [rip+0x21c938]
%shl rax, 0x4
%add dword ptr [rbp+rax*1+0x8], 0x1
%mov rax, qword ptr [rip+0x21c950]
%pop rbx
%pop rbp
%mov qword ptr [r12+0x468], rax
%add rax, 0x1
%pop r12
%mov qword ptr [rip+0x21c939], rax
%jmp qword ptr [rip+0x21cee3]
496
497
308
@498
%cmp qword ptr [rbx+0x18], 0x0
%jnz 0x7fd169016724
@499
%cmp r14, qword ptr [rbx+0x20]
%jnz 0x7fd169014d27
@500
%lea rax, ptr [rip+0x225297]
%mov qword ptr [rip+0x2252a8], rbx
%mov qword ptr [rbp-0x1a0], rax
%mov qword ptr [rbx+0x20], rax
%lea rax, ptr [rbx+0x18]
%mov qword ptr [rip+0x224142], rbx
%mov qword ptr [rbp-0x1c8], rax
%call 0x7fd16902c210
498
499
500
@501
%push r12
%push rbp
%push rbx
%sub rsp, 0x1d0
%mov rbx, qword ptr [rip+0x20c696]
%test rbx, rbx
%jz 0x7fd16902c2e8
@502
%movzx r11d, word ptr [rbx+0x2b0]
%mov rsi, qword ptr [rbx+0x2a0]
%test r11, r11
%jz 0x7fd16902c2e8
@503
%xor edi, edi
%mov ebp, 0xc
%jmp 0x7fd16902c261
501
502
503
@504
%cmp dword ptr [rsi], 0x4
%jnz 0x7fd16902c250
@505
%mov r8, qword ptr [rbx]
%mov r9, qword ptr [rsi+0x28]
%add r8, qword ptr [rsi+0x10]
%cmp rbp, r9
%mov rax, r8
%jnb 0x7fd16902c250
@506
%lea r10, ptr [rip+0x52b0]
%jmp 0x7fd16902c2b1
504
@507
%add rdi, 0x1
%add rsi, 0x38
%cmp rdi, r11
%jz 0x7fd16902c2e8
@508
%cmp dword ptr [rsi], 0x4
%jnz 0x7fd16902c250
@509
%mov r8, qword ptr [rbx]
%mov r9, qword ptr [rsi+0x28]
%add r8, qword ptr [rsi+0x10]
%cmp rbp, r9
%mov rax, r8
%jnb 0x7fd16902c250
507
508
507
508
509
@510
%lea r10, ptr [rip+0x52b0]
%jmp 0x7fd16902c2b1
510
@511
%mov rdx, qword ptr [rax]
%mov rcx, qword ptr [rax+0x8]
%xor rdx, qword ptr [r10]
%xor rcx, qword ptr [rip+0x5276]
%or rcx, rdx
%jnz 0x7fd16902c288
@512
%mov ecx, dword ptr [rip+0x5273]
%cmp dword ptr [rax+0x10], ecx
%jnz 0x7fd16902c288
@513
%mov eax, dword ptr [rax+0x14]
%add rsp, 0x1d0
%pop rbx
%pop rbp
%pop r12
%ret 
511
512
513
@514
%test eax, eax
%lea rbx, ptr [rip+0x1ed1d]
%js 0x7fd1690147d8
@515
%mov edx, dword ptr [rip+0x223fd1]
%test edx, edx
%jnz 0x7fd169014d1a
@516
%mov dword ptr [rip+0x223fc3], eax
%cmp eax, 0x301ff
%jnle 0x7fd169014c1a
514
515
516
@517
%mov rdi, qword ptr [rip+0x223a6f]
%call 0x7fd169019a40
517
@518
%push rbp
%lea rcx, ptr [rip+0x21eee8]
%lea rdx, ptr [rip+0x21eee9]
%mov rbp, rsp
%push r15
%push r14
%push r13
%push r12
%push rbx
%sub rsp, 0x28
%mov qword ptr [rbp-0x50], rdi
%mov rsi, qword ptr [rip+0x21ed06]
%mov rdi, qword ptr [rip+0x21ecf7]
%call 0x7fd169020620
518
@519
%push rbp
%mov rbp, rsp
%push r15
%push r14
%lea rax, ptr [rbp-0x38]
%push r13
%push r12
%push rbx
%mov rbx, rdi
%sub rsp, 0x88
%mov qword ptr [rbp-0x60], rdi
%mov qword ptr [rbp-0x68], rsi
%mov qword ptr [rbp-0x50], rdx
%mov rsi, rax
%xor edx, edx
%mov edi, 0xe
%mov qword ptr [rbp-0x80], rax
%mov qword ptr [rbp-0x70], rcx
%call 0x7fd16902a250
519
204
205
207
210
@520
%mov rax, qword ptr [rbp-0x38]
%test rbx, rbx
%setnz bl
%movzx ebx, bl
%mov qword ptr [rbp-0x78], rax
%and rax, qword ptr [rip+0x218142]
%mov r12, rax
%jz 0x7fd1690206ab
@521
%xor ecx, ecx
%mov edx, 0x1
%nop word ptr [rax+rax*1], ax
%mov rax, r12
%shr rax, cl
%and eax, 0x1
%cmp rax, 0x1
%mov rax, rdx
%sbb rbx, 0xffffffffffffffff
%add rcx, 0x1
%shl rax, cl
%neg rax
%test rax, r12
%jnz 0x7fd169020688
@522
%mov rax, qword ptr [rip+0x218206]
%test rax, rax
%jz 0x7fd169020900
520
521
@523
%mov rax, r12
%shr rax, cl
%and eax, 0x1
%cmp rax, 0x1
%mov rax, rdx
%sbb rbx, 0xffffffffffffffff
%add rcx, 0x1
%shl rax, cl
%neg rax
%test rax, r12
%jnz 0x7fd169020688
@524
%mov rax, qword ptr [rip+0x218206]
%test rax, rax
%jz 0x7fd169020900
@525
%movzx r14d, word ptr [rax+0x2b0]
%mov r9, qword ptr [rax+0x2a0]
%test r14, r14
%jz 0x7fd169020900
523
524
525
@526
%mov qword ptr [rbp-0x58], rbx
%xor r11d, r11d
%mov qword ptr [rbp-0x48], r12
%mov rbx, rax
%jmp 0x7fd1690206f9
526
@527
%cmp dword ptr [r9], 0x4
%jnz 0x7fd1690206e8
@528
%mov r15, qword ptr [r9+0x30]
%cmp r15, 0x3
%jbe 0x7fd1690207b0
@529
%lea rax, ptr [r15-0x4]
%test rax, 0xfffffffffffffffb
%jnz 0x7fd1690206e8
527
@530
%add r11, 0x1
%add r9, 0x38
%cmp r11, r14
%jz 0x7fd1690207c0
@531
%cmp dword ptr [r9], 0x4
%jnz 0x7fd1690206e8
@532
%mov r15, qword ptr [r9+0x30]
%cmp r15, 0x3
%jbe 0x7fd1690207b0
530
531
530
531
532
@533
%lea rax, ptr [r15-0x4]
%test rax, 0xfffffffffffffffb
%jnz 0x7fd1690206e8
@534
%mov rdi, qword ptr [rbx]
%mov r10, qword ptr [r9+0x28]
%add rdi, qword ptr [r9+0x10]
%cmp r10, 0xc
%mov rsi, rdi
%lea rcx, ptr [rdi+0xc]
%jbe 0x7fd1690206e8
@535
%mov r8, r15
%lea r13, ptr [r15+0xb]
%lea r12, ptr [r15-0x1]
%neg r8
%jmp 0x7fd16902076d
533
534
535
@536
%cmp dword ptr [rsi+0x8], 0x2
%mov eax, dword ptr [rsi]
%mov edx, dword ptr [rsi+0x4]
%jnz 0x7fd169020748
@537
%cmp eax, 0x4
%jnz 0x7fd169020748
@538
%cmp dword ptr [rcx], 0x554e47
%jnz 0x7fd169020748
536
@539
%add rax, r13
%add rdx, r12
%and rax, r8
%add rax, rdx
%and rax, r8
%add rsi, rax
%lea rcx, ptr [rsi+0xc]
%mov rax, rcx
%sub rax, rdi
%cmp rax, r10
%jnb 0x7fd1690206e8
@540
%cmp dword ptr [rsi+0x8], 0x2
%mov eax, dword ptr [rsi]
%mov edx, dword ptr [rsi+0x4]
%jnz 0x7fd169020748
@541
%cmp eax, 0x4
%jnz 0x7fd169020748
539
540
539
530
531
530
@542
%mov r12, qword ptr [rbp-0x48]
%mov rbx, qword ptr [rbp-0x58]
%xor r15d, r15d
%xor r13d, r13d
%xor esi, esi
%lea rdi, ptr [rip+0x118ab]
%mov eax, 0x15
%syscall 
542
@543
%test eax, eax
%jz 0x7fd1690208c0
@544
%cmp eax, 0xfffff000
%jbe 0x7fd1690208c0
@545
%add rbx, 0x1
%mov rax, rbx
%shl rax, 0x4
%add rax, 0x10
%sub rsp, rax
%lea r14, ptr [rsp+0xf]
%and r14, 0xfffffffffffffff0
%test r13, r13
%jz 0x7fd16902090b
543
544
545
@546
%mov rsi, r14
%mov edi, 0x1
%xor r15d, r15d
%xor ecx, ecx
%test r12, r12
%lea r13, ptr [r15+0x1]
%jz 0x7fd1690209aa
@547
%mov rdx, r13
%mov qword ptr [rbp-0x78], rbx
%mov r13, r12
%nop
%mov r12, r15
%shl r12, 0x4
%bt r13, rcx
%lea rbx, ptr [r14+r12*1]
%jnb 0x7fd1690209a0
@548
%movsxd rax, ecx
%mov qword ptr [rbp-0x58], rdx
%mov qword ptr [rbp-0x48], rcx
%lea rdi, ptr [rax+rax*8+0xd0]
%lea rax, ptr [rip+0x217e05]
%add rdi, rax
%mov qword ptr [rbx], rdi
%call 0x7fd1690302f0
546
547
@549
%add rcx, 0x1
%jmp 0x7fd169020930
549
@550
%mov r12, r15
%shl r12, 0x4
%bt r13, rcx
%lea rbx, ptr [r14+r12*1]
%jnb 0x7fd1690209a0
@551
%movsxd rax, ecx
%mov qword ptr [rbp-0x58], rdx
%mov qword ptr [rbp-0x48], rcx
%lea rdi, ptr [rax+rax*8+0xd0]
%lea rax, ptr [rip+0x217e05]
%add rdi, rax
%mov qword ptr [rbx], rdi
%call 0x7fd1690302f0
550
551
225
226
227
@552
%mov rcx, qword ptr [rbp-0x48]
%mov qword ptr [rbx+0x8], rax
%mov eax, 0x1
%lea rsi, ptr [r14+r12*1+0x10]
%lea rdi, ptr [r15+0x2]
%mov rdx, qword ptr [rbp-0x58]
%shl rax, cl
%add rcx, 0x1
%mov r9, rax
%xor r9, r13
%cmp rax, r13
%jz 0x7fd1690209a6
@553
%mov r15, rdx
%mov r13, r9
%add rdx, 0x1
%jmp 0x7fd169020930
552
@554
%mov rbx, qword ptr [rbp-0x78]
%mov rax, qword ptr [rbp-0x60]
%test rax, rax
%jz 0x7fd1690209cc
@555
%mov qword ptr [rsi], rax
%mov rax, qword ptr [rbp-0x68]
%mov qword ptr [rsi+0x8], rax
%mov rsi, rdi
%add rdi, 0x1
%shl rsi, 0x4
%add rsi, r14
%lea rax, ptr [rip+0x116e0]
%cmp rbx, rdi
%mov qword ptr [rsi+0x8], 0x3
%mov qword ptr [rsi], rax
%jnz 0x7fd169020dcd
@556
%mov rax, qword ptr [r14+0x8]
%cmp rbx, 0x1
%mov qword ptr [rbp-0x48], rax
%jz 0x7fd169020d1b
554
555
556
@557
%mov rdi, rax
%mov rax, rbx
%mov esi, ebx
%shl rax, 0x4
%cmp rbx, 0x2
%lea r13, ptr [r14+rax*1-0x10]
%mov qword ptr [rbp-0x78], rax
%mov rax, qword ptr [r13+0x8]
%mov qword ptr [rbp-0x58], rax
%lea rdx, ptr [rax+rdi*1+0x2]
%jbe 0x7fd169020a7f
@558
%mov rdi, qword ptr [rbp-0x78]
%lea rax, ptr [r14+0x18]
%add rdx, rdx
%lea rsi, ptr [r14+rdi*1-0x8]
%nop dword ptr [rax], eax
%mov rcx, qword ptr [rax]
%add rax, 0x10
%cmp rsi, rax
%lea rdx, ptr [rdx+rcx*1+0x1]
%jnz 0x7fd169020a38
@559
%cmp rbx, 0x3
%jz 0x7fd169020dc3
557
558
559
@560
%mov esi, 0x3
%jmp 0x7fd169020a79
560
@561
%lea ecx, ptr [rsi-0x3]
%shl rdx, cl
%mov r8d, 0x1
%mov ecx, esi
%mov rdi, qword ptr [rbp-0x50]
%mov eax, r8d
%mov dword ptr [rbp-0x68], r8d
%mov dword ptr [rbp-0x60], esi
%shl eax, cl
%mov dword ptr [rbp-0x88], eax
%cdqe 
%mov qword ptr [rdi], rax
%mov qword ptr [rbp-0xa0], rax
%shl rax, 0x4
%lea rdi, ptr [rax+rdx*1]
%mov r12, rax
%call 0x7fd169011ea0
561
266
267
268
269
274
@562
%test rax, rax
%mov r15, rax
%mov esi, dword ptr [rbp-0x60]
%mov r8d, dword ptr [rbp-0x68]
%jz 0x7fd169020d3b
@563
%lea rdi, ptr [rax+r12*1]
%mov qword ptr [rax], rdi
%mov qword ptr [rax+0x10], rdi
%lea eax, ptr [rsi-0x1]
%mov ecx, eax
%mov dword ptr [rbp-0x84], eax
%mov rax, qword ptr [r14]
%shl r8d, cl
%mov ecx, esi
%mov dword ptr [rbp-0x80], r8d
%mov qword ptr [rbp-0x90], rax
%mov eax, 0x1
%shl rax, cl
%cmp rbx, 0x2
%mov qword ptr [rbp-0x98], rax
%jz 0x7fd169020d97
@564
%mov rax, qword ptr [r13]
%movsxd r12, dword ptr [rbp-0x80]
%mov r13d, 0x1
%mov qword ptr [rbp-0xb0], r15
%mov qword ptr [rbp-0xa8], rbx
%mov r15, qword ptr [rbp-0x90]
%mov qword ptr [rbp-0x90], r14
%mov qword ptr [rbp-0x50], rax
%lea rax, ptr [rbx-0x2]
%mov qword ptr [rbp-0x60], rax
%mov rax, qword ptr [rbp-0x78]
%lea rax, ptr [r14+rax*1-0x20]
%mov qword ptr [rbp-0x68], rax
%nop dword ptr [rax], eax
%mov rdx, qword ptr [rbp-0x58]
%mov rsi, qword ptr [rbp-0x50]
%sub r12, 0x2
%call 0x7fd169030830
562
563
564
@565
%mov rax, rdi
%add rax, rdx
%jmp 0x7fd169030843
565
@566
%cmp rdx, 0x10
%jb 0x7fd169030860
@567
%cmp rdx, 0x20
%jnbe 0x7fd1690308a6
@568
%movups xmm0, xmmword ptr [rsi]
%movups xmm1, xmmword ptr [rsi+rdx*1-0x10]
%movups xmmword ptr [rdi], xmm0
%movups xmmword ptr [rdi+rdx*1-0x10], xmm1
%ret 
566
280
281
282
@569
%movzx ecx, word ptr [rsi+rdx*1-0x2]
%movzx esi, word ptr [rsi]
%mov word ptr [rdi+rdx*1-0x2], cx
%mov word ptr [rdi], si
%ret 
569
@570
%mov r14, qword ptr [rbp-0x68]
%mov byte ptr [rax], 0x2f
%lea rdi, ptr [rax+0x1]
%mov rbx, qword ptr [rbp-0x60]
%jmp 0x7fd169020b8a
570
@571
%mov edx, r13d
%mov ecx, ebx
%shl edx, cl
%movsxd rdx, edx
%test rdx, r12
%jz 0x7fd169020b80
@572
%mov rdx, qword ptr [r14+0x8]
%mov rsi, qword ptr [r14]
%sub r14, 0x10
%call 0x7fd169030830
571
572
565
566
280
281
@573
%mov ecx, dword ptr [rsi+rdx*1-0x4]
%mov esi, dword ptr [rsi]
%mov dword ptr [rdi+rdx*1-0x4], ecx
%mov dword ptr [rdi], esi
%ret 
573
@574
%sub rbx, 0x1
%mov byte ptr [rax], 0x2f
%lea rdi, ptr [rax+0x1]
%jnz 0x7fd169020b8a
@575
%mov rdx, qword ptr [rbp-0x48]
%mov rsi, r15
%call 0x7fd169030830
574
575
565
566
280
281
573
@576
%test r12, r12
%mov byte ptr [rax], 0x2f
%lea rdi, ptr [rax+0x1]
%jnz 0x7fd169020b58
@577
%mov rbx, qword ptr [rbp-0xa8]
%mov r15, qword ptr [rbp-0xb0]
%mov r14, qword ptr [rbp-0x90]
%mov rcx, qword ptr [rbp-0x98]
%lea rdx, ptr [r15+0x8]
%xor eax, eax
%add rax, 0x1
%mov qword ptr [rdx], 0x0
%add rdx, 0x10
%cmp rax, rcx
%jb 0x7fd169020bf0
@578
%mov r10, qword ptr [rbp-0xa0]
%test r10, r10
%jz 0x7fd169020c6e
576
@579
%mov rdx, qword ptr [rbp-0x58]
%mov rsi, qword ptr [rbp-0x50]
%sub r12, 0x2
%call 0x7fd169030830
579
565
566
280
281
282
569
570
571
@580
%sub r14, 0x10
%sub rbx, 0x1
%jz 0x7fd169020bb6
@581
%mov edx, r13d
%mov ecx, ebx
%shl edx, cl
%movsxd rdx, edx
%test rdx, r12
%jz 0x7fd169020b80
@582
%mov rdx, qword ptr [r14+0x8]
%mov rsi, qword ptr [r14]
%sub r14, 0x10
%call 0x7fd169030830
580
@583
%mov rdx, qword ptr [rbp-0x48]
%mov rsi, r15
%call 0x7fd169030830
583
565
566
280
281
573
576
577
@584
%add rax, 0x1
%mov qword ptr [rdx], 0x0
%add rdx, 0x10
%cmp rax, rcx
%jb 0x7fd169020bf0
@585
%mov r10, qword ptr [rbp-0xa0]
%test r10, r10
%jz 0x7fd169020c6e
@586
%mov rax, qword ptr [rbp-0x78]
%mov r8d, 0x1
%mov rcx, rbx
%lea rdi, ptr [r14+rax*1-0x8]
%nop word ptr [rax+rax*1], ax
%sub rcx, 0x1
%mov r9d, r8d
%mov rdx, r15
%shl r9d, cl
%mov rax, r10
%movsxd r9, r9d
%sub rax, 0x1
%test r9, rax
%jz 0x7fd169020c5c
584
584
584
584
584
584
584
585
586
@587
%mov rbx, qword ptr [rdi]
%sub rax, 0x1
%lea rsi, ptr [rbx+0x1]
%add qword ptr [rdx+0x8], rsi
%add rdx, 0x10
%test r9, rax
%jnz 0x7fd169020c44
@588
%add rdx, 0x10
%test rax, rax
%jnz 0x7fd169020c3b
@589
%sub rdi, 0x10
%test rcx, rcx
%jnz 0x7fd169020c28
587
587
587
587
588
@590
%sub rax, 0x1
%test r9, rax
%jz 0x7fd169020c5c
@591
%mov rbx, qword ptr [rdi]
%sub rax, 0x1
%lea rsi, ptr [rbx+0x1]
%add qword ptr [rdx+0x8], rsi
%add rdx, 0x10
%test r9, rax
%jnz 0x7fd169020c44
@592
%add rdx, 0x10
%test rax, rax
%jnz 0x7fd169020c3b
590
@593
%add rdx, 0x10
%test rax, rax
%jnz 0x7fd169020c3b
@594
%sub rdi, 0x10
%test rcx, rcx
%jnz 0x7fd169020c28
@595
%movzx ecx, byte ptr [rbp-0x84]
%mov edi, dword ptr [rbp-0x88]
%mov eax, 0x1
%lea rdx, ptr [r15+0x20]
%sub edi, 0x2
%movsxd rdi, edi
%shl rax, cl
%mov rcx, rdx
%cmp rax, rdi
%mov rsi, rdi
%jz 0x7fd169020cc9
593
590
593
590
593
594
@596
%sub rcx, 0x1
%mov r9d, r8d
%mov rdx, r15
%shl r9d, cl
%mov rax, r10
%movsxd r9, r9d
%sub rax, 0x1
%test r9, rax
%jz 0x7fd169020c5c
@597
%mov rbx, qword ptr [rdi]
%sub rax, 0x1
%lea rsi, ptr [rbx+0x1]
%add qword ptr [rdx+0x8], rsi
%add rdx, 0x10
%test r9, rax
%jnz 0x7fd169020c44
@598
%add rdx, 0x10
%test rax, rax
%jnz 0x7fd169020c3b
596
597
587
588
590
593
590
591
587
588
590
593
594
596
597
598
590
591
592
590
591
592
590
591
592
@599
%sub rdi, 0x10
%test rcx, rcx
%jnz 0x7fd169020c28
@600
%movzx ecx, byte ptr [rbp-0x84]
%mov edi, dword ptr [rbp-0x88]
%mov eax, 0x1
%lea rdx, ptr [r15+0x20]
%sub edi, 0x2
%movsxd rdi, edi
%shl rax, cl
%mov rcx, rdx
%cmp rax, rdi
%mov rsi, rdi
%jz 0x7fd169020cc9
@601
%nop dword ptr [rax+rax*1], eax
%sub rsi, 0x1
%test sil, 0x1
%jz 0x7fd169020d08
599
600
601
@602
%mov r8, qword ptr [rcx-0x18]
%add r8, qword ptr [rcx-0x20]
%add rcx, 0x10
%mov qword ptr [rcx-0x10], r8
%cmp rax, rsi
%jnz 0x7fd169020ca0
@603
%sub rdi, rax
%shl rdi, 0x4
%add rdx, rdi
%mov esi, dword ptr [rbp-0x80]
%mov rcx, qword ptr [rbp-0x58]
%neg esi
%add rcx, 0x1
%movsxd rsi, esi
%shl rsi, 0x4
%nop dword ptr [rax], eax
%mov rdi, qword ptr [rdx+rsi*1]
%add rdx, 0x10
%add rdi, rcx
%mov qword ptr [rdx-0x10], rdi
%sub rax, 0x1
%jnz 0x7fd169020ce0
@604
%mov rax, qword ptr [r15+0x8]
%mov rbx, qword ptr [rbp-0x70]
%mov qword ptr [rbx], rax
%jmp 0x7fd1690208ec
602
@605
%sub rsi, 0x1
%test sil, 0x1
%jz 0x7fd169020d08
@606
%mov r8, qword ptr [rcx-0x18]
%add r8, qword ptr [rcx-0x20]
%add rcx, 0x10
%mov qword ptr [rcx-0x10], r8
%cmp rax, rsi
%jnz 0x7fd169020ca0
@607
%sub rdi, rax
%shl rdi, 0x4
%add rdx, rdi
%mov esi, dword ptr [rbp-0x80]
%mov rcx, qword ptr [rbp-0x58]
%neg esi
%add rcx, 0x1
%movsxd rsi, esi
%shl rsi, 0x4
%nop dword ptr [rax], eax
%mov rdi, qword ptr [rdx+rsi*1]
%add rdx, 0x10
%add rdi, rcx
%mov qword ptr [rdx-0x10], rdi
%sub rax, 0x1
%jnz 0x7fd169020ce0
605
@608
%mov r8, qword ptr [rcx-0x10]
%add rcx, 0x10
%mov qword ptr [rcx-0x10], r8
%cmp rax, rsi
%jnz 0x7fd169020ca0
@609
%jmp 0x7fd169020cbf
608
609
@610
%sub rdi, rax
%shl rdi, 0x4
%add rdx, rdi
%mov esi, dword ptr [rbp-0x80]
%mov rcx, qword ptr [rbp-0x58]
%neg esi
%add rcx, 0x1
%movsxd rsi, esi
%shl rsi, 0x4
%nop dword ptr [rax], eax
%mov rdi, qword ptr [rdx+rsi*1]
%add rdx, 0x10
%add rdi, rcx
%mov qword ptr [rdx-0x10], rdi
%sub rax, 0x1
%jnz 0x7fd169020ce0
@611
%mov rax, qword ptr [r15+0x8]
%mov rbx, qword ptr [rbp-0x70]
%mov qword ptr [rbx], rax
%jmp 0x7fd1690208ec
610
@612
%mov rdi, qword ptr [rdx+rsi*1]
%add rdx, 0x10
%add rdi, rcx
%mov qword ptr [rdx-0x10], rdi
%sub rax, 0x1
%jnz 0x7fd169020ce0
@613
%mov rax, qword ptr [r15+0x8]
%mov rbx, qword ptr [rbp-0x70]
%mov qword ptr [rbx], rax
%jmp 0x7fd1690208ec
612
612
612
613
@614
%lea rsp, ptr [rbp-0x28]
%mov rax, r15
%pop rbx
%pop r12
%pop r13
%pop r14
%pop r15
%pop rbp
%ret 
614
@615
%mov edi, 0x28
%mov qword ptr [rip+0x21eebe], rax
%call 0x7fd169011ea0
615
266
267
268
269
274
@616
%test rax, rax
%mov qword ptr [rip+0x21ee8f], rax
%jz 0x7fd169019dc1
@617
%mov r15, rax
%mov rax, qword ptr [rip+0x21ee97]
%mov rcx, 0xcccccccccccccccd
%mov qword ptr [rbp-0x38], rax
%shl rax, 0x2
%lea rdx, ptr [rax+0x4f]
%mov qword ptr [rbp-0x40], rax
%mov rax, rdx
%mul rcx
%shr rdx, 0x5
%lea rbx, ptr [rdx+rdx*4]
%mov rdi, rbx
%shl rdi, 0x5
%call 0x7fd169011ea0
616
617
266
267
268
269
274
@618
%test rax, rax
%mov r13, rax
%mov qword ptr [r15], rax
%jz 0x7fd169019df5
@619
%mov qword ptr [rip+0x21fefd], rax
%lea rax, ptr [rip+0x183f9]
%mov dword ptr [rip+0x21ee2c], 0x0
%mov qword ptr [r13+0x10], 0x0
%mov qword ptr [r13+0x20], 0x16
%lea r12, ptr [rip+0x17564]
%mov qword ptr [r13+0x8], rax
%lea rax, ptr [rip+0x17542]
%lea r14, ptr [rip+0x1751b]
%mov qword ptr [r13+0x18], rax
%lea rax, ptr [rbx*8]
%xor ebx, ebx
%cmp qword ptr [rbp-0x38], 0x0
%mov qword ptr [rbp-0x48], rax
%jz 0x7fd169019b4d
@620
%mov rdx, qword ptr [rbp-0x40]
%lea rdi, ptr [r13+0x28]
%xor esi, esi
%call 0x7fd169030a20
618
619
620
@621
%movd xmm0, esi
%mov rax, rdi
%punpcklbw xmm0, xmm0
%punpcklwd xmm0, xmm0
%pshufd xmm0, xmm0, 0x0
%cmp rdx, 0x10
%jb 0x7fd169030ac8
@622
%cmp rdx, 0x20
%jnbe 0x7fd169030a4f
@623
%movdqu xmmword ptr [rdi+rdx*1-0x10], xmm0
%movdqu xmmword ptr [rdi], xmm0
%ret 
621
622
623
@624
%add rbx, 0x1
%cmp rbx, 0x4
%jz 0x7fd169019bb0
@625
%mov rax, qword ptr [rbp-0x48]
%add r15, 0x8
%add r13, rax
%neg rax
%mov qword ptr [r13+rax*1], r13
%lea rax, ptr [rip+0x1837a]
%mov qword ptr [r15], r13
%cmp byte ptr [r12], 0x2f
%mov qword ptr [r13+0x10], 0x0
%mov qword ptr [r13+0x8], rax
%mov rax, qword ptr [r14+rbx*8]
%mov qword ptr [r13+0x18], r12
%mov qword ptr [r13+0x20], rax
%lea rax, ptr [r12+rax*1+0x1]
%jnz 0x7fd169019da2
@626
%cmp qword ptr [rbp-0x38], 0x0
%mov r12, rax
%jnz 0x7fd169019b3e
624
625
626
@627
%mov rdx, qword ptr [rbp-0x40]
%lea rdi, ptr [r13+0x28]
%xor esi, esi
%call 0x7fd169030a20
627
621
622
623
624
625
626
627
621
622
623
624
625
626
627
621
622
623
624
@628
%mov rbx, qword ptr [rip+0x21f4a9]
%mov qword ptr [r13], 0x0
%mov qword ptr [rip+0x220486], 0x1a
%mov qword ptr [r15+0x8], 0x0
%test rbx, rbx
%jz 0x7fd169019c2c
@629
%movzx eax, byte ptr [rbx+0x314]
%and eax, 0x3
%cmp al, 0x2
%jz 0x7fd169019dd6
@630
%mov rax, qword ptr [rbx+0x128]
%test rax, rax
%jz 0x7fd169019c58
628
629
630
@631
%mov rax, qword ptr [rbx+0xb8]
%mov rdx, 0xffffffffffffffff
%mov qword ptr [rbx+0x3a8], rdx
%test rax, rax
%jz 0x7fd169019d78
@632
%mov rdx, qword ptr [rbx+0x68]
%mov rsi, qword ptr [rax+0x8]
%lea rdi, ptr [rbx+0x318]
%lea rcx, ptr [rip+0x182aa]
%add rsi, qword ptr [rdx+0x8]
%mov rdx, rbx
%call 0x7fd169019850
631
@633
%mov qword ptr [rbx+0x318], rdx
%jmp 0x7fd169019c2c
633
@634
%mov rax, qword ptr [rbp-0x50]
%test rax, rax
%jz 0x7fd169019c3a
@635
%cmp byte ptr [rax], 0x0
%jnz 0x7fd169019ca8
@636
%mov qword ptr [rip+0x21ed0b], 0xffffffffffffffff
%lea rsp, ptr [rbp-0x28]
%pop rbx
%pop r12
%pop r13
%pop r14
%pop r15
%pop rbp
%ret 
634
@637
%mov qword ptr [rip+0x21ed0b], 0xffffffffffffffff
%lea rsp, ptr [rbp-0x28]
%pop rbx
%pop r12
%pop r13
%pop r14
%pop r15
%pop rbp
%ret 
637
@638
%mov rdi, qword ptr [rip+0x224dc3]
%xor esi, esi
%call 0x7fd169021db0
638
@639
%test rsi, rsi
%jz 0x7fd169021e08
@640
%lea rax, ptr [rsi+rsi*8]
%lea rdx, ptr [rip+0x2172a0]
%shl rax, 0x4
%lea rax, ptr [rdx+rax*1+0x68]
%cmp qword ptr [rax+0x8], 0x0
%jz 0x7fd169021e16
@641
%test rdi, rdi
%jz 0x7fd169021e30
639
@642
%mov rax, qword ptr [rip+0x2171c9]
%cmp qword ptr [rax+0x8], 0x0
%jnz 0x7fd169021dd0
@643
%test rdi, rdi
%mov dword ptr [rax], 0x1
%jnz 0x7fd169021ddb
@644
%mov rdx, qword ptr [rip+0x2171b0]
%mov rdi, qword ptr [rdx+0x20]
%jmp 0x7fd169021ddb
642
643
@645
%lea rdx, ptr [rsi+rsi*8]
%lea rcx, ptr [rip+0x21727a]
%mov qword ptr [rax+0x20], rdi
%shl rdx, 0x4
%mov rdx, qword ptr [rcx+rdx*1]
%lea rcx, ptr [rip-0x59]
%mov qword ptr [rax+0x10], rcx
%mov qword ptr [rax+0x8], rdx
%ret 
645
@646
%cmp qword ptr [rip+0x224dbc], 0x0
%mov qword ptr [rbp-0x1c0], rax
%mov dword ptr [rax+0x18], 0x0
%jnz 0x7fd169014c5d
@647
%mov rax, qword ptr [rip+0x224dd5]
%mov rax, qword ptr [rax]
%mov qword ptr [rip+0x224d9b], rax
%movzx eax, byte ptr [rip+0x2250a0]
%add dword ptr [rip+0x2243fd], 0x1
%and eax, 0xfffffffc
%or eax, 0x1
%mov byte ptr [rip+0x22508d], al
%mov rax, qword ptr [rbp-0x1a0]
%mov qword ptr [r14+0x18], rax
%add qword ptr [rip+0x224d2e], 0x1
%cmp qword ptr [rip+0x223bee], 0xfffffffffffffffe
%mov qword ptr [rip+0x224d77], r14
%jnz 0x7fd169014cae
@648
%xor eax, eax
%cmp qword ptr [r14], 0x0
%setz al
%neg rax
%mov qword ptr [rip+0x223bd2], rax
%cmp word ptr [rip-0x3c82], 0x40
%jnz 0x7fd1690163e2
646
647
648
@649
%cmp word ptr [rip-0x3c8e], 0x38
%jnz 0x7fd1690163c3
@650
%movzx eax, word ptr [rip-0x3c99]
%lea rdx, ptr [rip-0x3cd8]
%add rdx, qword ptr [rip-0x3cbf]
%imul rcx, rax, 0x38
%mov qword ptr [rip+0x224fa6], rdx
%mov word ptr [rip+0x224faf], ax
%lea rsi, ptr [rdx+rcx*1-0x38]
%xor ecx, ecx
%jmp 0x7fd169014d13
649
650
@651
%cmp rax, rcx
%jnz 0x7fd169014d00
@652
%jmp 0x7fd169014d5c
651
@653
%mov rdx, rsi
%add rcx, 0x1
%sub rsi, 0x38
%cmp dword ptr [rdx], 0x6474e552
%jz 0x7fd169014d46
@654
%cmp rax, rcx
%jnz 0x7fd169014d00
@655
%jmp 0x7fd169014d5c
653
@656
%mov rax, qword ptr [rdx+0x10]
%mov qword ptr [rip+0x2250f7], rax
%mov rax, qword ptr [rdx+0x28]
%mov qword ptr [rip+0x2250f4], rax
%cmp qword ptr [rip+0x2250b4], 0x0
%jz 0x7fd169014d72
@657
%call 0x7fd169023d40
656
@658
%cmp qword ptr [rip+0x2252ce], 0x0
%lea rax, ptr [rip+0x2253e7]
%mov rax, qword ptr [rax]
%jnz 0x7fd169015fd9
@659
%test rax, rax
%mov byte ptr [rbp-0x1d0], 0x1
%mov qword ptr [rbp-0x1b0], 0x0
%jnz 0x7fd169015fd9
@660
%call 0x7fd169023e40
658
659
660
@661
%cmp byte ptr [rip+0x216135], 0x0
%jnz 0x7fd169023e58
@662
%mov rax, qword ptr [rip+0x216130]
%ret 
661
662
@663
%mov qword ptr [rbp-0x1d8], rax
%mov rax, qword ptr [r14+0xe8]
%test rax, rax
%jz 0x7fd169014dc8
@664
%mov rcx, qword ptr [rbp-0x1c0]
%mov qword ptr [rax+0x8], rcx
%mov rax, qword ptr [rip+0x224d09]
%test rax, rax
%jz 0x7fd169014ddf
@665
%mov rcx, qword ptr [rbp-0x1c0]
%mov qword ptr [rax+0x8], rcx
%mov rbx, qword ptr [rbp-0x1c0]
%mov dword ptr [rbx+0x18], 0x1
%call 0x7fd169021da0
663
664
@666
%mov rbx, qword ptr [rbp-0x1c0]
%mov dword ptr [rbx+0x18], 0x1
%call 0x7fd169021da0
666
@667
%ret 
667
@668
%nop
%cmp dword ptr [rip+0x223b16], 0x0
%jnz 0x7fd169015f9d
@669
%mov rax, qword ptr [rbp-0x1c8]
%cmp qword ptr [rax], 0x0
%jnz 0x7fd169014f5e
@670
%mov rdi, qword ptr [rip+0x223870]
%xor ebx, ebx
%test rdi, rdi
%jz 0x7fd169014e4c
668
669
670
@671
%lea rdi, ptr [rip+0x1ff7d]
%mov esi, 0x4
%call 0x7fd16902de20
671
@672
%mov eax, 0x15
%syscall 
672
@673
%cmp rax, 0xfffffffffffff000
%jnbe 0x7fd16902de38
@674
%ret 
673
@675
%neg eax
%mov dword ptr [rip+0x20c2e0], eax
%mov eax, 0xffffffff
%ret 
675
@676
%test eax, eax
%jz 0x7fd169015bb7
@677
%mov rax, qword ptr [rbp-0x1c8]
%xor esi, esi
%mov rdx, qword ptr [rax]
%test rdx, rdx
%jnz 0x7fd169015b5b
@678
%rdtsc 
%mov eax, eax
%shl rdx, 0x20
%xor r13d, r13d
%or rdx, rax
%cmp dword ptr [rbp-0x198], 0x3
%mov rdi, r14
%mov r12, rdx
%mov edx, ebx
%setz r13b
%xor r8d, r8d
%mov ecx, r13d
%call 0x7fd16901f410
676
677
678
@679
%lea eax, ptr [rdx+0x2]
%push rbp
%lea rax, ptr [rax+rax*2]
%mov rbp, rsp
%push r15
%push r14
%push r13
%mov r15, rdi
%lea rax, ptr [rax*8+0x1e]
%push r12
%push rbx
%shr rax, 0x4
%sub rsp, 0xc8
%mov dword ptr [rbp-0xb0], r8d
%shl rax, 0x4
%mov dword ptr [rbp-0xac], ecx
%sub rsp, rax
%movzx eax, byte ptr [rdi+0x314]
%lea r8, ptr [rsp+0xf]
%and r8, 0xfffffffffffffff0
%and eax, 0xffffff9f
%lea rcx, ptr [r8+0x18]
%mov r14, r8
%or eax, 0x20
%test edx, edx
%mov dword ptr [r8], 0x0
%mov qword ptr [r8+0x8], rdi
%mov qword ptr [r8+0x10], rcx
%mov byte ptr [rdi+0x314], al
%jz 0x7fd169020010
@680
%add edx, 0x1
%mov r9d, 0x1
%jmp 0x7fd16901f49b
679
@681
%mov qword ptr [rbp-0x98], rdi
%mov qword ptr [rbp-0x88], r8
%mov r12d, 0x1
%mov rax, r8
%jmp 0x7fd16901f4fc
681
@682
%mov qword ptr [rax+0x10], 0x0
%mov eax, dword ptr [rip+0x21ac16]
%mov qword ptr [rbp-0xa8], r8
%mov dword ptr [rip+0x21ac05], 0x0
%mov qword ptr [rbp-0xe0], 0x0
%mov qword ptr [rbp-0xd8], 0x0
%mov dword ptr [rbp-0xcc], eax
%mov dword ptr [rbp-0xa0], r12d
%mov rax, r8
%mov qword ptr [rbp-0xc8], r14
%mov qword ptr [rbp-0xc0], r15
%mov dword ptr [rax], 0x1
%mov rax, qword ptr [rbp-0x98]
%mov r14, qword ptr [rax+0x2b8]
%test r14, r14
%jz 0x7fd16901fd88
@683
%xor r14d, r14d
%mov rax, qword ptr [rbp-0x98]
%cmp qword ptr [rax+0x48], 0x0
%jz 0x7fd16901fcb0
@684
%mov rsi, qword ptr [rbp-0x98]
%mov ecx, dword ptr [rbp-0xb0]
%mov rax, qword ptr [rsi+0x68]
%mov qword ptr [rbp-0x60], rsi
%mov r15, qword ptr [rax+0x8]
%mov rax, rsi
%mov esi, dword ptr [rbp-0xac]
%mov rbx, qword ptr [rax+0x10]
%mov dword ptr [rbp-0x54], ecx
%mov qword ptr [rbp-0x50], r15
%mov dword ptr [rbp-0x58], esi
%mov rax, qword ptr [rbx]
%test rax, rax
%jz 0x7fd16901fccc
682
@685
%cmp qword ptr [rax+0x3b8], 0x0
%jnz 0x7fd16901f56f
@686
%cmp qword ptr [rbp-0xc0], rax
%jz 0x7fd16901f56f
@687
%movzx eax, word ptr [rax+0x2b2]
%test ax, ax
%jz 0x7fd16901f56f
685
686
@688
%mov rax, qword ptr [rbp-0x98]
%cmp qword ptr [rax+0x48], 0x0
%jz 0x7fd16901fcb0
@689
%mov rsi, qword ptr [rbp-0x98]
%mov ecx, dword ptr [rbp-0xb0]
%mov rax, qword ptr [rsi+0x68]
%mov qword ptr [rbp-0x60], rsi
%mov r15, qword ptr [rax+0x8]
%mov rax, rsi
%mov esi, dword ptr [rbp-0xac]
%mov rbx, qword ptr [rax+0x10]
%mov dword ptr [rbp-0x54], ecx
%mov qword ptr [rbp-0x50], r15
%mov dword ptr [rbp-0x58], esi
%mov rax, qword ptr [rbx]
%test rax, rax
%jz 0x7fd16901fccc
@690
%mov rsi, qword ptr [rbp-0xa8]
%lea rcx, ptr [rbp-0x60]
%xor r12d, r12d
%mov qword ptr [rbp-0x90], rcx
%mov qword ptr [rbp-0xb8], rsi
%jmp 0x7fd16901f69b
688
689
690
@691
%cmp rax, 0x1
%jz 0x7fd16901f5e0
@692
%and rax, 0xfffffffffffffffd
%cmp rax, 0x7ffffffd
%jnz 0x7fd16901f68b
@693
%mov r13, qword ptr [rbx+0x8]
%mov esi, 0x24
%add r13, r15
%mov rdi, r13
%call 0x7fd1690300d0
691
@694
%mov r13, qword ptr [rbx+0x8]
%mov esi, 0x24
%add r13, r15
%mov rdi, r13
%call 0x7fd1690300d0
694
@695
%movd xmm1, esi
%mov eax, edi
%and eax, 0xfff
%punpcklbw xmm1, xmm1
%cmp eax, 0xfc0
%punpcklwd xmm1, xmm1
%pshufd xmm1, xmm1, 0x0
%jnle 0x7fd169030250
@696
%movdqu xmm0, xmmword ptr [rdi]
%pxor xmm3, xmm3
%movdqa xmm4, xmm0
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm4, xmm3
%por xmm0, xmm4
%pmovmskb eax, xmm0
%test eax, eax
%jz 0x7fd169030128
@697
%bsf eax, eax
%mov edx, 0x0
%lea rax, ptr [rdi+rax*1]
%cmp byte ptr [rax], sil
%cmovnz rax, rdx
%ret 
695
696
697
@698
%test rax, rax
%jnz 0x7fd16901fbd8
@699
%mov rdx, qword ptr [rbp-0x90]
%lea rdi, ptr [rbp-0x80]
%lea rsi, ptr [rip-0x32f]
%mov qword ptr [rbp-0x48], r13
%call 0x7fd169011e90
698
699
@700
%jmp qword ptr [rip+0x227182]
700
@701
%push rbx
%sub rsp, 0x110
%mov rcx, qword ptr [rip+0x20d4c9]
%mov qword ptr [rsp+0x8], rdi
%mov qword ptr [rsp+0x30], rdi
%lea rdi, ptr [rsp+0x30]
%lea rax, ptr [rsp+0x2c]
%mov qword ptr [rsp+0x10], rsi
%xor esi, esi
%mov qword ptr [rip+0x20d4a7], rdi
%lea rdi, ptr [rsp+0x40]
%mov qword ptr [rsp+0x18], rdx
%mov qword ptr [rsp+0x38], rax
%mov qword ptr [rsp], rcx
%call 0x7fd16902e090
701
@702
%mov qword ptr [rdi], rbx
%mov rax, rbp
%xor rax, qword ptr [rip+0x20a693]
%rol rax, 0x11
%mov qword ptr [rdi+0x8], rax
%mov qword ptr [rdi+0x10], r12
%mov qword ptr [rdi+0x18], r13
%mov qword ptr [rdi+0x20], r14
%mov qword ptr [rdi+0x28], r15
%lea rdx, ptr [rsp+0x8]
%xor rdx, qword ptr [rip+0x20a66f]
%rol rdx, 0x11
%mov qword ptr [rdi+0x30], rdx
%mov rax, qword ptr [rsp]
%nop
%xor rax, qword ptr [rip+0x20a65b]
%rol rax, 0x11
%mov qword ptr [rdi+0x38], rax
%xor eax, eax
%ret 
702
@703
%test eax, eax
%jnz 0x7fd16902cc98
@704
%mov ebx, eax
%mov rdi, qword ptr [rsp+0x18]
%mov rdx, qword ptr [rsp+0x10]
%call rdx
703
704
@705
%push rbx
%mov rbx, rdi
%mov rdi, qword ptr [rdi]
%mov ecx, dword ptr [rbx+0x8]
%mov rsi, qword ptr [rbx+0x18]
%mov r8d, dword ptr [rbx+0xc]
%movzx eax, byte ptr [rdi+0x314]
%mov r9, qword ptr [rdi+0x30]
%and eax, 0x3
%test al, al
%movzx edx, al
%mov eax, 0x1
%cmovz edx, eax
%call 0x7fd169019e00
705
@706
%push r15
%push r14
%push r13
%push r12
%push rbp
%push rbx
%sub rsp, 0x3c8
%test r9, r9
%mov dword ptr [rsp+0x8], edx
%mov dword ptr [rsp+0xc], ecx
%js 0x7fd16901ab47
@707
%cmp qword ptr [rip+0x21fb37], r9
%mov rbp, r9
%lea r14, ptr [rip+0x21f22d]
%jbe 0x7fd16901ab66
@708
%lea rax, ptr [r9+r9*8]
%mov r12, rdi
%mov rbx, rsi
%mov r13d, r8d
%shl rax, 0x4
%mov r15, qword ptr [r14+rax*1]
%test r15, r15
%jnz 0x7fd169019e6d
706
707
708
@709
%movzx eax, byte ptr [r15+0x315]
%mov edx, eax
%shr al, 0x5
%shr dl, 0x1
%or eax, edx
%test al, 0x1
%jnz 0x7fd169019e60
@710
%mov rsi, r15
%mov rdi, rbx
%call 0x7fd169022700
709
710
@711
%push rbp
%push rbx
%mov rbx, rsi
%mov rbp, rdi
%sub rsp, 0x8
%mov rsi, qword ptr [rsi+0x8]
%call 0x7fd16902e360
711
350
351
353
354
355
@712
%pxor xmm0, xmm0
%movdqa xmm2, xmmword ptr [rdi]
%movdqa xmm1, xmmword ptr [rsi]
%pcmpeqb xmm0, xmm1
%pslldq xmm2, 0x9
%pcmpeqb xmm2, xmm1
%psubb xmm2, xmm0
%pmovmskb r9d, xmm2
%shr edx, cl
%shr r9d, cl
%sub edx, r9d
%jnz 0x7fd16902f755
@713
%movdqa xmm3, xmmword ptr [rdi]
%pxor xmm0, xmm0
%mov rcx, 0x10
%mov r9d, 0x7
%lea r10, ptr [rdi+0x7]
%and r10, 0xfff
%sub r10, 0x1000
%nop word ptr [rax+rax*1], ax
%add r10, 0x10
%jnle 0x7fd16902ed10
@714
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%movdqa xmm4, xmm2
%psrldq xmm3, 0x7
%pslldq xmm2, 0x9
%por xmm2, xmm3
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
712
359
360
@715
%test eax, eax
%mov edx, 0x1
%jz 0x7fd169022732
@716
%mov rbx, qword ptr [rbx+0x38]
%test rbx, rbx
%jnz 0x7fd169022749
@717
%nop word ptr [rax+rax*1], ax
%xor edx, edx
%add rsp, 0x8
%mov eax, edx
%pop rbx
%pop rbp
%ret 
715
716
@718
%mov rsi, qword ptr [rbx]
%mov rdi, rbp
%call 0x7fd16902e360
718
350
351
353
354
355
712
359
360
@719
%test eax, eax
%jnz 0x7fd169022740
@720
%add rsp, 0x8
%mov edx, 0x1
%mov eax, edx
%pop rbx
%pop rbp
%ret 
719
@721
%mov rbx, qword ptr [rbx+0x8]
%test rbx, rbx
%jz 0x7fd169022730
@722
%mov rsi, qword ptr [rbx]
%mov rdi, rbp
%call 0x7fd16902e360
721
@723
%xor edx, edx
%add rsp, 0x8
%mov eax, edx
%pop rbx
%pop rbp
%ret 
723
@724
%test eax, eax
%jnz 0x7fd169019ef8
@725
%test byte ptr [r15+0x315], 0x1
%jnz 0x7fd169019e60
@726
%mov rax, qword ptr [r15+0xb0]
%test rax, rax
%jz 0x7fd169019e60
724
725
726
@727
%mov r15, qword ptr [r15+0x18]
%test r15, r15
%jz 0x7fd169019f10
@728
%movzx eax, byte ptr [r15+0x315]
%mov edx, eax
%shr al, 0x5
%shr dl, 0x1
%or eax, edx
%test al, 0x1
%jnz 0x7fd169019e60
@729
%mov rsi, r15
%mov rdi, rbx
%call 0x7fd169022700
727
728
729
711
350
353
354
355
@730
%pxor xmm0, xmm0
%movdqa xmm2, xmmword ptr [rdi]
%movdqa xmm1, xmmword ptr [rsi]
%pcmpeqb xmm0, xmm1
%pslldq xmm2, 0x1
%pcmpeqb xmm2, xmm1
%psubb xmm2, xmm0
%pmovmskb r9d, xmm2
%shr edx, cl
%shr r9d, cl
%sub edx, r9d
%jnz 0x7fd16902f755
@731
%movdqa xmm3, xmmword ptr [rdi]
%pxor xmm0, xmm0
%mov rcx, 0x10
%mov r9d, 0xf
%lea r10, ptr [rdi+0xf]
%and r10, 0xfff
%sub r10, 0x1000
%nop word ptr [rax+rax*1], ax
%add r10, 0x10
%jnle 0x7fd16902f710
@732
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%movdqa xmm4, xmm2
%psrldq xmm3, 0xf
%pslldq xmm2, 0x1
%por xmm2, xmm3
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
730
359
360
715
716
718
350
353
354
355
730
359
360
719
721
722
350
351
353
354
355
@733
%pxor xmm0, xmm0
%movdqa xmm2, xmmword ptr [rdi]
%movdqa xmm1, xmmword ptr [rsi]
%pcmpeqb xmm0, xmm1
%pslldq xmm2, 0x8
%pcmpeqb xmm2, xmm1
%psubb xmm2, xmm0
%pmovmskb r9d, xmm2
%shr edx, cl
%shr r9d, cl
%sub edx, r9d
%jnz 0x7fd16902f755
@734
%movdqa xmm3, xmmword ptr [rdi]
%pxor xmm0, xmm0
%mov rcx, 0x10
%mov r9d, 0x8
%lea r10, ptr [rdi+0x8]
%and r10, 0xfff
%sub r10, 0x1000
%nop word ptr [rax+rax*1], ax
%add r10, 0x10
%jnle 0x7fd16902ee50
@735
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%movdqa xmm4, xmm2
%psrldq xmm3, 0x8
%pslldq xmm2, 0x8
%por xmm2, xmm3
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
733
359
360
719
721
723
724
725
726
@736
%mov rdx, qword ptr [r15+0x68]
%mov rsi, qword ptr [rax+0x8]
%mov rdi, rbx
%add rsi, qword ptr [rdx+0x8]
%call 0x7fd16902e360
736
350
351
353
354
355
733
359
360
@737
%test eax, eax
%jnz 0x7fd169019e60
@738
%mov rbp, qword ptr [r15+0x38]
%test rbp, rbp
%jnz 0x7fd169019ee0
@739
%jmp 0x7fd16901a715
737
727
728
729
711
350
351
353
354
355
712
359
360
715
716
718
350
351
353
354
355
712
359
360
719
721
723
724
725
726
736
350
351
353
354
@740
%lea r9, ptr [rax+0xf]
%sub r9, rcx
%lea r10, ptr [rip+0x3507]
%movsxd r9, dword ptr [r10+r9*4]
%lea r10, ptr [r10+r9*1]
%jmp r10
740
@741
%pxor xmm0, xmm0
%movdqa xmm2, xmmword ptr [rdi]
%movdqa xmm1, xmmword ptr [rsi]
%pcmpeqb xmm0, xmm1
%pslldq xmm2, 0x3
%pcmpeqb xmm2, xmm1
%psubb xmm2, xmm0
%pmovmskb r9d, xmm2
%shr edx, cl
%shr r9d, cl
%sub edx, r9d
%jnz 0x7fd16902f755
@742
%movdqa xmm3, xmmword ptr [rdi]
%pxor xmm0, xmm0
%mov rcx, 0x10
%mov r9d, 0xd
%lea r10, ptr [rdi+0xd]
%and r10, 0xfff
%sub r10, 0x1000
%nop word ptr [rax+rax*1], ax
%add r10, 0x10
%jnle 0x7fd16902f490
@743
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%movdqa xmm4, xmm2
%psrldq xmm3, 0xd
%pslldq xmm2, 0x3
%por xmm2, xmm3
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
741
359
@744
%bsf rdx, rdx
%movzx ecx, byte ptr [rsi+rdx*1]
%movzx eax, byte ptr [rdi+rdx*1]
%sub eax, ecx
%ret 
744
@745
%test eax, eax
%jnz 0x7fd169019e60
@746
%mov rbp, qword ptr [r15+0x38]
%test rbp, rbp
%jnz 0x7fd169019ee0
@747
%jmp 0x7fd16901a715
745
727
@748
%mov r15d, dword ptr [rip+0x21e849]
%test r15b, 0x40
%jnz 0x7fd16901a072
@749
%mov r11d, dword ptr [rip+0x21e9e8]
%test r11d, r11d
%jnz 0x7fd16901a55c
@750
%mov qword ptr [rsp+0x10], 0x0
%mov esi, 0x2f
%mov rdi, rbx
%mov byte ptr [rsp+0x5f], 0x0
%call 0x7fd1690300d0
748
749
750
695
696
697
@751
%test rax, rax
%jz 0x7fd16901a110
@752
%test r12, r12
%jz 0x7fd16901a040
@753
%mov rsi, rbx
%mov rdi, r12
%call 0x7fd169019340
751
@754
%mov r15d, dword ptr [rip+0x21e649]
%mov rdi, rbx
%call 0x7fd1690302f0
754
225
226
227
@755
%add rax, 0x1
%and r15d, 0x1
%mov qword ptr [rsp+0x18], rax
%jnz 0x7fd16901a770
@756
%test r12, r12
%jz 0x7fd16901a48e
@757
%cmp qword ptr [r12+0x128], 0x0
%jz 0x7fd16901a602
755
756
757
@758
%mov rax, qword ptr [rip+0x21ea57]
%xor ecx, ecx
%mov qword ptr [rsp+0x48], rbp
%mov r15, r12
%mov ebp, ecx
%mov qword ptr [rsp+0x20], rax
%lea rax, ptr [rsp+0x70]
%mov qword ptr [rsp+0x28], rax
%lea rax, ptr [rsp+0x60]
%mov qword ptr [rsp+0x30], rax
%lea rax, ptr [rsp+0x5f]
%mov qword ptr [rsp+0x38], rax
%jmp 0x7fd16901a68c
758
@759
%mov rax, qword ptr [r15+0x318]
%cmp rax, 0xffffffffffffffff
%jz 0x7fd16901a680
@760
%test rax, rax
%lea r11, ptr [r15+0x318]
%jnz 0x7fd16901a640
@761
%mov rax, qword ptr [r15+0xb8]
%test rax, rax
%jz 0x7fd16901a6e3
759
@762
%mov r15, qword ptr [r15+0x2d8]
%test r15, r15
%jz 0x7fd16901a6f0
@763
%mov rax, qword ptr [r15+0x318]
%cmp rax, 0xffffffffffffffff
%jz 0x7fd16901a680
@764
%test rax, rax
%lea r11, ptr [r15+0x318]
%jnz 0x7fd16901a640
762
@765
%mov eax, ebp
%mov rcx, qword ptr [rsp+0x20]
%mov rbp, qword ptr [rsp+0x48]
%test al, al
%jnz 0x7fd16901a517
@766
%jmp 0x7fd16901a49d
765
766
@767
%test rcx, rcx
%jz 0x7fd16901a517
@768
%movzx eax, byte ptr [rcx+0x314]
%mov byte ptr [rsp+0x28], al
%and eax, 0x3
%cmp al, 0x2
%jz 0x7fd16901a517
@769
%mov rax, qword ptr [rcx+0x318]
%cmp rax, 0xffffffffffffffff
%jz 0x7fd16901a517
767
768
769
@770
%cmp qword ptr [rip+0x21e431], 0xffffffffffffffff
%jz 0x7fd16901a868
@771
%test r12, r12
%jnz 0x7fd16901a154
@772
%sub rsp, 0x8
%lea rcx, ptr [rip+0x21e417]
%lea rax, ptr [rsp+0x67]
%push rax
%push 0x2
%push qword ptr [rip+0x21eb19]
%lea r9, ptr [rsp+0x90]
%lea r8, ptr [rsp+0x80]
%jmp 0x7fd16901a1dd
770
@773
%test r12, r12
%jnz 0x7fd16901a199
@774
%jmp 0x7fd16901a359
773
@775
%mov rax, qword ptr [r12+0x3a8]
%cmp rax, 0xffffffffffffffff
%jz 0x7fd16901a359
@776
%test rax, rax
%lea r15, ptr [r12+0x3a8]
%jz 0x7fd16901a7bf
@777
%sub rsp, 0x8
%mov rcx, r15
%lea rax, ptr [rsp+0x67]
%push rax
%push 0x4
%push r12
%lea r9, ptr [rsp+0x90]
%lea r8, ptr [rsp+0x80]
%mov rsi, qword ptr [rsp+0x38]
%mov edx, r13d
%mov rdi, rbx
%call 0x7fd1690171c0
775
@778
%test r13d, 0x4000000
%mov qword ptr [rsp+0x60], 0x0
%jnz 0x7fd16901a853
@779
%mov r9d, dword ptr [rip+0x21e40a]
%test r9d, r9d
%jnz 0x7fd16901a3fa
@780
%mov rdi, rbx
%call 0x7fd169029060
778
779
780
@781
%push rbp
%mov rbp, rsp
%push r15
%push r14
%push r13
%push r12
%mov r12, rdi
%push rbx
%sub rsp, 0x58
%test byte ptr [rip+0x20f6e5], 0x1
%jnz 0x7fd169029870
@782
%mov r14, qword ptr [rip+0x211030]
%test r14, r14
%jz 0x7fd169029350
@783
%cmp r14, 0xffffffffffffffff
%jz 0x7fd1690291d8
781
782
@784
%lea rsi, ptr [rip+0x210d51]
%lea rdi, ptr [rip+0x90ca]
%mov edx, 0x1
%call 0x7fd169022470
784
@785
%push r13
%push r12
%xor eax, eax
%push rbp
%push rbx
%mov r12, rsi
%mov esi, 0x80000
%mov r13d, edx
%mov rbp, 0xffffffffffffffff
%sub rsp, 0x98
%call 0x7fd16902dcb0
785
@786
%mov r10d, esi
%mov qword ptr [rsp-0x20], rdx
%and r10d, 0x40
%jnz 0x7fd16902dcf0
@787
%mov eax, esi
%and eax, 0x410000
%cmp eax, 0x410000
%jz 0x7fd16902dcf0
@788
%mov edx, esi
%mov eax, 0x101
%mov rsi, rdi
%mov edi, 0xffffff9c
%syscall 
786
787
788
@789
%cmp rax, 0xfffffffffffff000
%jnbe 0x7fd16902dd18
@790
%ret 
789
790
@791
%test eax, eax
%js 0x7fd1690224cb
@792
%mov rdx, rsp
%mov esi, eax
%mov edi, 0x1
%mov ebx, eax
%call 0x7fd16902dc30
791
792
@793
%cmp edi, 0x1
%mov eax, esi
%jnbe 0x7fd16902dc60
@794
%mov edi, eax
%mov rsi, rdx
%mov eax, 0x5
%syscall 
793
794
@795
%cmp rax, 0xfffffffffffff000
%jnbe 0x7fd16902dc50
@796
%ret 
795
796
@797
%test eax, eax
%js 0x7fd1690224bd
@798
%mov rsi, qword ptr [rsp+0x30]
%test rsi, rsi
%mov qword ptr [r12], rsi
%jnz 0x7fd1690224e0
@799
%mov rbp, 0xffffffffffffffff
%mov edi, ebx
%call 0x7fd16902ded0
797
798
@800
%xor r9d, r9d
%mov r8d, ebx
%mov ecx, 0x2
%mov edx, r13d
%xor edi, edi
%call 0x7fd16902df00
800
@801
%test r9d, 0xfff
%jnz 0x7fd16902df60
@802
%test rdi, rdi
%push r15
%mov r15d, r8d
%push r14
%mov r14d, ecx
%push r13
%mov r13, rsi
%push r12
%mov r12d, edx
%push rbp
%mov rbp, rdi
%push rbx
%mov rbx, r9
%jz 0x7fd16902df78
@803
%mov r9, rbx
%mov r8d, r15d
%mov r10d, r14d
%mov edx, r12d
%mov rsi, r13
%mov rdi, rbp
%mov eax, 0x9
%syscall 
801
802
@804
%test dl, 0x4
%jz 0x7fd16902df2a
@805
%test byte ptr [rip+0x20a892], 0x1
%jz 0x7fd16902df2a
@806
%mov r10d, ecx
%mov ecx, 0x9
%xor edi, edi
%or r10d, 0x40
%mov eax, ecx
%syscall 
804
@807
%mov r9, rbx
%mov r8d, r15d
%mov r10d, r14d
%mov edx, r12d
%mov rsi, r13
%mov rdi, rbp
%mov eax, 0x9
%syscall 
807
@808
%cmp rax, 0xfffffffffffff000
%jnbe 0x7fd16902dfb0
@809
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
808
809
@810
%mov rbp, rax
%jmp 0x7fd1690224c4
810
@811
%mov edi, ebx
%call 0x7fd16902ded0
811
@812
%mov eax, 0x3
%syscall 
812
@813
%cmp rax, 0xfffffffffffff000
%jnbe 0x7fd16902dee8
@814
%ret 
813
814
@815
%add rsp, 0x98
%mov rax, rbp
%pop rbx
%pop rbp
%pop r12
%pop r13
%ret 
815
@816
%cmp rax, 0xffffffffffffffff
%mov r13, rax
%jz 0x7fd1690296a3
@817
%mov rsi, qword ptr [rip+0x210d2c]
%cmp rsi, 0x10
%jbe 0x7fd16902969b
@818
%mov rax, 0x2e312d6f732e646c
%cmp qword ptr [r13], rax
%jnz 0x7fd169029670
816
817
818
@819
%cmp word ptr [r13+0x8], 0x2e37
%jnz 0x7fd169029670
@820
%cmp byte ptr [r13+0xa], 0x30
%jnz 0x7fd169029670
@821
%mov eax, dword ptr [r13+0xc]
%mov qword ptr [rip+0x210cfb], r13
%lea rax, ptr [rax+rax*2]
%lea rax, ptr [rax*4+0x17]
%and rax, 0xfffffffffffffff8
%lea rdi, ptr [r13+rax*1]
%add rax, 0x30
%cmp rsi, rax
%mov qword ptr [rip+0x210cd0], rdi
%jb 0x7fd16902940f
819
820
821
@822
%mov rdx, 0x686361632e6f732e
%mov rax, 0x646c2d6362696c67
%xor rdx, qword ptr [rdi+0x8]
%xor rax, qword ptr [rdi]
%or rdx, rax
%jnz 0x7fd16902940f
@823
%cmp dword ptr [rdi+0x10], 0x312e3165
%jz 0x7fd169029b63
@824
%mov qword ptr [rip+0x210c96], 0xffffffffffffffff
%add rsi, r13
%mov r14, r13
%mov eax, dword ptr [r14+0xc]
%mov rbx, rax
%lea rax, ptr [rax+rax*2]
%lea rax, ptr [r14+rax*4+0x10]
%sub rsi, rax
%sub ebx, 0x1
%mov qword ptr [rbp-0x48], rax
%mov rdi, rsi
%mov qword ptr [rbp-0x58], rsi
%mov dword ptr [rbp-0x50], esi
%js 0x7fd1690291d8
822
823
@825
%mov r14, r13
%mov r13, rdi
%jmp 0x7fd1690290a9
825
@826
%add rsi, r14
%cmp r13, 0xffffffffffffffff
%jz 0x7fd169029420
@827
%mov rbx, qword ptr [rip+0x20f6ab]
%sub rsi, r13
%mov r15, 0xffffffffffffffff
%mov qword ptr [rbp-0x50], rsi
%mov r14d, esi
%mov qword ptr [rbp-0x60], r15
%test rbx, rbx
%jz 0x7fd169029111
@828
%lea rsi, ptr [rip+0x20f77f]
%mov rdi, rbx
%call 0x7fd16902e360
826
827
828
350
351
352
744
@829
%test eax, eax
%jz 0x7fd169029b40
@830
%lea rsi, ptr [rip+0x20f771]
%mov rdi, rbx
%call 0x7fd16902e360
829
830
350
351
352
744
@831
%test eax, eax
%mov rax, 0x8000000000000
%cmovnz rax, r15
%mov qword ptr [rbp-0x60], rax
%lea rsi, ptr [rbp-0x38]
%xor edx, edx
%mov edi, 0xe
%call 0x7fd16902a250
831
204
205
207
210
@832
%mov rax, qword ptr [rbp-0x38]
%xor esi, esi
%lea rdi, ptr [rip+0x8f54]
%mov qword ptr [rbp-0x78], rax
%mov eax, 0x15
%syscall 
832
@833
%test eax, eax
%setz dl
%cmp eax, 0xfffff000
%setbe al
%or edx, eax
%mov rax, qword ptr [rip+0x20f669]
%mov byte ptr [rbp-0x68], dl
%mov rdx, qword ptr [rip+0x210f57]
%mov qword ptr [rbp-0x70], rax
%mov eax, dword ptr [rdx+0x14]
%mov qword ptr [rbp-0x48], rdx
%mov ebx, eax
%mov dword ptr [rbp-0x58], eax
%sub ebx, 0x1
%js 0x7fd1690291d8
@834
%mov r11d, ebx
%sar r11d, 0x1
%movsxd rax, r11d
%lea rax, ptr [rax+rax*2]
%mov esi, dword ptr [rdx+rax*8+0x34]
%cmp dword ptr [rbp-0x50], esi
%jbe 0x7fd1690291d8
@835
%xor r15d, r15d
%jmp 0x7fd1690291be
833
834
835
@836
%add rsi, r13
%mov rdi, r12
%call 0x7fd169028f70
836
@837
%movzx edx, byte ptr [rdi]
%movsx ecx, byte ptr [rsi]
%test dl, dl
%jz 0x7fd169028fab
@838
%lea r8d, ptr [rdx-0x30]
%lea eax, ptr [rcx-0x30]
%cmp r8b, 0x9
%jbe 0x7fd169028fb8
@839
%cmp al, 0x9
%jbe 0x7fd169029040
837
838
839
@840
%cmp dl, cl
%jnz 0x7fd169029050
@841
%movzx edx, byte ptr [rdi+0x1]
%movsx ecx, byte ptr [rsi+0x1]
%add rdi, 0x1
%add rsi, 0x1
%test dl, dl
%jnz 0x7fd169028f7a
@842
%movsx eax, cl
%neg eax
%ret 
840
841
@843
%lea r8d, ptr [rdx-0x30]
%lea eax, ptr [rcx-0x30]
%cmp r8b, 0x9
%jbe 0x7fd169028fb8
@844
%cmp al, 0x9
%jbe 0x7fd169029040
@845
%cmp dl, cl
%jnz 0x7fd169029050
843
844
845
@846
%movzx edx, byte ptr [rdi+0x1]
%movsx ecx, byte ptr [rsi+0x1]
%add rdi, 0x1
%add rsi, 0x1
%test dl, dl
%jnz 0x7fd169028f7a
@847
%movsx eax, cl
%neg eax
%ret 
846
843
844
845
846
843
844
845
@848
%movsx eax, dl
%sub eax, ecx
%ret 
848
@849
%test eax, eax
%jz 0x7fd1690291f0
@850
%jns 0x7fd169029190
@851
%lea r15d, ptr [r11+0x1]
%cmp r15d, ebx
%jle 0x7fd169029199
849
850
851
@852
%lea eax, ptr [r15+rbx*1]
%mov rdx, qword ptr [rbp-0x48]
%mov r11d, eax
%shr r11d, 0x1f
%add r11d, eax
%sar r11d, 0x1
%movsxd rax, r11d
%lea rax, ptr [rax+rax*2]
%mov esi, dword ptr [rdx+rax*8+0x34]
%cmp r14d, esi
%jbe 0x7fd1690291d8
@853
%add rsi, r13
%mov rdi, r12
%call 0x7fd169028f70
852
853
837
838
839
840
841
843
844
845
846
843
844
845
846
843
844
845
848
849
850
851
852
853
837
838
839
840
841
843
844
845
846
843
844
845
846
843
844
845
848
849
850
@854
%lea ebx, ptr [r11-0x1]
%cmp r15d, ebx
%jnle 0x7fd1690291d8
@855
%lea eax, ptr [r15+rbx*1]
%mov rdx, qword ptr [rbp-0x48]
%mov r11d, eax
%shr r11d, 0x1f
%add r11d, eax
%sar r11d, 0x1
%movsxd rax, r11d
%lea rax, ptr [rax+rax*2]
%mov esi, dword ptr [rdx+rax*8+0x34]
%cmp r14d, esi
%jbe 0x7fd1690291d8
@856
%add rsi, r13
%mov rdi, r12
%call 0x7fd169028f70
854
855
856
837
838
839
840
841
843
844
845
846
843
844
845
846
843
844
845
846
843
844
845
848
849
850
851
852
853
837
838
839
840
841
843
844
845
846
843
844
845
846
843
844
845
848
849
850
854
855
856
837
838
839
840
841
843
844
845
846
843
844
845
846
843
844
845
846
843
844
845
848
849
850
851
852
853
837
838
839
840
841
843
844
845
846
843
844
845
846
843
844
845
846
843
844
845
848
849
850
851
852
853
837
838
839
840
841
843
844
845
846
843
844
845
846
843
844
845
846
843
844
845
846
843
844
845
846
843
844
845
846
843
844
845
846
843
@857
%cmp al, 0x9
%jnbe 0x7fd169029056
@858
%movsx eax, dl
%movsx edx, byte ptr [rdi+0x1]
%lea r8d, ptr [rcx-0x30]
%lea r10, ptr [rdi+0x1]
%sub eax, 0x30
%lea r9, ptr [rsi+0x1]
%mov rdi, r10
%lea ecx, ptr [rdx-0x30]
%cmp cl, 0x9
%jnbe 0x7fd169028ffe
@859
%nop dword ptr [rax], eax
%lea eax, ptr [rax+rax*4]
%add rdi, 0x1
%lea eax, ptr [rdx+rax*2-0x30]
%movsx edx, byte ptr [rdi]
%lea ecx, ptr [rdx-0x30]
%cmp cl, 0x9
%jbe 0x7fd169028fe8
857
858
@860
%movsx ecx, byte ptr [rsi+0x1]
%lea esi, ptr [rcx-0x30]
%cmp sil, 0x9
%mov rsi, r9
%jnbe 0x7fd16902902a
@861
%data16 nop
%lea r8d, ptr [r8+r8*4]
%add rsi, 0x1
%lea r8d, ptr [rcx+r8*2-0x30]
%movsx ecx, byte ptr [rsi]
%lea r9d, ptr [rcx-0x30]
%cmp r9b, 0x9
%jbe 0x7fd169029010
@862
%cmp r8d, eax
%jz 0x7fd169028f76
860
@863
%cmp r8d, eax
%jz 0x7fd169028f76
@864
%sub eax, r8d
%ret 
863
@865
%test dl, dl
%jz 0x7fd169028fab
@866
%lea r8d, ptr [rdx-0x30]
%lea eax, ptr [rcx-0x30]
%cmp r8b, 0x9
%jbe 0x7fd169028fb8
@867
%cmp al, 0x9
%jbe 0x7fd169029040
865
@868
%movsx eax, cl
%neg eax
%ret 
868
849
@869
%test r11d, r11d
%jle 0x7fd169029b53
@870
%lea r15d, ptr [r11-0x1]
%mov rdx, qword ptr [rbp-0x48]
%movsxd rax, r15d
%lea rax, ptr [rax+rax*2]
%mov esi, dword ptr [rdx+rax*8+0x34]
%cmp esi, dword ptr [rbp-0x50]
%jnb 0x7fd169029b53
@871
%lea eax, ptr [r11-0x2]
%cdqe 
%lea rax, ptr [rax+rax*2]
%lea rcx, ptr [rdx+rax*8+0x34]
%jmp 0x7fd16902924b
869
870
871
@872
%lea eax, ptr [r15+0x1]
%add rsi, r13
%mov rdi, r12
%mov qword ptr [rbp-0x50], rcx
%mov dword ptr [rbp-0x58], eax
%call 0x7fd169028f70
872
837
838
839
840
841
843
844
845
846
843
844
845
846
843
844
845
846
843
844
845
848
@873
%test eax, eax
%jz 0x7fd169029230
@874
%mov r15d, dword ptr [rbp-0x58]
%cmp dword ptr [rip+0x20f541], 0x303
%mov eax, dword ptr [rip+0x20f4eb]
%mov dword ptr [rbp-0x50], eax
%jz 0x7fd1690297b0
@875
%test eax, eax
%mov rdi, qword ptr [rbp-0x48]
%movsxd rax, r15d
%lea rax, ptr [rax+rax*2]
%lea rcx, ptr [rdi+rax*8+0x30]
%jnz 0x7fd1690294c0
873
874
@876
%movsxd rax, r15d
%mov rdi, qword ptr [rbp-0x48]
%mov rdx, qword ptr [rbp-0x70]
%and rdx, qword ptr [rbp-0x78]
%lea rax, ptr [rax+rax*2]
%lea rcx, ptr [rdi+rax*8+0x30]
%mov rax, 0x800f000000000000
%or rax, rdx
%cmp byte ptr [rbp-0x68], 0x0
%not rax
%jnz 0x7fd169029580
@877
%mov esi, dword ptr [rbp-0x50]
%test esi, esi
%jnz 0x7fd169029a28
@878
%mov qword ptr [rbp-0x50], rax
%jmp 0x7fd169029809
876
877
@879
%mov qword ptr [rbp-0x58], rax
%jmp 0x7fd169029a41
879
@880
%cmp r15d, r11d
%jle 0x7fd169029a6d
@881
%mov esi, dword ptr [rcx+0x4]
%mov qword ptr [rbp-0x48], rcx
%cmp esi, r14d
%jnb 0x7fd1690291d8
@882
%add rsi, r13
%mov rdi, r12
%call 0x7fd169028f70
880
@883
%cmp dword ptr [rcx], 0x303
%jnz 0x7fd169029a30
@884
%mov eax, dword ptr [rcx+0x8]
%cmp r14d, eax
%jbe 0x7fd169029a30
@885
%mov rsi, qword ptr [rcx+0x10]
%test qword ptr [rbp-0x58], rsi
%jnz 0x7fd169029a30
883
@886
%add r15d, 0x1
%add rcx, 0x18
%cmp r15d, ebx
%jnle 0x7fd1690291d8
@887
%cmp r15d, r11d
%jle 0x7fd169029a6d
@888
%mov esi, dword ptr [rcx+0x4]
%mov qword ptr [rbp-0x48], rcx
%cmp esi, r14d
%jnb 0x7fd1690291d8
886
887
888
@889
%add rsi, r13
%mov rdi, r12
%call 0x7fd169028f70
889
837
838
839
840
841
843
844
845
846
843
844
845
846
843
844
845
846
843
844
845
846
843
844
845
846
843
844
845
846
843
844
845
846
843
857
858
860
863
865
868
@890
%test eax, eax
%mov rcx, qword ptr [rbp-0x48]
%jnz 0x7fd1690291d8
@891
%cmp dword ptr [rcx], 0x303
%jnz 0x7fd169029a30
@892
%mov eax, dword ptr [rcx+0x8]
%cmp r14d, eax
%jbe 0x7fd169029a30
890
891
892
@893
%mov rsi, qword ptr [rcx+0x10]
%test qword ptr [rbp-0x58], rsi
%jnz 0x7fd169029a30
@894
%mov edi, dword ptr [rbp-0x50]
%cmp edi, dword ptr [rcx+0xc]
%jb 0x7fd169029a30
@895
%mov rdi, 0xf000000000000
%and rsi, rdi
%jz 0x7fd1690295fc
893
894
895
@896
%add rax, r13
%mov qword ptr [rbp-0x58], rax
%nop dword ptr [rax+rax*1], eax
%test byte ptr [rip+0x20f151], 0x1
%jnz 0x7fd169029b6e
@897
%cmp qword ptr [rbp-0x58], 0x0
%jz 0x7fd1690291d8
@898
%mov rbx, qword ptr [rbp-0x58]
%mov rdi, rbx
%call 0x7fd1690302f0
896
897
898
225
226
@899
%and rax, 0xfffffffffffffff0
%pcmpeqb xmm1, xmmword ptr [rax+0x10]
%pcmpeqb xmm2, xmmword ptr [rax+0x20]
%pcmpeqb xmm3, xmmword ptr [rax+0x30]
%pmovmskb edx, xmm1
%pmovmskb r8d, xmm2
%pmovmskb ecx, xmm3
%shl rdx, 0x10
%shl rcx, 0x10
%or rcx, r8
%shl rcx, 0x20
%or rdx, rcx
%mov rcx, rdi
%xor rcx, rax
%and rax, 0xffffffffffffffc0
%sar rdx, cl
%test rdx, rdx
%jz 0x7fd1690303f0
@900
%bsf rax, rdx
%ret 
899
900
@901
%lea rdx, ptr [rax+0x1]
%add rax, 0x1f
%mov rsi, rbx
%and rax, 0xfffffffffffffff0
%sub rsp, rax
%lea rcx, ptr [rsp+0xf]
%and rcx, 0xfffffffffffffff0
%mov rdi, rcx
%call 0x7fd169030840
901
277
278
279
@902
%mov rdi, rax
%call 0x7fd16902e310
902
@903
%push rbp
%push rbx
%mov rbp, rdi
%sub rsp, 0x8
%call 0x7fd1690302f0
903
225
226
899
900
@904
%lea rbx, ptr [rax+0x1]
%mov rdi, rbx
%call 0x7fd169011ea0
904
266
267
268
269
274
@905
%test rax, rax
%jz 0x7fd16902e348
@906
%add rsp, 0x8
%mov rdx, rbx
%mov rsi, rbp
%pop rbx
%pop rbp
%mov rdi, rax
%jmp 0x7fd169030840
905
906
277
278
279
@907
%lea rsp, ptr [rbp-0x28]
%pop rbx
%pop r12
%pop r13
%pop r14
%pop r15
%pop rbp
%ret 
907
@908
%test rax, rax
%mov r10, rax
%jz 0x7fd16901a3fa
@909
%test r12, r12
%jz 0x7fd16901a813
@910
%test byte ptr [r12+0x3d5], 0x8
%mov rdx, r12
%jnz 0x7fd16901a87f
908
909
910
@911
%lea r15, ptr [rsp+0x70]
%sub rsp, 0x8
%mov rdi, r10
%push 0x0
%mov r8d, r13d
%mov ecx, 0x8
%mov rsi, r15
%lea r9, ptr [rsp+0x6f]
%mov qword ptr [rsp+0x30], r10
%call 0x7fd169016bc0
911
@912
%push rbp
%mov rbp, rsp
%push r15
%push r14
%push r13
%push r12
%mov r15d, r8d
%push rbx
%mov rbx, rsi
%sub rsp, 0x38
%mov eax, dword ptr [rbp+0x10]
%test ecx, ecx
%mov qword ptr [rbp-0x38], rdi
%mov qword ptr [rbp-0x48], r9
%mov dword ptr [rbp-0x40], eax
%mov eax, dword ptr [rip+0x221d23]
%jz 0x7fd169016bf7
@913
%test eax, eax
%jnz 0x7fd169016e70
@914
%mov rdi, qword ptr [rbp-0x38]
%xor eax, eax
%mov esi, 0x80000
%call 0x7fd16902dcb0
912
913
914
786
787
788
789
790
@915
%cmp eax, 0xffffffff
%mov r14d, eax
%jz 0x7fd169016ee0
@916
%lea r12, ptr [rbx+0x8]
%mov dword ptr [rip+0x2234ff], 0x0
%xor eax, eax
%mov qword ptr [rbx], 0x0
%mov r13d, 0x340
%mov rdx, r13
%lea rsi, ptr [r12+rax*1]
%mov edi, r14d
%sub rdx, rax
%call 0x7fd16902dda0
915
916
@917
%xor eax, eax
%syscall 
917
@918
%cmp rax, 0xfffffffffffff000
%jnbe 0x7fd16902ddb0
@919
%ret 
918
919
@920
%test rax, rax
%jle 0x7fd169016fb0
@921
%add rax, qword ptr [rbx]
%cmp rax, 0x3f
%mov qword ptr [rbx], rax
%jbe 0x7fd169016c30
@922
%cmp rax, 0x3f
%jle 0x7fd169016f50
920
921
922
@923
%mov rdi, qword ptr [rbx+0x8]
%cmp qword ptr [rip+0x1e474], rdi
%jnz 0x7fd169016f78
@924
%movzx edx, byte ptr [rbx+0x10]
%test dl, dl
%jnz 0x7fd169016f90
@925
%mov edi, dword ptr [rip+0x1e465]
%cmp dword ptr [rbx+0x11], edi
%jz 0x7fd169016ce8
923
@926
%cmp qword ptr [rip+0x1a0a1], rdi
%jz 0x7fd169016c72
@927
%jmp 0x7fd169016c89
926
@928
%movzx edx, byte ptr [rbx+0x10]
%test dl, dl
%jnz 0x7fd169016f90
@929
%mov edi, dword ptr [rip+0x1e465]
%cmp dword ptr [rbx+0x11], edi
%jz 0x7fd169016ce8
@930
%cmp dword ptr [rbx+0x8], 0x464c457f
%jnz 0x7fd1690171ab
928
929
@931
%movzx edi, word ptr [rip+0x1e3fe]
%cmp word ptr [rbx+0x15], di
%jnz 0x7fd169016c89
@932
%movzx edi, byte ptr [rip+0x1e3f3]
%cmp byte ptr [rbx+0x17], dil
%jnz 0x7fd169016c89
@933
%xor r13d, r13d
%cmp dword ptr [rbx+0x1c], 0x1
%jnz 0x7fd169017110
931
932
933
@934
%cmp word ptr [rbx+0x1a], 0x3e
%jnz 0x7fd169016e50
@935
%movzx edx, word ptr [rbx+0x18]
%lea ecx, ptr [rdx-0x2]
%cmp cx, 0x1
%jnbe 0x7fd169017120
@936
%cmp dx, 0x2
%jz 0x7fd169017130
934
935
936
@937
%cmp word ptr [rbx+0x3e], 0x38
%jnz 0x7fd169017150
@938
%movzx edx, word ptr [rbx+0x40]
%mov rsi, qword ptr [rbx+0x28]
%lea r8, ptr [r12+rsi*1]
%lea r13, ptr [rdx*8]
%sub r13, rdx
%shl r13, 0x3
%lea rcx, ptr [r13+rsi*1]
%cmp rcx, rax
%jnbe 0x7fd169017040
@939
%add r13, r8
%cmp r8, r13
%jnb 0x7fd169016ee6
937
938
939
@940
%mov r13, r8
%jmp 0x7fd169016d9c
940
@941
%cmp dword ptr [r13], 0x4
%jnz 0x7fd169016d80
@942
%mov rcx, qword ptr [r13+0x20]
%cmp rcx, 0x1f
%jbe 0x7fd169016d80
@943
%mov r9, qword ptr [r13+0x30]
%cmp r9, 0x3
%jbe 0x7fd169016d80
941
@944
%lea rax, ptr [rdx*8]
%add r13, 0x38
%sub rax, rdx
%lea rax, ptr [r8+rax*8]
%cmp r13, rax
%jnb 0x7fd169016ee6
@945
%cmp dword ptr [r13], 0x4
%jnz 0x7fd169016d80
@946
%mov rcx, qword ptr [r13+0x20]
%cmp rcx, 0x1f
%jbe 0x7fd169016d80
944
945
944
945
944
945
944
945
944
945
946
@947
%mov r9, qword ptr [r13+0x30]
%cmp r9, 0x3
%jbe 0x7fd169016d80
@948
%lea rax, ptr [r9-0x4]
%test rax, 0xfffffffffffffffb
%jnz 0x7fd169016d80
@949
%mov rsi, qword ptr [r13+0x8]
%lea rax, ptr [rcx+rsi*1]
%cmp rax, qword ptr [rbx]
%jnbe 0x7fd1690170a8
947
948
949
@950
%lea r15, ptr [r12+rsi*1]
%mov rdx, r9
%lea rsi, ptr [rip+0x1e2ee]
%lea rdi, ptr [r9+0xb]
%lea r10, ptr [r9-0x1]
%neg rdx
%nop dword ptr [rax], eax
%mov rax, qword ptr [r15]
%mov r9, qword ptr [r15+0x8]
%xor rax, qword ptr [rsi]
%xor r9, qword ptr [rip+0x1e2d7]
%or r9, rax
%jnz 0x7fd169017010
@951
%test rcx, rcx
%jz 0x7fd169017098
@952
%movzx eax, byte ptr [r15+0x14]
%movzx edx, byte ptr [r15+0x18]
%shl eax, 0x8
%add eax, edx
%movzx edx, byte ptr [r15+0x1c]
%shl eax, 0x8
%add eax, edx
%mov edx, dword ptr [r15+0x10]
%test edx, edx
%jnz 0x7fd169016e50
950
@953
%mov eax, dword ptr [r15]
%mov r9d, dword ptr [r15+0x4]
%add rax, rdi
%add r9, r10
%and rax, rdx
%add rax, r9
%lea r9, ptr [rcx-0x20]
%and rax, rdx
%cmp rax, r9
%jnbe 0x7fd169017098
@954
%sub rcx, rax
%add r15, rax
%jmp 0x7fd169016df0
953
954
@955
%mov rax, qword ptr [r15]
%mov r9, qword ptr [r15+0x8]
%xor rax, qword ptr [rsi]
%xor r9, qword ptr [rip+0x1e2d7]
%or r9, rax
%jnz 0x7fd169017010
@956
%test rcx, rcx
%jz 0x7fd169017098
@957
%movzx eax, byte ptr [r15+0x14]
%movzx edx, byte ptr [r15+0x18]
%shl eax, 0x8
%add eax, edx
%movzx edx, byte ptr [r15+0x1c]
%shl eax, 0x8
%add eax, edx
%mov edx, dword ptr [r15+0x10]
%test edx, edx
%jnz 0x7fd169016e50
955
956
957
@958
%mov edx, dword ptr [rip+0x22192a]
%cmp eax, edx
%jbe 0x7fd169016ee6
@959
%test edx, edx
%jz 0x7fd169016ee6
@960
%nop word ptr [rax+rax*1], ax
%mov edi, r14d
%mov r14d, 0xffffffff
%call 0x7fd16902ded0
958
@961
%lea rsp, ptr [rbp-0x28]
%mov eax, r14d
%pop rbx
%pop r12
%pop r13
%pop r14
%pop r15
%pop rbp
%ret 
961
@962
%pop rdi
%cmp eax, 0xffffffff
%mov edx, eax
%pop r8
%mov r10, qword ptr [rsp+0x20]
%jz 0x7fd16901a3f2
@963
%mov qword ptr [rsp+0x60], r10
%jmp 0x7fd16901a1fc
962
963
@964
%test byte ptr [rip+0x21e55d], 0x1
%jnz 0x7fd16901a7a4
@965
%test r13d, 0x10000000
%mov eax, 0x0
%lea r15, ptr [rsp+0x70]
%cmovnz r12, rax
%cmp edx, 0xffffffff
%jnz 0x7fd169019fc7
@966
%jmp 0x7fd16901a24c
964
965
@967
%mov rax, qword ptr [rip+0x21ee8a]
%mov rcx, r15
%mov r9, r12
%mov rdi, rbx
%mov qword ptr [rsp+0x68], rax
%push rbp
%lea rax, ptr [rsp+0x70]
%push rax
%push r13
%mov eax, dword ptr [rsp+0x20]
%push rax
%mov r8, qword ptr [rsp+0x80]
%mov rsi, qword ptr [rsp+0x30]
%call 0x7fd169017800
967
@968
%push rbp
%mov rbp, rsp
%push r15
%push r14
%push r13
%push r12
%mov r12, r9
%push rbx
%mov ebx, edx
%sub rsp, 0x118
%mov qword ptr [rbp-0x108], rsi
%mov rsi, qword ptr [rbp+0x28]
%mov qword ptr [rbp-0xd0], rdi
%xor edi, edi
%mov dword ptr [rbp-0xd4], edx
%mov qword ptr [rbp-0x100], rcx
%mov qword ptr [rbp-0xe0], r8
%call 0x7fd169021db0
968
639
642
@969
%test rdi, rdi
%jz 0x7fd169021e30
@970
%mov dword ptr [rax], 0x1
%lea rdx, ptr [rsi+rsi*8]
%lea rcx, ptr [rip+0x21727a]
%mov qword ptr [rax+0x20], rdi
%shl rdx, 0x4
%mov rdx, qword ptr [rcx+rdx*1]
%lea rcx, ptr [rip-0x59]
%mov qword ptr [rax+0x10], rcx
%mov qword ptr [rax+0x8], rdx
%ret 
969
@971
%ret 
971
@972
%lea rdx, ptr [rbp-0xc0]
%mov esi, ebx
%mov edi, 0x1
%mov qword ptr [rbp-0xe8], rax
%call 0x7fd16902dc30
972
793
794
795
796
@973
%test eax, eax
%js 0x7fd169018178
@974
%mov rax, qword ptr [rbp-0xb8]
%lea rsi, ptr [rip+0x2217ea]
%mov r15, qword ptr [rbp-0xc0]
%mov qword ptr [rbp-0xf0], rax
%mov rax, qword ptr [rbp+0x28]
%lea rax, ptr [rax+rax*8]
%shl rax, 0x4
%mov rbx, qword ptr [rsi+rax*1]
%test rbx, rbx
%jnz 0x7fd1690178ad
@975
%jmp 0x7fd169017938
973
974
@976
%test byte ptr [rbx+0x315], 0x20
%jnz 0x7fd1690178a0
@977
%cmp r15, qword ptr [rbx+0x398]
%jnz 0x7fd1690178a0
@978
%mov rax, qword ptr [rbp-0xf0]
%cmp rax, qword ptr [rbx+0x3a0]
%jnz 0x7fd1690178a0
976
977
@979
%mov rbx, qword ptr [rbx+0x18]
%test rbx, rbx
%jz 0x7fd169017938
@980
%test byte ptr [rbx+0x315], 0x20
%jnz 0x7fd1690178a0
@981
%cmp r15, qword ptr [rbx+0x398]
%jnz 0x7fd1690178a0
979
980
981
979
980
981
979
@982
%cmp qword ptr [rbp+0x28], 0x0
%jnz 0x7fd1690184b6
@983
%mov eax, dword ptr [rbp+0x18]
%and eax, 0x4
%mov dword ptr [rbp-0xd8], eax
%jnz 0x7fd169018767
@984
%test byte ptr [rip+0x220e04], 0x40
%jnz 0x7fd169017f9a
982
983
984
@985
%mov rax, qword ptr [rbp-0xe8]
%mov eax, dword ptr [rax+0x18]
%test eax, eax
%jz 0x7fd169017b00
@986
%cmp eax, 0x1
%jnz 0x7fd169018cc3
@987
%mov byte ptr [rbp-0x111], 0x0
%mov r9, qword ptr [rbp+0x28]
%mov r8d, dword ptr [rbp+0x18]
%mov rcx, r12
%mov edx, dword ptr [rbp+0x10]
%mov rsi, qword ptr [rbp-0xd0]
%mov rdi, qword ptr [rbp-0xe0]
%call 0x7fd16901d090
985
986
987
259
225
226
227
260
261
262
265
266
267
268
@988
%push rbp
%push rbx
%sub rsp, 0x8
%mov rax, qword ptr [rip+0x20c27d]
%lea rbx, ptr [rax+rdi*1-0x1]
%mov rdx, rax
%neg rdx
%and rbx, rdx
%jnz 0x7fd16902c514
@989
%test rdi, rdi
%jnz 0x7fd16902c5c8
@990
%add rbx, rax
%xor r9d, r9d
%mov rbp, rdi
%mov r8d, 0xffffffff
%xor edi, edi
%mov ecx, 0x22
%mov edx, 0x3
%mov rsi, rbx
%call 0x7fd16902df00
988
@991
%add rbx, rax
%xor r9d, r9d
%mov rbp, rdi
%mov r8d, 0xffffffff
%xor edi, edi
%mov ecx, 0x22
%mov edx, 0x3
%mov rsi, rbx
%call 0x7fd16902df00
991
801
802
804
807
808
809
@992
%cmp rax, 0xffffffffffffffff
%jz 0x7fd16902c5c8
@993
%cmp qword ptr [rip+0x20db88], rax
%mov rdx, rax
%jz 0x7fd16902c5b8
@994
%add rax, rbx
%mov qword ptr [rip+0x20db71], rdx
%mov qword ptr [rip+0x20db72], rax
%lea rax, ptr [rdx+rbp*1]
%mov qword ptr [rip+0x20db6f], rax
%add rsp, 0x8
%mov rax, rdx
%pop rbx
%pop rbp
%ret 
992
993
994
275
276
277
280
@995
%mov rcx, qword ptr [rsi+rdx*1-0x8]
%mov rsi, qword ptr [rsi]
%mov qword ptr [rdi+rdx*1-0x8], rcx
%mov qword ptr [rdi], rsi
%ret 
995
285
288
289
416
417
@996
%mov rax, qword ptr [r14+0x2d8]
%test rax, rax
%jnz 0x7fd16901d220
@997
%test edi, edi
%jnz 0x7fd16901d310
@998
%lea rcx, ptr [r14+0x2b8]
%mov qword ptr [rdx], rcx
%lea rax, ptr [rbx+0x2b8]
%test sil, sil
%mov byte ptr [rsp+0x18], sil
%mov qword ptr [rbx+0x388], rax
%jz 0x7fd16901d2e9
996
997
@999
%mov rax, qword ptr [rbx+0x358]
%lea rcx, ptr [r14+0x2b8]
%cmp rcx, rax
%jz 0x7fd16901d241
@1000
%test byte ptr [rsp+0x2c], 0x8
%jz 0x7fd16901d3d0
@1001
%mov qword ptr [rbx+0x360], rax
%jmp 0x7fd16901d23e
999
@1002
%lea rax, ptr [rbx+0x2b8]
%test sil, sil
%mov byte ptr [rsp+0x18], sil
%mov qword ptr [rbx+0x388], rax
%jz 0x7fd16901d2e9
@1003
%mov rdi, qword ptr [rsp+0x10]
%xor r12d, r12d
%call 0x7fd1690302f0
1002
1003
225
226
899
900
@1004
%movzx esi, byte ptr [rsp+0x18]
%lea r13, ptr [rax+0x1]
%mov qword ptr [rsp+0x8], rax
%mov r14, r13
%cmp sil, 0x2f
%jnz 0x7fd16901d2b9
@1005
%jmp 0x7fd16901d3e0
1004
1005
@1006
%mov rdi, r13
%call 0x7fd169011ea0
1006
266
267
268
269
274
@1007
%test rax, rax
%mov r15, rax
%mov rdi, rax
%jnz 0x7fd16901d384
@1008
%mov r15, 0xffffffffffffffff
%jmp 0x7fd16901d2e2
1007
@1009
%mov rsi, qword ptr [rsp+0x10]
%mov rdx, r13
%call 0x7fd169030830
1009
565
566
567
568
@1010
%jmp 0x7fd16901d39b
1010
@1011
%cmp byte ptr [rax-0x1], 0x2f
%lea rdx, ptr [rax-0x1]
%jnz 0x7fd16901d398
@1012
%cmp r15, rdx
%cmovz rdx, rax
%mov byte ptr [rdx], 0x0
%jmp 0x7fd16901d2e2
1011
@1013
%mov rax, rdx
%cmp byte ptr [rax-0x1], 0x2f
%lea rdx, ptr [rax-0x1]
%jnz 0x7fd16901d398
@1014
%cmp r15, rdx
%cmovz rdx, rax
%mov byte ptr [rdx], 0x0
%jmp 0x7fd16901d2e2
1013
1013
1013
1013
1013
1013
1013
1013
1013
1013
1014
@1015
%mov qword ptr [rbx+0x338], r15
%add rsp, 0x38
%mov rax, rbx
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
1015
@1016
%test rax, rax
%mov rbx, rax
%jz 0x7fd169018532
@1017
%mov rdi, qword ptr [rbp-0x100]
%mov rax, qword ptr [rdi+0x20]
%mov rsi, qword ptr [rdi+0x28]
%mov qword ptr [rbx+0x2a8], rax
%movzx eax, word ptr [rdi+0x18]
%lea r13, ptr [rdi+rsi*1+0x8]
%mov word ptr [rbp-0x118], ax
%movzx eax, word ptr [rdi+0x40]
%lea r12, ptr [rax*8]
%mov word ptr [rbx+0x2b0], ax
%sub r12, rax
%shl r12, 0x3
%lea rdx, ptr [rsi+r12*1]
%cmp rdx, qword ptr [rdi]
%jnbe 0x7fd169017fc0
@1018
%lea rdx, ptr [rax+rax*2]
%mov qword ptr [rbp-0x110], rsp
%add r12, r13
%shl rdx, 0x4
%add rdx, 0x16
%and edx, 0x7ffff0
%sub rsp, rdx
%lea rdx, ptr [rsp+0x7]
%shr rdx, 0x3
%cmp r13, r12
%lea rsi, ptr [rdx*8]
%mov qword ptr [rbp-0x120], rdx
%mov qword ptr [rbp-0xc8], rsi
%jnb 0x7fd16901875b
1016
1017
1018
@1019
%mov esi, dword ptr [rbp+0x18]
%xor r10d, r10d
%mov qword ptr [rbp-0x128], r15
%mov r12, r13
%xor r14d, r14d
%mov qword ptr [rbp-0xf8], 0x7
%mov r15d, r10d
%and esi, 0x8000000
%mov dword ptr [rbp-0x130], esi
%jmp 0x7fd169017abd
1019
@1020
%mov edx, dword ptr [r12]
%cmp edx, 0x6
%jz 0x7fd169017c08
@1021
%jnbe 0x7fd169017a78
@1022
%cmp edx, 0x1
%jz 0x7fd169017b40
1020
@1023
%mov rdx, qword ptr [r12+0x10]
%mov qword ptr [rbx+0x2a0], rdx
%jmp 0x7fd169017aa0
1023
@1024
%lea rdx, ptr [rax*8]
%add r12, 0x38
%sub rdx, rax
%lea rdx, ptr [r13+rdx*8]
%cmp r12, rdx
%jnb 0x7fd169017cd8
@1025
%mov edx, dword ptr [r12]
%cmp edx, 0x6
%jz 0x7fd169017c08
@1026
%jnbe 0x7fd169017a78
1024
1025
1026
@1027
%cmp edx, 0x1
%jz 0x7fd169017b40
@1028
%cmp edx, 0x2
%jnz 0x7fd169017aa0
@1029
%cmp qword ptr [r12+0x20], 0x0
%jz 0x7fd169017aa0
1027
1028
1024
1025
1026
1027
@1030
%mov rcx, qword ptr [rip+0x220c31]
%mov rdx, qword ptr [r12+0x30]
%lea rsi, ptr [rcx-0x1]
%test rdx, rsi
%jnz 0x7fd169018130
@1031
%mov rdi, qword ptr [r12+0x10]
%mov r8, qword ptr [r12+0x8]
%sub rdx, 0x1
%mov r9, rdi
%sub r9, r8
%test r9, rdx
%jnz 0x7fd169018470
@1032
%lea rdx, ptr [r14+r14*2]
%neg rcx
%mov r11, rdi
%and r11, rcx
%lea r9, ptr [r14+0x1]
%shl rdx, 0x4
%add rdx, qword ptr [rbp-0xc8]
%mov qword ptr [rdx], r11
%mov r11, qword ptr [r12+0x20]
%add r11, rdi
%add rdi, qword ptr [r12+0x28]
%add rsi, r11
%mov qword ptr [rdx+0x10], r11
%and rsi, rcx
%and rcx, r8
%cmp r9, 0x1
%mov qword ptr [rdx+0x8], rsi
%mov qword ptr [rdx+0x20], rcx
%mov qword ptr [rdx+0x18], rdi
%jbe 0x7fd169017bd1
1030
1031
1032
@1033
%mov ecx, dword ptr [r12+0x4]
%mov edx, 0x73516240
%lea rsi, ptr [r14+r14*2]
%mov r14, r9
%shl rsi, 0x4
%and ecx, 0x7
%shl ecx, 0x2
%sar edx, cl
%mov rcx, qword ptr [rbp-0xc8]
%and edx, 0xf
%mov dword ptr [rcx+rsi*1+0x28], edx
%jmp 0x7fd169017aa0
1033
1024
1025
1026
1027
1030
1031
1032
@1034
%mov rcx, qword ptr [rdx]
%cmp qword ptr [rdx-0x28], rcx
%mov edx, 0x1
%cmovnz r15d, edx
%mov ecx, dword ptr [r12+0x4]
%mov edx, 0x73516240
%lea rsi, ptr [r14+r14*2]
%mov r14, r9
%shl rsi, 0x4
%and ecx, 0x7
%shl ecx, 0x2
%sar edx, cl
%mov rcx, qword ptr [rbp-0xc8]
%and edx, 0xf
%mov dword ptr [rcx+rsi*1+0x28], edx
%jmp 0x7fd169017aa0
1034
1024
1025
1026
1027
1028
1029
@1035
%mov rdx, qword ptr [r12+0x10]
%mov qword ptr [rbx+0x10], rdx
%mov rdx, qword ptr [r12+0x28]
%shr rdx, 0x4
%mov word ptr [rbx+0x2b2], dx
%jmp 0x7fd169017aa0
1035
1024
1025
1026
1027
1028
1024
1025
1026
@1036
%cmp edx, 0x6474e551
%jz 0x7fd169017cc0
@1037
%cmp edx, 0x6474e552
%jz 0x7fd169017ca0
@1038
%cmp edx, 0x7
%jz 0x7fd169017c20
1036
1037
1038
@1039
%mov rdx, qword ptr [r12+0x28]
%test rdx, rdx
%jz 0x7fd169017aa0
@1040
%mov qword ptr [rbx+0x428], rdx
%mov rcx, qword ptr [r12+0x30]
%xor edx, edx
%test rcx, rcx
%mov qword ptr [rbx+0x430], rcx
%mov rsi, qword ptr [r12+0x10]
%jz 0x7fd169017c54
@1041
%lea rdx, ptr [rcx-0x1]
%and rdx, rsi
%mov qword ptr [rbx+0x438], rdx
%mov rdx, qword ptr [r12+0x20]
%mov qword ptr [rbx+0x418], rsi
%mov qword ptr [rbx+0x420], rdx
%movzx edx, byte ptr [rbx+0x314]
%and edx, 0x3
%cmp dl, 0x1
%jnz 0x7fd16901854a
1039
1040
1041
@1042
%call 0x7fd169023d40
1042
@1043
%cmp byte ptr [rip+0x216235], 0x0
%mov rsi, qword ptr [rip+0x216232]
%jnz 0x7fd169023d60
@1044
%lea rax, ptr [rsi+0x1]
%mov qword ptr [rip+0x216225], rax
%ret 
1043
1044
@1045
%mov qword ptr [rbx+0x448], rax
%movzx eax, word ptr [rbx+0x2b0]
%jmp 0x7fd169017aa0
1045
1024
1025
1026
1036
1037
1038
@1046
%nop dword ptr [rax], eax
%lea rdx, ptr [rax*8]
%add r12, 0x38
%sub rdx, rax
%lea rdx, ptr [r13+rdx*8]
%cmp r12, rdx
%jnb 0x7fd169017cd8
@1047
%mov edx, dword ptr [r12]
%cmp edx, 0x6
%jz 0x7fd169017c08
@1048
%jnbe 0x7fd169017a78
1046
1047
1048
1036
@1049
%mov ecx, dword ptr [r12+0x4]
%mov qword ptr [rbp-0xf8], rcx
%jmp 0x7fd169017aa0
1049
1024
1025
1026
1036
1037
@1050
%mov rdx, qword ptr [r12+0x10]
%mov qword ptr [rbx+0x458], rdx
%mov rdx, qword ptr [r12+0x28]
%mov qword ptr [rbx+0x460], rdx
%jmp 0x7fd169017aa0
1050
1024
@1051
%test r14, r14
%mov r10d, r15d
%mov r15, qword ptr [rbp-0x128]
%jz 0x7fd16901875b
@1052
%movzx eax, word ptr [rbp-0x118]
%cmp eax, 0x3
%mov dword ptr [rbp-0x134], eax
%jnz 0x7fd169018785
@1053
%mov rcx, qword ptr [rbp-0x120]
%mov rsi, qword ptr [rbp-0xc8]
%lea rax, ptr [r14+r14*2-0x3]
%mov rdi, qword ptr [rip+0x220b65]
%mov r8d, dword ptr [rbp-0xd4]
%shl rax, 0x4
%mov byte ptr [rbp-0x130], r10b
%mov r12, qword ptr [rcx*8]
%mov rax, qword ptr [rsi+rax*1+0x18]
%mov edx, dword ptr [rcx*8+0x28]
%mov r9, qword ptr [rcx*8+0x20]
%mov ecx, 0x802
%sub rax, r12
%and rdi, r12
%mov rsi, rax
%mov qword ptr [rbp-0x128], rax
%mov dword ptr [rbp-0x118], edx
%call 0x7fd16902df00
1051
1052
1053
801
802
804
805
807
808
809
@1054
%cmp rax, 0xffffffffffffffff
%mov qword ptr [rbx+0x340], rax
%movzx r10d, byte ptr [rbp-0x130]
%jz 0x7fd169017e46
@1055
%mov rsi, qword ptr [rbp-0x128]
%lea rdx, ptr [rax+rsi*1]
%sub rax, r12
%test r10b, r10b
%mov qword ptr [rbx], rax
%mov qword ptr [rbx+0x348], rdx
%jnz 0x7fd169017f00
@1056
%or byte ptr [rbx+0x315], 0x40
%mov r12, qword ptr [rbp-0xc8]
%test byte ptr [rbp-0x118], 0x4
%jz 0x7fd169017dc9
1054
1055
@1057
%mov rcx, qword ptr [rbp-0x120]
%lea rdx, ptr [r14+r14*2]
%shl rdx, 0x4
%mov rdi, qword ptr [rcx*8+0x8]
%mov rcx, qword ptr [rbp-0xc8]
%mov rsi, qword ptr [rcx+rdx*1-0x30]
%xor edx, edx
%sub rsi, rdi
%add rdi, rax
%call 0x7fd16902dff0
1057
@1058
%mov eax, 0xa
%syscall 
1058
@1059
%cmp rax, 0xfffffffffffff001
%jnb 0x7fd16902e000
@1060
%ret 
1059
1060
@1061
%test eax, eax
%jns 0x7fd169017da3
@1062
%lea r9, ptr [rip+0x1b971]
%jmp 0x7fd169018137
1061
@1063
%or byte ptr [rbx+0x315], 0x40
%mov r12, qword ptr [rbp-0xc8]
%test byte ptr [rbp-0x118], 0x4
%jz 0x7fd169017dc9
@1064
%mov rax, qword ptr [r12+0x8]
%add rax, qword ptr [rbx]
%mov qword ptr [rbx+0x350], rax
%cmp qword ptr [rbx+0x2a0], 0x0
%jz 0x7fd169017f44
@1065
%mov rcx, qword ptr [r12+0x18]
%mov r8, qword ptr [r12+0x10]
%cmp rcx, r8
%jnbe 0x7fd169017e58
1063
1064
1065
@1066
%add r12, 0x30
%lea rax, ptr [r14+r14*2]
%shl rax, 0x4
%add rax, qword ptr [rbp-0xc8]
%cmp r12, rax
%jnb 0x7fd169018020
@1067
%mov rsi, qword ptr [r12+0x8]
%mov rax, qword ptr [r12]
%mov ecx, dword ptr [r12+0x28]
%cmp rsi, rax
%mov dword ptr [rbp-0x118], ecx
%jbe 0x7fd169017db1
@1068
%sub rsi, rax
%add rax, qword ptr [rbx]
%mov r9, qword ptr [r12+0x20]
%mov r8d, dword ptr [rbp-0xd4]
%mov edx, ecx
%mov ecx, 0x812
%mov rdi, rax
%call 0x7fd16902df00
1066
1067
1068
801
802
803
808
809
@1069
%cmp rax, 0xffffffffffffffff
%jnz 0x7fd169017db1
@1070
%lea r9, ptr [rip+0x1bbab]
%jmp 0x7fd169018137
1069
@1071
%test byte ptr [rbp-0x118], 0x4
%jz 0x7fd169017dc9
@1072
%mov rax, qword ptr [r12+0x8]
%add rax, qword ptr [rbx]
%mov qword ptr [rbx+0x350], rax
%cmp qword ptr [rbx+0x2a0], 0x0
%jz 0x7fd169017f44
@1073
%mov rcx, qword ptr [r12+0x18]
%mov r8, qword ptr [r12+0x10]
%cmp rcx, r8
%jnbe 0x7fd169017e58
1071
@1074
%cmp qword ptr [rbx+0x2a0], 0x0
%jz 0x7fd169017f44
@1075
%mov rcx, qword ptr [r12+0x18]
%mov r8, qword ptr [r12+0x10]
%cmp rcx, r8
%jnbe 0x7fd169017e58
@1076
%add r12, 0x30
%lea rax, ptr [r14+r14*2]
%shl rax, 0x4
%add rax, qword ptr [rbp-0xc8]
%cmp r12, rax
%jnb 0x7fd169018020
1074
1075
@1077
%mov rax, qword ptr [rbx]
%mov rsi, qword ptr [rip+0x220916]
%add r8, rax
%add rcx, rax
%mov rax, rsi
%lea r10, ptr [r8+rsi*1-0x1]
%neg rax
%and r10, rax
%cmp rcx, r10
%cmovbe r10, rcx
%cmp r10, r8
%jbe 0x7fd169017ebb
@1078
%test byte ptr [rbp-0x118], 0x2
%jz 0x7fd16901863f
@1079
%mov rdx, r10
%xor esi, esi
%mov rdi, r8
%sub rdx, r8
%mov qword ptr [rbp-0x130], rcx
%mov qword ptr [rbp-0x120], r10
%call 0x7fd169030a20
1077
1078
1079
621
622
@1080
%cmp rdx, 0x40
%jnbe 0x7fd169030a6b
@1081
%movdqu xmmword ptr [rdi], xmm0
%movdqu xmmword ptr [rdi+0x10], xmm0
%movdqu xmmword ptr [rdi+rdx*1-0x10], xmm0
%movdqu xmmword ptr [rdi+rdx*1-0x20], xmm0
%ret 
1080
@1082
%lea rcx, ptr [rdi+0x40]
%movdqu xmmword ptr [rdi], xmm0
%and rcx, 0xffffffffffffffc0
%movdqu xmmword ptr [rdi+rdx*1-0x10], xmm0
%movdqu xmmword ptr [rdi+0x10], xmm0
%movdqu xmmword ptr [rdi+rdx*1-0x20], xmm0
%movdqu xmmword ptr [rdi+0x20], xmm0
%movdqu xmmword ptr [rdi+rdx*1-0x30], xmm0
%movdqu xmmword ptr [rdi+0x30], xmm0
%movdqu xmmword ptr [rdi+rdx*1-0x40], xmm0
%add rdx, rdi
%and rdx, 0xffffffffffffffc0
%cmp rcx, rdx
%jz 0x7fd169030a6a
@1083
%movdqa xmmword ptr [rcx], xmm0
%movdqa xmmword ptr [rcx+0x10], xmm0
%movdqa xmmword ptr [rcx+0x20], xmm0
%movdqa xmmword ptr [rcx+0x30], xmm0
%add rcx, 0x40
%cmp rdx, rcx
%jnz 0x7fd169030aaa
@1084
%ret 
1082
1083
@1085
%movdqa xmmword ptr [rcx], xmm0
%movdqa xmmword ptr [rcx+0x10], xmm0
%movdqa xmmword ptr [rcx+0x20], xmm0
%movdqa xmmword ptr [rcx+0x30], xmm0
%add rcx, 0x40
%cmp rdx, rcx
%jnz 0x7fd169030aaa
@1086
%ret 
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1085
1086
@1087
%mov r10, qword ptr [rbp-0x120]
%mov rcx, qword ptr [rbp-0x130]
%cmp r10, rcx
%jnb 0x7fd169017de6
@1088
%mov edx, dword ptr [rbp-0x118]
%sub rcx, r10
%xor r9d, r9d
%mov rsi, rcx
%mov r8d, 0xffffffff
%mov ecx, 0x32
%mov rdi, r10
%call 0x7fd16902df00
1087
1088
801
802
803
808
809
@1089
%cmp rax, 0xffffffffffffffff
%jnz 0x7fd169017de6
@1090
%lea r9, ptr [rip+0x19f67]
%jmp 0x7fd169018137
1089
1066
@1091
%mov rax, qword ptr [rbx+0x10]
%mov rsp, qword ptr [rbp-0x110]
%test rax, rax
%jz 0x7fd1690186d1
@1092
%mov rdi, qword ptr [rbx]
%add rax, rdi
%test rax, rax
%mov qword ptr [rbx+0x10], rax
%jz 0x7fd1690186de
@1093
%mov rdx, qword ptr [rax]
%lea rcx, ptr [rbx+0x40]
%test rdx, rdx
%jz 0x7fd1690181a0
1091
1092
1093
@1094
%mov r8d, 0x6fffffff
%mov r11d, 0x6ffffdff
%mov r14d, 0x6ffffeff
%mov r12, 0x37ffff1a0
%mov r10d, 0x31
%mov r9d, 0x70000021
%jmp 0x7fd1690180a5
1094
@1095
%cmp rdx, 0x21
%jbe 0x7fd169018091
@1096
%mov rsi, r8
%sub rsi, rdx
%cmp rsi, 0xf
%jbe 0x7fd169018088
@1097
%lea esi, ptr [rdx+rdx*1]
%sar esi, 0x1
%cmp esi, 0xfffffffc
%jbe 0x7fd16901847c
1095
@1098
%mov qword ptr [rcx+rdx*8], rax
%add rax, 0x10
%mov rdx, qword ptr [rax]
%test rdx, rdx
%jz 0x7fd1690181a0
@1099
%cmp rdx, 0x21
%jbe 0x7fd169018091
@1100
%mov rsi, r8
%sub rsi, rdx
%cmp rsi, 0xf
%jbe 0x7fd169018088
1098
1099
1098
1099
1098
1099
1098
1099
1098
1099
1098
1099
1100
@1101
%lea esi, ptr [rdx+rdx*1]
%sar esi, 0x1
%cmp esi, 0xfffffffc
%jbe 0x7fd16901847c
@1102
%mov edx, r10d
%sub edx, esi
%mov qword ptr [rcx+rdx*8], rax
%jmp 0x7fd169018095
1101
@1103
%mov rsi, r11
%sub rsi, rdx
%cmp rsi, 0xb
%jbe 0x7fd169018590
@1104
%mov rsi, r14
%sub rsi, rdx
%cmp rsi, 0xa
%jnbe 0x7fd169018095
@1105
%neg rdx
%mov rsi, 0x37ffffa00
%lea rdx, ptr [rcx+rdx*8]
%mov qword ptr [rdx+rsi*1], rax
%jmp 0x7fd169018095
1103
1104
1105
@1106
%add rax, 0x10
%mov rdx, qword ptr [rax]
%test rdx, rdx
%jz 0x7fd1690181a0
@1107
%cmp rdx, 0x21
%jbe 0x7fd169018091
@1108
%mov rsi, r8
%sub rsi, rdx
%cmp rsi, 0xf
%jbe 0x7fd169018088
1106
1107
1098
1099
1098
1099
1098
1099
1098
1099
1098
1099
1098
1099
1098
1099
1098
1099
1098
1099
1098
1099
1098
1099
1100
@1109
%mov rsi, r9
%sub rsi, rdx
%mov rdx, rsi
%mov qword ptr [rcx+rdx*8], rax
%add rax, 0x10
%mov rdx, qword ptr [rax]
%test rdx, rdx
%jz 0x7fd1690181a0
@1110
%cmp rdx, 0x21
%jbe 0x7fd169018091
@1111
%mov rsi, r8
%sub rsi, rdx
%cmp rsi, 0xf
%jbe 0x7fd169018088
1109
1110
1111
1109
1110
1098
1099
1100
1109
1110
1111
1109
1110
1111
1109
1110
1111
1109
@1112
%test rdi, rdi
%jz 0x7fd169018216
@1113
%mov rax, qword ptr [rbx+0x60]
%test rax, rax
%jz 0x7fd1690181b2
@1114
%add qword ptr [rax+0x8], rdi
%mov rax, qword ptr [rbx+0x58]
%test rax, rax
%jz 0x7fd1690181bf
1112
1113
1114
@1115
%add qword ptr [rax+0x8], rdi
%mov rax, qword ptr [rbx+0x68]
%test rax, rax
%jz 0x7fd1690181cc
@1116
%add qword ptr [rax+0x8], rdi
%mov rax, qword ptr [rbx+0x70]
%test rax, rax
%jz 0x7fd1690181d9
@1117
%add qword ptr [rax+0x8], rdi
%mov rax, qword ptr [rbx+0x78]
%test rax, rax
%jz 0x7fd1690181e6
1115
1116
1117
@1118
%add qword ptr [rax+0x8], rdi
%mov rax, qword ptr [rbx+0xf8]
%test rax, rax
%jz 0x7fd1690181f6
@1119
%add qword ptr [rax+0x8], rdi
%mov rax, qword ptr [rbx+0x1c8]
%test rax, rax
%jz 0x7fd169018206
@1120
%add qword ptr [rax+0x8], rdi
%mov rax, qword ptr [rbx+0x298]
%test rax, rax
%jz 0x7fd169018216
1118
1119
1120
@1121
%add qword ptr [rax+0x8], rdi
%mov rax, qword ptr [rbx+0xe0]
%test rax, rax
%jz 0x7fd16901822d
@1122
%cmp qword ptr [rax+0x8], 0x7
%jnz 0x7fd169018c15
@1123
%cmp qword ptr [rbx+0x78], 0x0
%jz 0x7fd169018246
1121
1122
1123
@1124
%mov rax, qword ptr [rbx+0x88]
%cmp qword ptr [rax+0x8], 0x18
%jnz 0x7fd169018bf6
@1125
%mov rax, qword ptr [rbx+0x130]
%test rax, rax
%jz 0x7fd16901827d
@1126
%mov rdx, qword ptr [rax+0x8]
%test dl, 0x2
%mov dword ptr [rbx+0x3d8], edx
%jz 0x7fd169018268
1124
1125
1126
@1127
%test dl, 0x4
%jz 0x7fd169018274
@1128
%mov qword ptr [rbx+0xf0], rax
%and edx, 0x8
%jnz 0x7fd1690185b3
@1129
%mov rax, qword ptr [rbx+0x170]
%test rax, rax
%jz 0x7fd169018750
1127
@1130
%and edx, 0x8
%jnz 0x7fd1690185b3
@1131
%mov rax, qword ptr [rbx+0x170]
%test rax, rax
%jz 0x7fd169018750
@1132
%test byte ptr [rip+0x2204cc], 0x40
%mov rax, qword ptr [rax+0x8]
%mov ecx, eax
%mov dword ptr [rbx+0x3d4], eax
%mov edx, eax
%jnz 0x7fd169018a26
1130
1131
@1133
%mov edx, dword ptr [rbx+0x3d4]
%jmp 0x7fd1690182b1
1133
@1134
%cmp qword ptr [rbx+0x128], 0x0
%jz 0x7fd1690182c6
@1135
%mov qword ptr [rbx+0xb8], 0x0
%and edx, 0x40
%jz 0x7fd1690182d6
@1136
%mov eax, dword ptr [rbp+0x18]
%test eax, eax
%js 0x7fd169018c5f
1134
@1137
%and edx, 0x40
%jz 0x7fd1690182d6
@1138
%mov eax, dword ptr [rbp+0x18]
%test eax, eax
%js 0x7fd169018c5f
@1139
%mov rax, qword ptr [rbx+0x2a0]
%test rax, rax
%jz 0x7fd1690187fc
1137
@1140
%mov rax, qword ptr [rbx+0x2a0]
%test rax, rax
%jz 0x7fd1690187fc
@1141
%add rax, qword ptr [rbx]
%mov qword ptr [rbx+0x2a0], rax
%mov eax, dword ptr [rip+0x221c82]
%not eax
%and rax, qword ptr [rbp-0xf8]
%test al, 0x1
%jnz 0x7fd169018854
@1142
%mov rax, qword ptr [rbx+0x418]
%test rax, rax
%jz 0x7fd16901831d
1140
1141
1142
@1143
%add rax, qword ptr [rbx]
%mov qword ptr [rbx+0x418], rax
%mov edi, dword ptr [rbp-0xd4]
%call 0x7fd16902ded0
1143
812
813
814
@1144
%test eax, eax
%jnz 0x7fd169018848
@1145
%cmp dword ptr [rbp-0x134], 0x2
%jz 0x7fd1690186e9
@1146
%mov rax, qword ptr [rbx+0x2a8]
%mov r8, qword ptr [rbx]
%add rax, r8
%test byte ptr [rip+0x22040f], 0x40
%mov qword ptr [rbx+0x2a8], rax
%jnz 0x7fd1690188b0
1144
1145
1146
@1147
%mov rdi, rbx
%call 0x7fd16901cf50
1147
68
69
70
@1148
%test byte ptr [rbp+0x18], 0x8
%jnz 0x7fd16901837a
@1149
%cmp qword ptr [rbx+0xc0], 0x0
%jnz 0x7fd169018a4f
@1150
%test byte ptr [rbx+0x3d4], 0x20
%jz 0x7fd16901838a
1148
1149
1150
@1151
%cmp qword ptr [rbp-0x108], 0x0
%mov rax, qword ptr [rbp-0xf0]
%mov qword ptr [rbx+0x398], r15
%mov qword ptr [rbx+0x3a0], rax
%jnz 0x7fd169018996
@1152
%cmp qword ptr [rip+0x2204d3], 0x0
%jnz 0x7fd1690188fa
@1153
%mov rsi, qword ptr [rbp+0x28]
%mov rdi, rbx
%call 0x7fd16901d000
1151
1152
1153
302
303
304
496
@1154
%mov rdx, rax
%mov rax, qword ptr [rdx+0x18]
%test rax, rax
%jnz 0x7fd16901d038
@1155
%mov qword ptr [r12+0x20], rdx
%mov qword ptr [rdx+0x18], r12
%lea rax, ptr [rbx+rbx*8]
%lea rdi, ptr [rip+0x21c938]
%shl rax, 0x4
%add dword ptr [rbp+rax*1+0x8], 0x1
%mov rax, qword ptr [rip+0x21c950]
%pop rbx
%pop rbp
%mov qword ptr [r12+0x468], rax
%add rax, 0x1
%pop r12
%mov qword ptr [rip+0x21c939], rax
%jmp qword ptr [rip+0x21cee3]
1154
1154
1155
308
@1156
%mov eax, dword ptr [rip+0x220543]
%test eax, eax
%jz 0x7fd169017921
@1157
%mov rdx, qword ptr [rbx+0x30]
%lea rsi, ptr [rip+0x220c80]
%lea rdx, ptr [rdx+rdx*8]
%shl rdx, 0x4
%mov rdx, qword ptr [rsi+rdx*1]
%test byte ptr [rdx+0x315], 0x8
%jnz 0x7fd169017921
@1158
%mov r13, qword ptr [rip+0x220508]
%xor r12d, r12d
%mov rcx, qword ptr [r13+0x10]
%test rcx, rcx
%jz 0x7fd169018b4c
1156
@1159
%lea rsp, ptr [rbp-0x28]
%mov rax, rbx
%pop rbx
%pop r12
%pop r13
%pop r14
%pop r15
%pop rbp
%ret 
1159
@1160
%add rsp, 0x20
%mov r15, rax
%jmp 0x7fd169019ef8
1160
@1161
%add rsp, 0x3c8
%mov rax, r15
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
1161
@1162
%mov qword ptr [rbx+0x20], rax
%pop rbx
%ret 
1162
@1163
%mov rax, qword ptr [rsp+0x8]
%mov rcx, qword ptr [rsp]
%pxor xmm0, xmm0
%mov qword ptr [rax+0x10], 0x0
%mov qword ptr [rip+0x20d461], rcx
%movups xmmword ptr [rax], xmm0
%add rsp, 0x110
%mov eax, ebx
%pop rbx
%ret 
1163
@1164
%cmp qword ptr [rbp-0x78], 0x0
%jnz 0x7fd16901f890
@1165
%mov rax, qword ptr [rbp-0x40]
%test byte ptr [rax+0x314], 0x60
%jnz 0x7fd16901f67b
@1166
%sub rsp, 0x30
%mov rsi, qword ptr [rbp-0x88]
%add dword ptr [rbp-0xa0], 0x1
%lea rdx, ptr [rsp+0xf]
%and rdx, 0xfffffffffffffff0
%mov qword ptr [rdx+0x8], rax
%mov dword ptr [rdx], 0x0
%mov qword ptr [rdx+0x10], 0x0
%mov qword ptr [rsi+0x10], rdx
%movzx ecx, byte ptr [rax+0x314]
%mov qword ptr [rbp-0x88], rdx
%and ecx, 0xffffff9f
%or ecx, 0x20
%mov byte ptr [rax+0x314], cl
%test r14, r14
%jz 0x7fd16901f68b
1164
1165
1166
@1167
%add rbx, 0x10
%mov rax, qword ptr [rbx]
%test rax, rax
%jz 0x7fd16901f7e8
@1168
%cmp rax, 0x1
%jz 0x7fd16901f5e0
@1169
%and rax, 0xfffffffffffffffd
%cmp rax, 0x7ffffffd
%jnz 0x7fd16901f68b
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
@1170
%test r14, r14
%jz 0x7fd16901f857
@1171
%lea ebx, ptr [r12+0x1]
%mov eax, r12d
%mov qword ptr [r14+rax*8], 0x0
%lea edi, ptr [rbx+rbx*1+0x1]
%shl rdi, 0x3
%call 0x7fd169011ea0
1170
@1172
%mov rax, qword ptr [rbp-0xa8]
%mov edx, dword ptr [rax]
%test edx, edx
%jnz 0x7fd16901fe1c
@1173
%mov rax, qword ptr [rax+0x8]
%mov qword ptr [rbp-0x98], rax
%mov rax, qword ptr [rbp-0xa8]
%jmp 0x7fd16901f54f
1172
@1174
%mov rax, qword ptr [rax+0x10]
%test rax, rax
%jnz 0x7fd16901fe10
@1175
%mov r12d, dword ptr [rbp-0xa0]
%mov r14, qword ptr [rbp-0xc8]
%xor r8d, r8d
%mov r15, qword ptr [rbp-0xc0]
%jmp 0x7fd16901f8b0
1174
@1176
%mov r8d, dword ptr [rax]
%test r8d, r8d
%jz 0x7fd1690202eb
@1177
%mov rax, qword ptr [rax+0x10]
%test rax, rax
%jnz 0x7fd16901fe10
@1178
%mov r12d, dword ptr [rbp-0xa0]
%mov r14, qword ptr [rbp-0xc8]
%xor r8d, r8d
%mov r15, qword ptr [rbp-0xc0]
%jmp 0x7fd16901f8b0
1176
@1179
%mov qword ptr [rbp-0xa8], rax
%jmp 0x7fd16901f868
1179
@1180
%mov rax, qword ptr [rax+0x8]
%mov qword ptr [rbp-0x98], rax
%mov rax, qword ptr [rbp-0xa8]
%jmp 0x7fd16901f54f
1180
@1181
%mov dword ptr [rax], 0x1
%mov rax, qword ptr [rbp-0x98]
%mov r14, qword ptr [rax+0x2b8]
%test r14, r14
%jz 0x7fd16901fd88
@1182
%xor r14d, r14d
%mov rax, qword ptr [rbp-0x98]
%cmp qword ptr [rax+0x48], 0x0
%jz 0x7fd16901fcb0
@1183
%mov rsi, qword ptr [rbp-0x98]
%mov ecx, dword ptr [rbp-0xb0]
%mov rax, qword ptr [rsi+0x68]
%mov qword ptr [rbp-0x60], rsi
%mov r15, qword ptr [rax+0x8]
%mov rax, rsi
%mov esi, dword ptr [rbp-0xac]
%mov rbx, qword ptr [rax+0x10]
%mov dword ptr [rbp-0x54], ecx
%mov qword ptr [rbp-0x50], r15
%mov dword ptr [rbp-0x58], esi
%mov rax, qword ptr [rbx]
%test rax, rax
%jz 0x7fd16901fccc
1181
685
686
687
@1184
%shl rax, 0x3
%cmp rax, qword ptr [rbp-0xe0]
%mov rbx, qword ptr [rbp-0xd8]
%mov r14, rbx
%jbe 0x7fd16901f56f
@1185
%add rax, 0xf
%and rax, 0xfffffffffffffff0
%lea rdx, ptr [rax+0x1e]
%and edx, 0x1ffff0
%sub rsp, rdx
%lea r14, ptr [rsp+0xf]
%and r14, 0xfffffffffffffff0
%lea rdx, ptr [r14+rax*1]
%cmp rbx, rdx
%jz 0x7fd169020482
@1186
%mov qword ptr [rbp-0xe0], rax
%mov qword ptr [rbp-0xd8], r14
%jmp 0x7fd16901f56f
1184
1185
1186
688
689
690
691
694
695
696
@1187
%movdqu xmm0, xmmword ptr [rdi+0x10]
%movdqa xmm4, xmm0
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm4, xmm3
%por xmm0, xmm4
%pmovmskb ecx, xmm0
%movdqu xmm0, xmmword ptr [rdi+0x20]
%movdqa xmm4, xmm0
%pcmpeqb xmm0, xmm1
%shl rcx, 0x10
%pcmpeqb xmm4, xmm3
%por xmm0, xmm4
%pmovmskb eax, xmm0
%movdqu xmm0, xmmword ptr [rdi+0x30]
%pcmpeqb xmm3, xmm0
%shl rax, 0x20
%pcmpeqb xmm0, xmm1
%or rax, rcx
%por xmm0, xmm3
%pmovmskb ecx, xmm0
%shl rcx, 0x30
%or rax, rcx
%test rax, rax
%jnz 0x7fd169030230
@1188
%nop word ptr [rax+rax*1], ax
%pxor xmm6, xmm6
%and rdi, 0xffffffffffffffc0
%add rdi, 0x40
%movdqa xmm5, xmmword ptr [rdi]
%movdqa xmm2, xmmword ptr [rdi+0x10]
%movdqa xmm3, xmmword ptr [rdi+0x20]
%pxor xmm5, xmm1
%movdqa xmm4, xmmword ptr [rdi+0x30]
%pxor xmm2, xmm1
%pxor xmm3, xmm1
%pminub xmm5, xmmword ptr [rdi]
%pxor xmm4, xmm1
%pminub xmm2, xmmword ptr [rdi+0x10]
%pminub xmm3, xmmword ptr [rdi+0x20]
%pminub xmm5, xmm2
%pminub xmm4, xmmword ptr [rdi+0x30]
%pminub xmm5, xmm3
%pminub xmm5, xmm4
%pcmpeqb xmm5, xmm6
%pmovmskb eax, xmm5
%test eax, eax
%jz 0x7fd169030198
@1189
%movdqa xmm5, xmmword ptr [rdi]
%movdqa xmm0, xmm5
%pcmpeqb xmm5, xmm1
%pcmpeqb xmm0, xmm6
%por xmm5, xmm0
%pcmpeqb xmm2, xmm6
%pcmpeqb xmm3, xmm6
%pcmpeqb xmm4, xmm6
%pmovmskb ecx, xmm5
%pmovmskb eax, xmm2
%shl rax, 0x10
%pmovmskb r8d, xmm3
%pmovmskb edx, xmm4
%shl r8, 0x20
%or rax, r8
%or rax, rcx
%shl rdx, 0x30
%or rax, rdx
%bsf rax, rax
%mov edx, 0x0
%lea rax, ptr [rdi+rax*1]
%cmp byte ptr [rax], sil
%cmovnz rax, rdx
1187
@1190
%bsf rax, rax
%mov edx, 0x0
%lea rax, ptr [rdi+rax*1]
%cmp byte ptr [rax], sil
%cmovnz rax, rdx
%ret 
1190
698
699
700
701
702
703
704
705
706
707
708
709
710
711
350
351
352
744
715
716
718
350
351
352
744
719
721
723
724
725
726
727
728
729
711
350
353
354
355
@1191
%pxor xmm0, xmm0
%movdqa xmm2, xmmword ptr [rdi]
%movdqa xmm1, xmmword ptr [rsi]
%pcmpeqb xmm0, xmm1
%pslldq xmm2, 0x2
%pcmpeqb xmm2, xmm1
%psubb xmm2, xmm0
%pmovmskb r9d, xmm2
%shr edx, cl
%shr r9d, cl
%sub edx, r9d
%jnz 0x7fd16902f755
@1192
%movdqa xmm3, xmmword ptr [rdi]
%pxor xmm0, xmm0
%mov rcx, 0x10
%mov r9d, 0xe
%lea r10, ptr [rdi+0xe]
%and r10, 0xfff
%sub r10, 0x1000
%nop word ptr [rax+rax*1], ax
%add r10, 0x10
%jnle 0x7fd16902f5d0
@1193
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%movdqa xmm4, xmm2
%psrldq xmm3, 0xe
%pslldq xmm2, 0x2
%por xmm2, xmm3
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
1191
359
360
715
716
718
350
353
354
355
1191
359
360
719
721
722
350
351
352
@1194
%add rsi, 0x10
%add rdi, 0x10
%and rsi, 0xfffffffffffffff0
%and rdi, 0xfffffffffffffff0
%mov edx, 0xffff
%xor r8d, r8d
%and ecx, 0xf
%and eax, 0xf
%cmp ecx, eax
%jz 0x7fd16902e3f0
@1195
%jnbe 0x7fd16902e3d3
@1196
%mov r8d, edx
%xchg ecx, eax
%xchg rdi, rsi
%lea r9, ptr [rax+0xf]
%sub r9, rcx
%lea r10, ptr [rip+0x3507]
%movsxd r9, dword ptr [r10+r9*4]
%lea r10, ptr [r10+r9*1]
%jmp r10
1194
1195
1196
@1197
%pxor xmm0, xmm0
%movdqa xmm2, xmmword ptr [rdi]
%movdqa xmm1, xmmword ptr [rsi]
%pcmpeqb xmm0, xmm1
%pslldq xmm2, 0x9
%pcmpeqb xmm2, xmm1
%psubb xmm2, xmm0
%pmovmskb r9d, xmm2
%shr edx, cl
%shr r9d, cl
%sub edx, r9d
%jnz 0x7fd16902f755
@1198
%movdqa xmm3, xmmword ptr [rdi]
%pxor xmm0, xmm0
%mov rcx, 0x10
%mov r9d, 0x7
%lea r10, ptr [rdi+0x7]
%and r10, 0xfff
%sub r10, 0x1000
%nop word ptr [rax+rax*1], ax
%add r10, 0x10
%jnle 0x7fd16902ed10
@1199
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%movdqa xmm4, xmm2
%psrldq xmm3, 0x7
%pslldq xmm2, 0x9
%por xmm2, xmm3
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
1197
359
360
719
720
724
1161
1162
1163
1164
1165
1166
@1200
%mov edx, r12d
%add r12d, 0x1
%mov qword ptr [r14+rdx*8], rax
%add rbx, 0x10
%mov rax, qword ptr [rbx]
%test rax, rax
%jz 0x7fd16901f7e8
@1201
%cmp rax, 0x1
%jz 0x7fd16901f5e0
@1202
%and rax, 0xfffffffffffffffd
%cmp rax, 0x7ffffffd
%jnz 0x7fd16901f68b
1200
1201
1202
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1168
1169
1167
1170
1171
266
267
268
269
274
@1203
%test rax, rax
%mov r13, rax
%jz 0x7fd1690205fe
@1204
%mov r15, qword ptr [rbp-0x98]
%shl rbx, 0x3
%lea rdi, ptr [rax+0x8]
%mov rdx, rbx
%mov rsi, r14
%mov qword ptr [rax], r15
%call 0x7fd169030840
1203
1204
277
278
279
@1205
%lea eax, ptr [r12+0x2]
%mov rdx, rbx
%mov rsi, r13
%lea rdi, ptr [r13+rax*8]
%call 0x7fd169030840
1205
277
278
279
@1206
%or byte ptr [r15+0x316], 0x1
%mov qword ptr [r15+0x3b8], r13
%mov rax, qword ptr [rbp-0xa8]
%mov edx, dword ptr [rax]
%test edx, edx
%jnz 0x7fd16901fe1c
@1207
%mov rax, qword ptr [rax+0x8]
%mov qword ptr [rbp-0x98], rax
%mov rax, qword ptr [rbp-0xa8]
%jmp 0x7fd16901f54f
1206
1174
1176
1179
1180
1181
685
686
687
688
@1208
%cmp qword ptr [rax+0x1e0], 0x0
%jnz 0x7fd16901f581
@1209
%cmp qword ptr [rax+0x1d0], 0x0
%jnz 0x7fd16901f581
@1210
%xor r12d, r12d
%test r14, r14
%jnz 0x7fd16901f7ed
1208
1209
1210
@1211
%jmp 0x7fd16901f857
1211
1172
1174
1175
@1212
%mov edi, dword ptr [rip+0x21a86a]
%test edi, edi
%jnz 0x7fd16901f8c8
@1213
%mov eax, dword ptr [rbp-0xcc]
%test eax, eax
%jnz 0x7fd16901fcf0
@1214
%mov rax, qword ptr [r15+0x3b8]
%test rax, rax
%mov qword ptr [rbp-0x98], rax
%jz 0x7fd16901f8f9
1212
1213
@1215
%mov dword ptr [rip+0x21a42a], eax
%jmp 0x7fd16901f8c8
1215
@1216
%mov rax, qword ptr [r15+0x3b8]
%test rax, rax
%mov qword ptr [rbp-0x98], rax
%jz 0x7fd16901f8f9
@1217
%movzx eax, byte ptr [r15+0x314]
%and eax, 0x3
%cmp al, 0x2
%jz 0x7fd16901fe48
@1218
%mov qword ptr [rbp-0x98], 0x0
%lea edi, ptr [r12+r12*1+0x1]
%mov dword ptr [rbp-0x90], r8d
%shl rdi, 0x3
%call 0x7fd169011ea0
1216
@1219
%lea edi, ptr [r12+r12*1+0x1]
%mov dword ptr [rbp-0x90], r8d
%shl rdi, 0x3
%call 0x7fd169011ea0
1219
266
267
268
269
274
@1220
%test rax, rax
%mov qword ptr [rbp-0x88], rax
%mov r8d, dword ptr [rbp-0x90]
%jz 0x7fd169020573
@1221
%mov rbx, rax
%mov esi, dword ptr [rbp-0xac]
%lea eax, ptr [r12+0x1]
%mov dword ptr [r15+0x2c0], r12d
%lea r13, ptr [rbx+rax*8]
%xor eax, eax
%test esi, esi
%mov qword ptr [r15+0x2b8], r13
%jnz 0x7fd16901fba0
@1222
%nop
%mov rdx, qword ptr [r14+0x8]
%lea ebx, ptr [rax+0x1]
%mov qword ptr [r13+rax*8], rdx
%mov rax, qword ptr [r14+0x8]
%and byte ptr [rax+0x314], 0x9f
%mov eax, ebx
%mov r14, qword ptr [r14+0x10]
%test r14, r14
%jnz 0x7fd16901f950
1220
1221
1222
@1223
%mov rdx, qword ptr [r14+0x8]
%lea ebx, ptr [rax+0x1]
%mov qword ptr [r13+rax*8], rdx
%mov rax, qword ptr [r14+0x8]
%and byte ptr [rax+0x314], 0x9f
%mov eax, ebx
%mov r14, qword ptr [r14+0x10]
%test r14, r14
%jnz 0x7fd16901f950
@1224
%test byte ptr [rip+0x218de8], 0x8
%jnz 0x7fd169020120
@1225
%cmp qword ptr [r13], r15
%jnz 0x7fd1690205df
1223
1223
1224
1225
@1226
%mov r9, qword ptr [r15+0x3c0]
%mov qword ptr [rbp-0x90], 0x0
%test r9, r9
%jz 0x7fd16901fabc
@1227
%cmp ebx, 0x1
%mov esi, dword ptr [r9]
%lea rcx, ptr [r9+0x8]
%jbe 0x7fd16902010b
@1228
%lea eax, ptr [rbx-0x2]
%lea rdx, ptr [r13+0x8]
%lea r10, ptr [r13+rax*8+0x10]
%mov rdi, qword ptr [rdx]
%add rdx, 0x8
%movzx eax, byte ptr [rdi+0x314]
%and eax, 0xffffff9f
%or eax, 0x20
%cmp r10, rdx
%mov byte ptr [rdi+0x314], al
%jnz 0x7fd16901f9c0
1226
@1229
%mov r14, qword ptr [rbp-0x88]
%mov r12d, ebx
%mov rsi, r13
%lea rdx, ptr [r12*8]
%mov dword ptr [rbp-0xa0], r8d
%mov rdi, r14
%call 0x7fd169030840
1229
277
278
279
@1230
%lea esi, ptr [rbx-0x1]
%lea rdi, ptr [r14+0x8]
%xor ecx, ecx
%xor edx, edx
%call 0x7fd169028c80
1230
@1231
%push rbp
%mov rbp, rsp
%push r15
%push r14
%push r13
%push r12
%push rbx
%sub rsp, 0x78
%cmp esi, 0x1
%mov byte ptr [rbp-0x31], cl
%jnbe 0x7fd169028ca8
@1232
%lea rsp, ptr [rbp-0x28]
%pop rbx
%pop r12
%pop r13
%pop r14
%pop r15
%pop rbp
%ret 
1231
@1233
%mov qword ptr [rbp-0x98], rdx
%mov edx, esi
%mov rax, rsp
%mov rbx, rdx
%mov dword ptr [rbp-0x38], edx
%add rdx, rdx
%mov qword ptr [rbp-0xa0], rax
%lea rax, ptr [rdx+0x10]
%mov r14, rdi
%mov qword ptr [rbp-0x48], rdi
%xor esi, esi
%mov r13d, 0x1
%shr rax, 0x4
%xor r15d, r15d
%shl rax, 0x4
%sub rsp, rax
%mov rdi, rsp
%mov qword ptr [rbp-0x40], rdi
%call 0x7fd169030a20
1233
621
@1234
%movq rcx, xmm0
%cmp dl, 0x8
%jnb 0x7fd169030ae1
@1235
%cmp dl, 0x4
%jnb 0x7fd169030aea
@1236
%cmp dl, 0x1
%jnbe 0x7fd169030af1
1234
1235
@1237
%mov dword ptr [rdi+rdx*1-0x4], ecx
%mov dword ptr [rdi], ecx
%ret 
1237
@1238
%lea ecx, ptr [rbx-0x1]
%mov eax, ebx
%sub eax, 0x2
%lea rbx, ptr [r14+rcx*8]
%mov dword ptr [rbp-0x78], eax
%mov rax, qword ptr [rbp-0x40]
%xor r14d, r14d
%mov dword ptr [rbp-0x74], ecx
%mov qword ptr [rbp-0x80], rcx
%sub rcx, 0x1
%mov r10, r14
%mov qword ptr [rbp-0x88], rbx
%mov qword ptr [rbp-0x90], rcx
%mov r14d, r13d
%nop word ptr [rax+rax*1], ax
%lea r9, ptr [rax+r10*2]
%movzx eax, word ptr [r9]
%add eax, 0x1
%cmp byte ptr [rbp-0x31], 0x0
%mov word ptr [rbp-0x34], ax
%mov word ptr [r9], ax
%mov rax, qword ptr [rbp-0x48]
%lea rdi, ptr [rax+r10*8]
%mov rbx, qword ptr [rdi]
%jnz 0x7fd169028f38
@1239
%cmp r15d, dword ptr [rbp-0x74]
%jnb 0x7fd169028e87
@1240
%mov eax, dword ptr [rbp-0x78]
%mov rdx, qword ptr [rbp-0x90]
%mov r12, qword ptr [rbp-0x80]
%mov r13, qword ptr [rbp-0x88]
%sub eax, r15d
%sub rdx, rax
%mov rax, qword ptr [r13]
%mov ecx, r12d
%mov rsi, qword ptr [rax+0x3b8]
%test rsi, rsi
%jz 0x7fd169028e70
1238
1239
1240
@1241
%cmp byte ptr [rbp-0x31], 0x0
%jnz 0x7fd169028ed8
@1242
%sub r12, 0x1
%sub r13, 0x8
%cmp rdx, r12
%jnz 0x7fd169028d7d
@1243
%cmp dword ptr [rbp-0x38], r14d
%jz 0x7fd169028f59
1241
1242
1243
@1244
%mov rcx, qword ptr [rbp-0x40]
%mov eax, r14d
%lea rdi, ptr [rcx+rax*2]
%jmp 0x7fd169028e48
1244
@1245
%mov edx, dword ptr [rbp-0x38]
%xor esi, esi
%mov r15d, r14d
%sub edx, r14d
%add rdx, rdx
%call 0x7fd169030a20
1245
621
1234
1235
1236
@1246
%mov word ptr [rdi+rdx*1-0x2], cx
%mov word ptr [rdi], cx
%ret 
1246
@1247
%mov r10d, r14d
%mov rax, qword ptr [rbp-0x40]
%add r14d, 0x1
%jmp 0x7fd169028d30
1247
@1248
%lea r9, ptr [rax+r10*2]
%movzx eax, word ptr [r9]
%add eax, 0x1
%cmp byte ptr [rbp-0x31], 0x0
%mov word ptr [rbp-0x34], ax
%mov word ptr [r9], ax
%mov rax, qword ptr [rbp-0x48]
%lea rdi, ptr [rax+r10*8]
%mov rbx, qword ptr [rdi]
%jnz 0x7fd169028f38
@1249
%cmp r15d, dword ptr [rbp-0x74]
%jnb 0x7fd169028e87
@1250
%mov eax, dword ptr [rbp-0x78]
%mov rdx, qword ptr [rbp-0x90]
%mov r12, qword ptr [rbp-0x80]
%mov r13, qword ptr [rbp-0x88]
%sub eax, r15d
%sub rdx, rax
%mov rax, qword ptr [r13]
%mov ecx, r12d
%mov rsi, qword ptr [rax+0x3b8]
%test rsi, rsi
%jz 0x7fd169028e70
1248
1249
@1251
%cmp dword ptr [rbp-0x38], r14d
%jz 0x7fd169028f59
@1252
%mov rcx, qword ptr [rbp-0x40]
%mov eax, r14d
%lea rdi, ptr [rcx+rax*2]
%jmp 0x7fd169028e48
1251
@1253
%mov rsp, qword ptr [rbp-0xa0]
%lea rsp, ptr [rbp-0x28]
%pop rbx
%pop r12
%pop r13
%pop r14
%pop r15
%pop rbp
%ret 
1253
@1254
%mov qword ptr [r14+r12*8], 0x0
%or byte ptr [r15+0x316], 0x1
%mov qword ptr [r15+0x3b8], r14
%mov rax, qword ptr [rbp-0x90]
%mov r8d, dword ptr [rbp-0xa0]
%test rax, rax
%jz 0x7fd16901fb3b
@1255
%mov dword ptr [rbp-0x88], r8d
%mov rdi, qword ptr [r15+0x3c0]
%mov qword ptr [r15+0x3c0], rax
%call 0x7fd169024c30
1254
@1256
%mov rdi, qword ptr [rbp-0x98]
%test rdi, rdi
%jz 0x7fd16901fb5a
@1257
%mov dword ptr [rbp-0x88], r8d
%call 0x7fd169024c30
1256
@1258
%test r8d, r8d
%jnz 0x7fd16902058a
@1259
%lea rsp, ptr [rbp-0x28]
%pop rbx
%pop r12
%pop r13
%pop r14
%pop r15
%pop rbp
%ret 
1258
1259
@1260
%rdtsc 
%shl rdx, 0x20
%mov eax, eax
%or rax, rdx
%mov edx, dword ptr [r14+0x2c0]
%sub rax, r12
%add qword ptr [rip+0x223866], rax
%test edx, edx
%jz 0x7fd169014f7d
@1261
%mov rax, qword ptr [r14+0x2b8]
%lea ecx, ptr [rdx-0x1]
%lea rcx, ptr [rax+rcx*8]
%sub rax, 0x8
%mov rsi, qword ptr [rcx]
%sub rcx, 0x8
%or byte ptr [rsi+0x314], 0x10
%cmp rax, rcx
%jnz 0x7fd169014edc
@1262
%mov rax, qword ptr [rip+0x224b12]
%mov rcx, qword ptr [rip+0x224b13]
%mov qword ptr [rcx+0x18], rax
%mov rax, qword ptr [rip+0x224b00]
%test rax, rax
%jz 0x7fd169014f11
1260
1261
@1263
%mov rsi, qword ptr [rcx]
%sub rcx, 0x8
%or byte ptr [rsi+0x314], 0x10
%cmp rax, rcx
%jnz 0x7fd169014edc
@1264
%mov rax, qword ptr [rip+0x224b12]
%mov rcx, qword ptr [rip+0x224b13]
%mov qword ptr [rcx+0x18], rax
%mov rax, qword ptr [rip+0x224b00]
%test rax, rax
%jz 0x7fd169014f11
@1265
%mov qword ptr [rax+0x20], rcx
%cmp edx, 0x1
%jbe 0x7fd169014f9f
1263
1263
1264
1265
@1266
%mov rdi, qword ptr [r14+0x2b8]
%mov rax, qword ptr [rbp-0x1a0]
%cmp qword ptr [rdi+0x8], rax
%jz 0x7fd169015aa8
@1267
%lea rcx, ptr [rdi+0x10]
%mov eax, 0x1
%jmp 0x7fd169014f55
1266
1267
@1268
%add eax, 0x1
%cmp edx, eax
%jnz 0x7fd169014f40
@1269
%jmp 0x7fd169014f9f
1268
@1270
%add rcx, 0x8
%mov rbx, qword ptr [rbp-0x1a0]
%cmp qword ptr [rcx-0x8], rbx
%jz 0x7fd169015aad
@1271
%add eax, 0x1
%cmp edx, eax
%jnz 0x7fd169014f40
@1272
%jmp 0x7fd169014f9f
1270
@1273
%lea ecx, ptr [rax-0x1]
%cmp dword ptr [rbp-0x198], 0x0
%mov rcx, qword ptr [rdi+rcx*8]
%mov qword ptr [rip+0x223f4e], rcx
%jnz 0x7fd169015b4e
@1274
%add eax, 0x1
%xor esi, esi
%cmp eax, edx
%jnb 0x7fd169015ad5
@1275
%mov rsi, qword ptr [rdi+rax*8]
%mov rax, qword ptr [rip+0x222ddc]
%mov qword ptr [rip+0x223f25], rsi
%test rax, rax
%jz 0x7fd169015afa
1273
1274
@1276
%mov rax, qword ptr [rip+0x222ddc]
%mov qword ptr [rip+0x223f25], rsi
%test rax, rax
%jz 0x7fd169015afa
@1277
%cmp qword ptr [rcx+0x18], rax
%jnz 0x7fd169015afa
@1278
%cmp rax, rsi
%jz 0x7fd169015afa
1276
1277
@1279
%mov rdx, qword ptr [rip+0x223f0f]
%mov rax, qword ptr [rip+0x223f00]
%cmp qword ptr [rdx+0x18], rax
%jnz 0x7fd169015e6c
@1280
%mov rax, qword ptr [rbp-0x1a0]
%mov qword ptr [rdx+0x18], rax
%mov rax, qword ptr [rip+0x223ee4]
%test rax, rax
%jz 0x7fd169015e60
@1281
%cmp rdx, qword ptr [rax+0x20]
%jnz 0x7fd169015e41
1279
1280
@1282
%mov byte ptr [rbp-0x1b8], 0x1
%jmp 0x7fd169014fa6
1282
@1283
%xor eax, eax
%cmp dword ptr [rbp-0x198], 0x0
%lea rsi, ptr [rip-0x2156]
%lea rdi, ptr [rip-0x2dcd]
%mov dword ptr [rbp-0x13c], r13d
%setz al
%mov dword ptr [rbp-0x140], eax
%lea rax, ptr [rbp-0x140]
%mov rdx, rax
%mov qword ptr [rbp-0x1a8], rax
%call 0x7fd16902cd10
1283
@1284
%push rbp
%push rbx
%sub rsp, 0x8
%mov rbp, qword ptr [rip+0x20d3cb]
%mov rbx, qword ptr [rip+0x20d3bc]
%mov qword ptr [rip+0x20d3b9], 0x0
%mov qword ptr [rip+0x20d3aa], rdi
%mov rdi, rdx
%call rsi
1284
@1285
%push rbx
%mov rbx, rdi
%mov edx, dword ptr [rdi+0x4]
%mov rdi, qword ptr [rip+0x2261f2]
%mov esi, 0x1
%call 0x7fd1690230d0
1285
@1286
%push r13
%push r12
%mov r13d, esi
%push rbp
%push rbx
%xor ebp, ebp
%mov rbx, rdi
%mov r12d, edx
%sub rsp, 0x8
%test rdi, rdi
%jz 0x7fd169023102
@1287
%nop word ptr [rax+rax*1], ax
%test byte ptr [rbx+0x315], 0x2
%jz 0x7fd169023110
@1288
%mov rbx, qword ptr [rbx+0x18]
%test rbx, rbx
%jnz 0x7fd1690230f0
1286
1287
@1289
%mov rdi, rbx
%mov edx, r12d
%mov esi, r13d
%call 0x7fd169022950
1289
@1290
%push r15
%push r14
%push r13
%push r12
%push rbp
%push rbx
%sub rsp, 0xa8
%mov rax, qword ptr [rdi+0x68]
%test rax, rax
%jz 0x7fd169022e38
@1291
%mov rax, qword ptr [rax+0x8]
%mov r15, rdi
%mov dword ptr [rsp+0x4c], edx
%mov dword ptr [rsp+0x48], esi
%mov qword ptr [rsp+0x18], rax
%mov rax, qword ptr [rdi+0x158]
%mov rdi, qword ptr [rdi+0x168]
%test rax, rax
%mov qword ptr [rsp+0x58], rax
%mov qword ptr [rsp+0x50], rdi
%jz 0x7fd169022f96
@1292
%mov rax, qword ptr [rax+0x8]
%add rax, qword ptr [r15]
%lea r14, ptr [rip+0xee8f]
%mov dword ptr [rsp], 0x0
%mov dword ptr [rsp+0x44], 0x0
%mov r13, r15
%cmp word ptr [rax], 0x1
%mov qword ptr [rsp+0x38], rax
%jnz 0x7fd169022fd3
1290
1291
1292
@1293
%nop word ptr [rax+rax*1], ax
%mov ebx, dword ptr [rax+0x4]
%mov rax, qword ptr [r13+0x30]
%lea rdi, ptr [rip+0x21667a]
%add rbx, qword ptr [rsp+0x18]
%lea rax, ptr [rax+rax*8]
%shl rax, 0x4
%mov r15, qword ptr [rdi+rax*1]
%test r15, r15
%jnz 0x7fd169022a15
@1294
%jmp 0x7fd169022cd0
1293
@1295
%mov rsi, r15
%mov rdi, rbx
%call 0x7fd169022700
1295
711
350
351
353
354
355
712
359
360
715
716
718
350
351
353
354
355
712
359
360
719
721
723
@1296
%test eax, eax
%jz 0x7fd169022a08
@1297
%mov ecx, dword ptr [rsp+0x4c]
%test ecx, ecx
%jnz 0x7fd169022daf
@1298
%mov rax, qword ptr [rsp+0x38]
%mov qword ptr [rsp+0x20], r15
%mov r15d, dword ptr [rsp]
%mov qword ptr [rsp+0x10], r13
%mov ebx, dword ptr [rax+0x8]
%add rbx, rax
%lea rax, ptr [rsp+0x80]
%mov qword ptr [rsp+0x30], rax
%nop word ptr [rax+rax*1], ax
%movzx eax, word ptr [rbx+0x4]
%mov r12d, dword ptr [rbx+0x8]
%add r12, qword ptr [rsp+0x18]
%mov r13d, dword ptr [rbx]
%mov word ptr [rsp+0x42], ax
%mov rax, qword ptr [rsp+0x20]
%mov qword ptr [rsp], r12
%mov rbp, qword ptr [rax+0x28]
%mov rax, qword ptr [rsp+0x10]
%mov r12, qword ptr [rax+0x8]
%cmp byte ptr [r12], 0x0
%jnz 0x7fd169022aaa
1296
@1299
%mov r15, qword ptr [r15+0x18]
%test r15, r15
%jz 0x7fd169022cd0
@1300
%mov rsi, r15
%mov rdi, rbx
%call 0x7fd169022700
1299
1300
711
350
351
353
354
355
712
359
360
715
716
718
350
351
353
354
355
712
359
360
719
721
723
1296
1299
1300
711
350
351
353
354
355
712
359
360
715
716
718
350
351
353
354
355
712
713
714
@1301
%lea rax, ptr [r9+rcx*1-0x10]
%lea rdi, ptr [rdi+rax*1]
%lea rsi, ptr [rsi+rcx*1]
%test r8d, r8d
%jz 0x7fd16902f770
@1302
%xchg rdi, rsi
%nop
%nop word ptr [rax+rax*1], ax
%bsf rdx, rdx
%movzx ecx, byte ptr [rsi+rdx*1]
%movzx eax, byte ptr [rdi+rdx*1]
%sub eax, ecx
%ret 
1301
1302
@1303
%test eax, eax
%jnz 0x7fd169022740
@1304
%add rsp, 0x8
%mov edx, 0x1
%mov eax, edx
%pop rbx
%pop rbp
%ret 
1303
1304
@1305
%test eax, eax
%jz 0x7fd169022a08
@1306
%mov ecx, dword ptr [rsp+0x4c]
%test ecx, ecx
%jnz 0x7fd169022daf
@1307
%mov rax, qword ptr [rsp+0x38]
%mov qword ptr [rsp+0x20], r15
%mov r15d, dword ptr [rsp]
%mov qword ptr [rsp+0x10], r13
%mov ebx, dword ptr [rax+0x8]
%add rbx, rax
%lea rax, ptr [rsp+0x80]
%mov qword ptr [rsp+0x30], rax
%nop word ptr [rax+rax*1], ax
%movzx eax, word ptr [rbx+0x4]
%mov r12d, dword ptr [rbx+0x8]
%add r12, qword ptr [rsp+0x18]
%mov r13d, dword ptr [rbx]
%mov word ptr [rsp+0x42], ax
%mov rax, qword ptr [rsp+0x20]
%mov qword ptr [rsp], r12
%mov rbp, qword ptr [rax+0x28]
%mov rax, qword ptr [rsp+0x10]
%mov r12, qword ptr [rax+0x8]
%cmp byte ptr [r12], 0x0
%jnz 0x7fd169022aaa
1305
1306
1307
@1308
%mov rax, qword ptr [rip+0x215ca7]
%mov r12, qword ptr [rax]
%lea rax, ptr [rip+0xef4c]
%test r12, r12
%cmovz r12, rax
%mov rax, qword ptr [rbp+0x68]
%mov rax, qword ptr [rax+0x8]
%mov qword ptr [rsp+0x8], rax
%lea rax, ptr [rip+0x215ca2]
%test byte ptr [rax], 0x10
%jnz 0x7fd169022c80
@1309
%mov rax, qword ptr [rbp+0x168]
%test rax, rax
%jz 0x7fd169022c38
@1310
%mov rdx, qword ptr [rax+0x8]
%test rdx, rdx
%jz 0x7fd1690230ab
1308
1309
1310
@1311
%add rdx, qword ptr [rbp]
%cmp word ptr [rdx], 0x1
%jnz 0x7fd169022b23
@1312
%mov qword ptr [rsp+0x28], r12
%mov r12, rbx
%mov ebx, r13d
%mov r13, rdx
%cmp ebx, dword ptr [r13+0x8]
%jz 0x7fd169022be0
@1313
%mov eax, dword ptr [r13+0x10]
%test eax, eax
%jz 0x7fd169022d50
1311
1312
1313
@1314
%add r13, rax
%cmp word ptr [r13], 0x1
%jz 0x7fd169022afc
@1315
%mov rbx, r12
%mov rdx, r13
%mov byte ptr [rsp+0x73], 0x0
%movzx esi, word ptr [rdx]
%lea rcx, ptr [rsp+0x73]
%mov rax, 0xcccccccccccccccd
%sub rcx, 0x1
%mul rsi
%shr rdx, 0x3
%lea rax, ptr [rdx+rdx*4]
%add rax, rax
%sub rsi, rax
%test rdx, rdx
%movzx eax, byte ptr [r14+rsi*1]
%mov rsi, rdx
%mov byte ptr [rcx], al
%jnz 0x7fd169022b30
@1316
%mov rsi, qword ptr [rbp+0x8]
%cmp byte ptr [rsi], 0x0
%jnz 0x7fd169022b7f
1314
@1317
%cmp ebx, dword ptr [r13+0x8]
%jz 0x7fd169022be0
@1318
%mov eax, dword ptr [r13+0x10]
%test eax, eax
%jz 0x7fd169022d50
@1319
%add r13, rax
%cmp word ptr [r13], 0x1
%jz 0x7fd169022afc
1317
@1320
%mov eax, dword ptr [r13+0xc]
%mov rdi, qword ptr [rsp]
%mov esi, dword ptr [r13+rax*1]
%add rsi, qword ptr [rsp+0x8]
%call 0x7fd16902e360
1320
350
353
354
740
712
713
714
1301
744
@1321
%test eax, eax
%jnz 0x7fd169022b06
@1322
%mov rbx, r12
%jmp 0x7fd169022bb8
1321
1322
@1323
%movzx eax, word ptr [rbx+0x6]
%and eax, 0x7fff
%cmp r15d, eax
%cmovb r15d, eax
%mov eax, dword ptr [rbx+0xc]
%test eax, eax
%jz 0x7fd169022c08
@1324
%add rbx, rax
%jmp 0x7fd169022a60
1323
@1325
%mov r13, qword ptr [rsp+0x10]
%mov dword ptr [rsp], r15d
%mov rdi, qword ptr [rsp+0x38]
%mov eax, dword ptr [rdi+0xc]
%test eax, eax
%jz 0x7fd169022dc2
@1326
%add rdi, rax
%mov qword ptr [rsp+0x38], rdi
%mov rax, rdi
%jmp 0x7fd1690229d8
1325
@1327
%cmp qword ptr [rsp+0x50], 0x0
%mov r15, r13
%jz 0x7fd169022e1b
@1328
%mov rax, qword ptr [rsp+0x50]
%mov edi, dword ptr [rsp]
%mov rdx, qword ptr [rax+0x8]
%add rdx, qword ptr [r15]
%movzx eax, word ptr [rdx+0x4]
%and eax, 0x7fff
%cmp edi, eax
%cmovnb eax, edi
%mov ecx, eax
%mov dword ptr [rsp], eax
%mov eax, dword ptr [rdx+0x10]
%test eax, eax
%jz 0x7fd169022e1b
@1329
%nop word ptr [rax+rax*1], ax
%add rdx, rax
%movzx eax, word ptr [rdx+0x4]
%and eax, 0x7fff
%cmp ecx, eax
%cmovb ecx, eax
%mov eax, dword ptr [rdx+0x10]
%test eax, eax
%jnz 0x7fd169022e00
1327
@1330
%mov eax, dword ptr [rsp]
%test eax, eax
%jnz 0x7fd169022e76
@1331
%mov eax, dword ptr [rsp+0x44]
%add rsp, 0xa8
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
1330
@1332
%lea edi, ptr [rax+0x1]
%mov esi, 0x18
%mov rbx, rdi
%call 0x7fd169011ec0
1332
261
262
265
266
267
268
269
274
@1333
%test rax, rax
%mov qword ptr [r15+0x2e0], rax
%jz 0x7fd16902306c
@1334
%mov rdx, qword ptr [r15+0x1c8]
%mov rdi, qword ptr [rsp+0x58]
%mov dword ptr [r15+0x2e8], ebx
%mov rdx, qword ptr [rdx+0x8]
%test rdi, rdi
%mov qword ptr [r15+0x330], rdx
%jz 0x7fd169022f2e
@1335
%mov rdi, qword ptr [rdi+0x8]
%add rdi, qword ptr [r15]
%mov r8, qword ptr [rsp+0x18]
%nop dword ptr [rax], eax
%mov ecx, dword ptr [rdi+0x8]
%add rcx, rdi
%jmp 0x7fd169022ed3
1333
1334
1335
@1336
%movzx edx, word ptr [rcx+0x6]
%mov esi, edx
%and si, 0x7fff
%movzx r9d, si
%cmp ebx, r9d
%jbe 0x7fd169023042
@1337
%movzx esi, si
%and dx, 0x8000
%mov r9d, dword ptr [rcx]
%lea rsi, ptr [rsi+rsi*2]
%movzx edx, dx
%lea rsi, ptr [rax+rsi*8]
%mov dword ptr [rsi+0xc], edx
%mov edx, dword ptr [rcx+0x8]
%mov dword ptr [rsi+0x8], r9d
%add rdx, r8
%mov qword ptr [rsi], rdx
%mov edx, dword ptr [rdi+0x4]
%add rdx, r8
%mov qword ptr [rsi+0x10], rdx
%mov edx, dword ptr [rcx+0xc]
%test edx, edx
%jnz 0x7fd169022ed0
@1338
%mov edx, dword ptr [rdi+0xc]
%test edx, edx
%jz 0x7fd169022f2e
1336
1337
1338
@1339
%mov rdi, qword ptr [rsp+0x50]
%test rdi, rdi
%jz 0x7fd169022e22
@1340
%mov rdx, qword ptr [rdi+0x8]
%mov r8, qword ptr [rsp+0x18]
%add rdx, qword ptr [r15]
%jmp 0x7fd169022f84
1339
@1341
%mov eax, dword ptr [rsp+0x44]
%add rsp, 0xa8
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
1341
@1342
%mov rbx, qword ptr [rbx+0x18]
%test eax, eax
%setnz al
%movzx eax, al
%or ebp, eax
%test rbx, rbx
%jnz 0x7fd1690230f0
@1343
%add rsp, 0x8
%mov eax, ebp
%pop rbx
%pop rbp
%pop r12
%pop r13
%ret 
1342
@1344
%test byte ptr [rbx+0x315], 0x2
%jz 0x7fd169023110
@1345
%mov rbx, qword ptr [rbx+0x18]
%test rbx, rbx
%jnz 0x7fd1690230f0
@1346
%add rsp, 0x8
%mov eax, ebp
%pop rbx
%pop rbp
%pop r12
%pop r13
%ret 
1344
1289
1290
1291
@1347
%cmp qword ptr [rsp+0x50], 0x0
%mov dword ptr [rsp], 0x0
%mov dword ptr [rsp+0x44], 0x0
%jnz 0x7fd169022dcd
@1348
%jmp 0x7fd169022e22
1347
@1349
%mov rax, qword ptr [rsp+0x50]
%mov edi, dword ptr [rsp]
%mov rdx, qword ptr [rax+0x8]
%add rdx, qword ptr [r15]
%movzx eax, word ptr [rdx+0x4]
%and eax, 0x7fff
%cmp edi, eax
%cmovnb eax, edi
%mov ecx, eax
%mov dword ptr [rsp], eax
%mov eax, dword ptr [rdx+0x10]
%test eax, eax
%jz 0x7fd169022e1b
@1350
%nop word ptr [rax+rax*1], ax
%add rdx, rax
%movzx eax, word ptr [rdx+0x4]
%and eax, 0x7fff
%cmp ecx, eax
%cmovb ecx, eax
%mov eax, dword ptr [rdx+0x10]
%test eax, eax
%jnz 0x7fd169022e00
@1351
%mov dword ptr [rsp], ecx
%mov eax, dword ptr [rsp]
%test eax, eax
%jnz 0x7fd169022e76
1349
1350
1351
1332
261
262
265
266
267
268
269
274
1333
1334
1339
1340
@1352
%test byte ptr [rdx+0x2], 0x1
%jz 0x7fd169022f4a
@1353
%mov ecx, dword ptr [rdx+0x10]
%test ecx, ecx
%jnz 0x7fd169022f81
@1354
%jmp 0x7fd169022e22
1352
1353
@1355
%add rdx, rcx
%test byte ptr [rdx+0x2], 0x1
%jz 0x7fd169022f4a
@1356
%mov ecx, dword ptr [rdx+0x10]
%test ecx, ecx
%jnz 0x7fd169022f81
@1357
%jmp 0x7fd169022e22
1355
@1358
%mov esi, dword ptr [rdx+0xc]
%movzx ecx, word ptr [rdx+0x4]
%mov edi, dword ptr [rdx+0x8]
%mov esi, dword ptr [rdx+rsi*1]
%and ecx, 0x7fff
%lea rcx, ptr [rcx+rcx*2]
%lea rcx, ptr [rax+rcx*8]
%add rsi, r8
%mov dword ptr [rcx+0x8], edi
%mov qword ptr [rcx], rsi
%mov qword ptr [rcx+0x10], 0x0
%mov ecx, dword ptr [rdx+0x10]
%test ecx, ecx
%jz 0x7fd169022e22
@1359
%add rdx, rcx
%test byte ptr [rdx+0x2], 0x1
%jz 0x7fd169022f4a
@1360
%mov ecx, dword ptr [rdx+0x10]
%test ecx, ecx
%jnz 0x7fd169022f81
1358
1341
1342
1344
1289
1290
1291
1292
1293
1295
711
350
351
352
744
715
716
718
350
351
352
744
719
721
723
1296
1299
1300
711
350
351
352
744
715
716
718
350
351
352
744
719
721
723
1296
1299
1300
711
350
351
352
744
715
716
718
350
351
352
744
719
721
723
1296
1299
1300
711
350
353
354
355
1191
359
360
715
716
718
350
353
354
355
1191
359
360
719
721
722
350
351
352
1194
1195
1196
1197
359
360
719
720
1296
1297
1298
@1361
%mov rax, qword ptr [rbp+0x68]
%mov rax, qword ptr [rax+0x8]
%mov qword ptr [rsp+0x8], rax
%lea rax, ptr [rip+0x215ca2]
%test byte ptr [rax], 0x10
%jnz 0x7fd169022c80
@1362
%mov rax, qword ptr [rbp+0x168]
%test rax, rax
%jz 0x7fd169022c38
@1363
%mov rdx, qword ptr [rax+0x8]
%test rdx, rdx
%jz 0x7fd1690230ab
1361
1362
1363
1311
1312
1313
1314
1317
1318
1319
1317
1320
350
353
354
740
730
359
744
1321
1322
1323
1324
@1364
%movzx eax, word ptr [rbx+0x4]
%mov r12d, dword ptr [rbx+0x8]
%add r12, qword ptr [rsp+0x18]
%mov r13d, dword ptr [rbx]
%mov word ptr [rsp+0x42], ax
%mov rax, qword ptr [rsp+0x20]
%mov qword ptr [rsp], r12
%mov rbp, qword ptr [rax+0x28]
%mov rax, qword ptr [rsp+0x10]
%mov r12, qword ptr [rax+0x8]
%cmp byte ptr [r12], 0x0
%jnz 0x7fd169022aaa
@1365
%mov rax, qword ptr [rip+0x215ca7]
%mov r12, qword ptr [rax]
%lea rax, ptr [rip+0xef4c]
%test r12, r12
%cmovz r12, rax
%mov rax, qword ptr [rbp+0x68]
%mov rax, qword ptr [rax+0x8]
%mov qword ptr [rsp+0x8], rax
%lea rax, ptr [rip+0x215ca2]
%test byte ptr [rax], 0x10
%jnz 0x7fd169022c80
@1366
%mov rax, qword ptr [rbp+0x168]
%test rax, rax
%jz 0x7fd169022c38
1364
1361
1362
1363
1311
1312
1313
1314
1317
1318
1319
1317
1318
1319
1317
1318
1319
1317
1320
350
351
352
744
1321
1322
1323
1325
1327
1328
1329
@1367
%add rdx, rax
%movzx eax, word ptr [rdx+0x4]
%and eax, 0x7fff
%cmp ecx, eax
%cmovb ecx, eax
%mov eax, dword ptr [rdx+0x10]
%test eax, eax
%jnz 0x7fd169022e00
@1368
%mov dword ptr [rsp], ecx
%mov eax, dword ptr [rsp]
%test eax, eax
%jnz 0x7fd169022e76
@1369
%mov eax, dword ptr [rsp+0x44]
%add rsp, 0xa8
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1367
1368
1332
261
262
265
266
267
268
269
274
1333
1334
1335
1336
1337
@1370
%add rcx, rdx
%movzx edx, word ptr [rcx+0x6]
%mov esi, edx
%and si, 0x7fff
%movzx r9d, si
%cmp ebx, r9d
%jbe 0x7fd169023042
@1371
%movzx esi, si
%and dx, 0x8000
%mov r9d, dword ptr [rcx]
%lea rsi, ptr [rsi+rsi*2]
%movzx edx, dx
%lea rsi, ptr [rax+rsi*8]
%mov dword ptr [rsi+0xc], edx
%mov edx, dword ptr [rcx+0x8]
%mov dword ptr [rsi+0x8], r9d
%add rdx, r8
%mov qword ptr [rsi], rdx
%mov edx, dword ptr [rdi+0x4]
%add rdx, r8
%mov qword ptr [rsi+0x10], rdx
%mov edx, dword ptr [rcx+0xc]
%test edx, edx
%jnz 0x7fd169022ed0
@1372
%mov edx, dword ptr [rdi+0xc]
%test edx, edx
%jz 0x7fd169022f2e
1370
1371
1372
1339
1340
1352
1353
1355
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1359
1358
1341
1342
1344
1289
1290
1291
1347
1349
1350
1367
1367
1367
1368
1332
261
262
265
266
267
268
269
274
1333
1334
1339
1340
1352
1353
1355
1358
1359
1358
1359
1358
1359
1358
1341
1342
1343
@1373
%test eax, eax
%jz 0x7fd169012e82
@1374
%mov eax, dword ptr [rbx]
%test eax, eax
%jnz 0x7fd169012e88
@1375
%pop rbx
%ret 
1373
@1376
%pop rbx
%ret 
1376
@1377
%mov qword ptr [rip+0x20d3a6], rbp
%mov qword ptr [rip+0x20d397], rbx
%add rsp, 0x8
%pop rbx
%pop rbp
%ret 
1377
@1378
%movzx eax, byte ptr [rip+0x22500e]
%cmp qword ptr [rbp-0x1b0], 0x0
%mov byte ptr [rbp-0x1c0], al
%jnz 0x7fd169015006
@1379
%call 0x7fd169011f10
1378
1379
@1380
%cmp qword ptr [rip+0x228098], 0x0
%push rbx
%mov rbx, qword ptr [rip+0x228060]
%mov qword ptr [rip+0x228069], rbx
%jnz 0x7fd16901205a
@1381
%lea rdi, ptr [rbx+0x40]
%mov esi, 0x1
%shl rdi, 0x4
%call 0x7fd169011ec0
1380
1381
261
262
265
266
267
268
269
274
@1382
%cmp qword ptr [rip+0x2271a9], 0x0
%lea rdx, ptr [rbx+0x3f]
%mov qword ptr [rip+0x228036], rax
%lea rsi, ptr [rax+0x10]
%mov qword ptr [rax+0x8], 0x0
%mov qword ptr [rax], rdx
%jz 0x7fd169011f82
@1383
%lea rcx, ptr [rip+0x217ae]
%lea rsi, ptr [rip+0x1fa01]
%lea rdi, ptr [rip+0x20cd0]
%mov edx, 0x2c4
%call 0x7fd16902c790
1382
@1384
%mov rax, qword ptr [rip+0x2270d7]
%xor ecx, ecx
%test rax, rax
%movsxd rdx, ecx
%jz 0x7fd169011fae
@1385
%cmp qword ptr [rax+0x428], 0x0
%jz 0x7fd169011fa8
@1386
%shl rdx, 0x4
%inc ecx
%mov qword ptr [rsi+rdx*1+0x8], rax
%mov rax, qword ptr [rax+0x18]
%jmp 0x7fd169011f8b
1384
1385
@1387
%mov rax, qword ptr [rax+0x18]
%jmp 0x7fd169011f8b
1387
@1388
%test rax, rax
%movsxd rdx, ecx
%jz 0x7fd169011fae
@1389
%cmp qword ptr [rax+0x428], 0x0
%jz 0x7fd169011fa8
@1390
%shl rdx, 0x4
%inc ecx
%mov qword ptr [rsi+rdx*1+0x8], rax
%mov rax, qword ptr [rax+0x18]
%jmp 0x7fd169011f8b
1388
1389
1387
1388
1389
1390
1388
1389
1387
1388
@1391
%cmp rbx, rdx
%jz 0x7fd169011fd2
@1392
%lea rcx, ptr [rip+0x2175e]
%lea rsi, ptr [rip+0x1f9b1]
%lea rdi, ptr [rip+0x1f9b1]
%mov edx, 0x2d0
%call 0x7fd16902c790
1391
@1393
%call 0x7fd169023eb0
1393
@1394
%mov r10, qword ptr [rip+0x2160d1]
%push r14
%push r13
%push r12
%push rbp
%push rbx
%test r10, r10
%jz 0x7fd169024043
@1395
%cmp qword ptr [r10+0x8], 0x0
%jnz 0x7fd169024024
@1396
%mov rdi, qword ptr [r10+0x18]
%test rdi, rdi
%jz 0x7fd169023ff5
1394
1395
1396
@1397
%mov r13, qword ptr [r10]
%test r13, r13
%jz 0x7fd169024005
@1398
%add r10, 0x28
%xor ebx, ebx
%xor r11d, r11d
%xor r12d, r12d
%xor ebp, ebp
%mov r9d, 0x40
%jmp 0x7fd169023f56
1397
1398
@1399
%mov rcx, qword ptr [rdi+0x430]
%mov rax, qword ptr [rdi+0x438]
%mov rsi, r12
%mov r8, qword ptr [rdi+0x428]
%lea r14, ptr [rcx-0x1]
%neg rax
%and r14, rax
%cmp r9, rcx
%cmovb r9, rcx
%sub rsi, rbp
%cmp rsi, r8
%jb 0x7fd169023f08
@1400
%lea rax, ptr [rcx+rbp*1-0x1]
%xor edx, edx
%add rax, r8
%sub rax, r14
%div rcx
%imul rax, rcx
%add rax, r14
%cmp rax, r12
%jnbe 0x7fd169023f08
@1401
%mov qword ptr [rdi+0x440], rax
%mov rdi, qword ptr [r10]
%add rbx, 0x1
%mov rbp, rax
%test rdi, rdi
%jnz 0x7fd169023f49
1399
@1402
%lea rax, ptr [rcx+r11*1-0x1]
%xor edx, edx
%add rsi, r8
%add rsi, r11
%add rax, r8
%sub rax, r14
%div rcx
%imul rax, rcx
%add rax, r14
%cmp rsi, rax
%jnb 0x7fd169023f33
@1403
%mov r12, rax
%mov rbp, r11
%sub r12, r8
%mov qword ptr [rdi+0x440], rax
%mov rdi, qword ptr [r10]
%add rbx, 0x1
%mov r11, rax
%test rdi, rdi
%jz 0x7fd169023fc0
@1404
%add r10, 0x10
%cmp rbx, r13
%jz 0x7fd169024005
1402
@1405
%mov qword ptr [rdi+0x440], rax
%mov rdi, qword ptr [r10]
%add rbx, 0x1
%mov r11, rax
%test rdi, rdi
%jz 0x7fd169023fc0
@1406
%add r10, 0x10
%cmp rbx, r13
%jz 0x7fd169024005
@1407
%mov rcx, qword ptr [rdi+0x430]
%mov rax, qword ptr [rdi+0x438]
%mov rsi, r12
%mov r8, qword ptr [rdi+0x428]
%lea r14, ptr [rcx-0x1]
%neg rax
%and r14, rax
%cmp r9, rcx
%cmovb r9, rcx
%sub rsi, rbp
%cmp rsi, r8
%jb 0x7fd169023f08
1405
@1408
%lea rax, ptr [r11+r9*1+0x67f]
%xor edx, edx
%div r9
%imul rax, r9
%add rax, 0x900
%pop rbx
%mov qword ptr [rip+0x215fc1], r11
%mov qword ptr [rip+0x215fb2], rax
%pop rbp
%mov qword ptr [rip+0x215fba], r9
%pop r12
%pop r13
%pop r14
%ret 
1408
@1409
%call 0x7fd169024090
1409
@1410
%push r12
%mov r12, qword ptr [rip+0x215eff]
%push rbp
%push rbx
%mov rbx, qword ptr [rip+0x215f06]
%lea rdi, ptr [r12+rbx*1+0x8]
%call 0x7fd169011ea0
1410
266
267
268
269
274
@1411
%test rax, rax
%jz 0x7fd169024150
@1412
%mov rbp, rax
%lea rax, ptr [rax+rbx*1-0x1]
%xor edx, edx
%mov esi, 0x10
%div rbx
%imul rax, rbx
%lea rbx, ptr [r12+rax*1-0x900]
%xor eax, eax
%lea rdi, ptr [rbx+0x8]
%mov rcx, rbx
%mov qword ptr [rbx], 0x0
%mov qword ptr [rbx+0x8f8], 0x0
%and rdi, 0xfffffffffffffff8
%sub rcx, rdi
%add ecx, 0x900
%shr ecx, 0x3
%rep stosq qword ptr [rdi]
1411
1412
@1413
%rep stosq qword ptr [rdi]
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
1413
@1414
%mov qword ptr [rbx+0x900], rbp
%mov rdi, qword ptr [rip+0x215e71]
%lea r12, ptr [rdi+0xe]
%add rdi, 0x10
%call 0x7fd169011ec0
1414
261
262
265
266
267
268
269
274
@1415
%test rax, rax
%jz 0x7fd169024138
@1416
%mov qword ptr [rax], r12
%add rax, 0x10
%mov qword ptr [rbx+0x8], rax
%mov rax, rbx
%pop rbx
%pop rbp
%pop r12
%ret 
1415
1416
@1417
%test rax, rax
%mov rsi, rax
%jnz 0x7fd169012006
@1418
%lea rbx, ptr [rip+0x20c8d]
%mov rsi, rbx
%mov edi, 0x2
%xor eax, eax
%call 0x7fd169022660
1417
@1419
%mov rax, qword ptr [rax+0x8]
%mov edi, 0x1002
%mov qword ptr [rip+0x227f9a], rax
%mov qword ptr [rsi], rsi
%mov eax, 0x9e
%mov qword ptr [rsi+0x10], rsi
%syscall 
1419
@1420
%test eax, eax
%jz 0x7fd169012051
@1421
%lea rbx, ptr [rip+0x20c81]
%lea rsi, ptr [rip+0x20cb2]
%mov rdx, rbx
%mov edi, 0x2
%xor eax, eax
%call 0x7fd169022660
1420
@1422
%mov byte ptr [rip+0x227fa0], 0x1
%jmp 0x7fd16901205c
1422
@1423
%mov rax, rsi
%pop rbx
%ret 
1423
@1424
%mov qword ptr [rbp-0x1b0], rax
%cmp byte ptr [rbp-0x1d0], 0x0
%jz 0x7fd169015043
@1425
%mov rdx, qword ptr [rip+0x223e3a]
%mov rax, qword ptr [rdx]
%xor al, al
%mov qword ptr fs:[0x28], rax
%mov rax, qword ptr [rdx+0x8]
%mov qword ptr fs:[0x30], rax
%mov qword ptr [rip+0x223e14], 0x0
%mov qword ptr [rip+0x2236ed], rax
%cmp dword ptr [rbp-0x198], 0x0
%jnz 0x7fd16901562e
@1426
%mov rdx, qword ptr [r14+0x278]
%test rdx, rdx
%jz 0x7fd1690155f0
1424
1425
1426
@1427
%lea rax, ptr [r14+0x2b8]
%test byte ptr [rip+0x223163], 0x2
%movdqu xmm0, xmmword ptr [r14+0x2b8]
%mov qword ptr [rip+0x223a62], rax
%mov rax, qword ptr [rip+0x2243d3]
%movups xmmword ptr [rip+0x22316c], xmm0
%mov qword ptr [rip+0x223285], rax
%jz 0x7fd169015280
@1428
%jmp 0x7fd169015251
1427
@1429
%xor r12d, r12d
%cmp qword ptr [rip+0x2235fd], 0x0
%setnz r12b
%or dword ptr [rip+0x22350e], r12d
%rdtsc 
%shl rdx, 0x20
%mov eax, eax
%mov r15d, dword ptr [r14+0x2c0]
%or rdx, rax
%mov rbx, rdx
%test r15d, r15d
%jz 0x7fd16901541a
@1430
%mov rax, qword ptr [r14+0x3b8]
%lea edx, ptr [r15-0x1]
%mov r15, rdx
%mov r13, qword ptr [rax+rdx*8]
%mov rax, qword ptr [r13+0x38]
%mov rax, qword ptr [rax+0x8]
%test rax, rax
%jnz 0x7fd169015370
@1431
%and byte ptr [r13+0x316], 0xfe
%cmp r13, qword ptr [rbp-0x1a0]
%jz 0x7fd169015307
1429
1430
@1432
%mov dword ptr [rax+0x10], 0x1
%mov rax, qword ptr [rax+0x8]
%test rax, rax
%jz 0x7fd1690152d7
@1433
%jmp 0x7fd169015370
1432
@1434
%and byte ptr [r13+0x316], 0xfe
%cmp r13, qword ptr [rbp-0x1a0]
%jz 0x7fd169015307
@1435
%mov eax, dword ptr [rip+0x2234b6]
%mov rsi, qword ptr [r13+0x380]
%xor edx, edx
%mov ecx, r12d
%mov rdi, r13
%test eax, eax
%setnz dl
%call 0x7fd16901d750
1434
@1436
%cmp qword ptr [r13+0x428], 0x0
%jz 0x7fd1690152ab
@1437
%cmp byte ptr [rip+0x224ce0], 0x0
%jz 0x7fd1690152ab
@1438
%mov rdi, r13
%call 0x7fd169024970
1436
@1439
%test r15d, r15d
%jz 0x7fd16901541a
@1440
%mov rax, qword ptr [r14+0x3b8]
%lea edx, ptr [r15-0x1]
%mov r15, rdx
%mov r13, qword ptr [rax+rdx*8]
%mov rax, qword ptr [r13+0x38]
%mov rax, qword ptr [rax+0x8]
%test rax, rax
%jnz 0x7fd169015370
@1441
%and byte ptr [r13+0x316], 0xfe
%cmp r13, qword ptr [rbp-0x1a0]
%jz 0x7fd169015307
1439
1440
1441
@1442
%mov eax, dword ptr [rip+0x2234b6]
%mov rsi, qword ptr [r13+0x380]
%xor edx, edx
%mov ecx, r12d
%mov rdi, r13
%test eax, eax
%setnz dl
%call 0x7fd16901d750
1442
@1443
%push rbp
%mov rbp, rsp
%push r15
%push r14
%push r13
%push r12
%mov r12d, edx
%push rbx
%mov r15, rdi
%sub rsp, 0xe8
%and edx, 0x8000000
%mov qword ptr [rbp-0xc8], rsi
%mov dword ptr [rbp-0xd4], ecx
%jnz 0x7fd16901d794
@1444
%xor eax, eax
%cmp qword ptr [rip+0x21b17f], 0x0
%setnz al
%or ecx, eax
%mov dword ptr [rbp-0xd4], ecx
%test byte ptr [r15+0x314], 0x4
%jnz 0x7fd16901dc11
@1445
%mov eax, dword ptr [rip+0x21afb8]
%mov r10d, dword ptr [rbp-0xd4]
%and eax, 0x20
%test r10d, r10d
%jnz 0x7fd16901d7c5
1443
1444
1445
@1446
%cmp qword ptr [r15+0x100], 0x0
%jnz 0x7fd16901ee7a
@1447
%mov r13d, r12d
%and r13d, 0x1
%test eax, eax
%jnz 0x7fd16901ea20
@1448
%cmp qword ptr [r15+0xf0], 0x0
%mov qword ptr [rbp-0xf8], 0x0
%jnz 0x7fd16901e926
1446
1447
1448
@1449
%mov rax, qword ptr [r15+0x68]
%cmp qword ptr [r15+0xf8], 0x0
%mov rax, qword ptr [rax+0x8]
%mov qword ptr [rbp-0xd0], rax
%jz 0x7fd16901dc60
@1450
%test r13d, r13d
%jnz 0x7fd16901e4e0
@1451
%mov rax, qword ptr [r15+0x78]
%pxor xmm0, xmm0
%test rax, rax
%movaps xmmword ptr [rbp-0x70], xmm0
%movaps xmmword ptr [rbp-0x60], xmm0
%movaps xmmword ptr [rbp-0x50], xmm0
%movaps xmmword ptr [rbp-0x40], xmm0
%jz 0x7fd16901eba8
1449
1450
@1452
%mov rax, qword ptr [r15+0x58]
%mov rax, qword ptr [rax+0x8]
%mov rdx, qword ptr [rax+0x8]
%test rdx, rdx
%jz 0x7fd16901e506
@1453
%add rdx, qword ptr [r15]
%mov qword ptr [r15+0x3e0], rdx
%lea rdx, ptr [rax+0x18]
%mov qword ptr [r15+0x3e8], rdx
%mov r9d, dword ptr [rbp-0xd4]
%mov qword ptr [rax+0x8], r15
%test r9d, r9d
%jnz 0x7fd16901dc20
@1454
%cmp qword ptr [rip+0x21a2e6], 0x0
%jz 0x7fd16901ecf8
1452
@1455
%mov r9d, dword ptr [rbp-0xd4]
%mov qword ptr [rax+0x8], r15
%test r9d, r9d
%jnz 0x7fd16901dc20
@1456
%cmp qword ptr [rip+0x21a2e6], 0x0
%jz 0x7fd16901ecf8
@1457
%test byte ptr [rip+0x21a2e7], 0x40
%lea rdx, ptr [rip+0xa14a]
%lea rcx, ptr [rip+0xa213]
%cmovnz rdx, rcx
%mov qword ptr [rax+0x10], rdx
%jmp 0x7fd16901dc60
1455
1456
1457
@1458
%mov rax, qword ptr [r15+0x288]
%test rax, rax
%jz 0x7fd16901d813
@1459
%test r13d, r13d
%jz 0x7fd16901d813
@1460
%mov rdx, qword ptr [rax+0x8]
%mov rax, qword ptr [r15]
%lea rsi, ptr [rip+0xcc79]
%mov qword ptr [rdx+rax*1], rsi
%jmp 0x7fd16901d813
1458
@1461
%mov rax, qword ptr [r15+0x78]
%pxor xmm0, xmm0
%test rax, rax
%movaps xmmword ptr [rbp-0x70], xmm0
%movaps xmmword ptr [rbp-0x60], xmm0
%movaps xmmword ptr [rbp-0x50], xmm0
%movaps xmmword ptr [rbp-0x40], xmm0
%jz 0x7fd16901eba8
@1462
%mov rcx, qword ptr [rax+0x8]
%mov rax, qword ptr [r15+0x80]
%mov rdx, qword ptr [rax+0x8]
%mov qword ptr [rbp-0x98], rcx
%mov rax, qword ptr [r15+0x180]
%movq xmm0, qword ptr [rbp-0x98]
%mov qword ptr [rbp-0x98], rdx
%lea rdi, ptr [rcx+rdx*1]
%movhps xmm0, qword ptr [rbp-0x98]
%test rax, rax
%movaps xmmword ptr [rbp-0x70], xmm0
%jz 0x7fd16901d87c
@1463
%mov rax, qword ptr [rax+0x8]
%mov qword ptr [rbp-0x60], rax
%cmp qword ptr [r15+0xe0], 0x0
%jz 0x7fd16901d8db
1461
1462
1463
@1464
%mov rax, qword ptr [r15+0xf8]
%mov rsi, qword ptr [r15+0x50]
%mov rax, qword ptr [rax+0x8]
%mov rsi, qword ptr [rsi+0x8]
%lea r8, ptr [rax+rsi*1]
%cmp r8, rdi
%jnz 0x7fd16901d8ad
@1465
%sub rdx, rsi
%lea rdi, ptr [rdx+rcx*1]
%mov qword ptr [rbp-0x68], rdx
%test r13d, r13d
%jz 0x7fd16901e4c8
@1466
%mov qword ptr [rbp-0x98], rax
%mov dword ptr [rbp-0x38], r13d
%movq xmm0, qword ptr [rbp-0x98]
%mov qword ptr [rbp-0x98], rsi
%movhps xmm0, qword ptr [rbp-0x98]
%movaps xmmword ptr [rbp-0x50], xmm0
%lea rax, ptr [rbp-0x70]
%and r12d, 0x2000000
%mov r10, r15
%mov qword ptr [rbp-0xc0], rax
%lea rax, ptr [rbp-0x30]
%mov dword ptr [rbp-0xd8], r12d
%mov qword ptr [rbp-0xf0], rax
%mov rsi, qword ptr [rbp-0xc0]
%mov r14, qword ptr [r10]
%mov rax, qword ptr [rsi]
%mov rdi, qword ptr [rsi+0x8]
%mov r8d, dword ptr [rsi+0x18]
%add rdi, rax
%test r8d, r8d
%mov qword ptr [rbp-0x98], rdi
%jnz 0x7fd16901e238
1464
@1467
%test r13d, r13d
%jz 0x7fd16901e4c8
@1468
%mov qword ptr [rbp-0x98], rax
%mov dword ptr [rbp-0x38], r13d
%movq xmm0, qword ptr [rbp-0x98]
%mov qword ptr [rbp-0x98], rsi
%movhps xmm0, qword ptr [rbp-0x98]
%movaps xmmword ptr [rbp-0x50], xmm0
%lea rax, ptr [rbp-0x70]
%and r12d, 0x2000000
%mov r10, r15
%mov qword ptr [rbp-0xc0], rax
%lea rax, ptr [rbp-0x30]
%mov dword ptr [rbp-0xd8], r12d
%mov qword ptr [rbp-0xf0], rax
%mov rsi, qword ptr [rbp-0xc0]
%mov r14, qword ptr [r10]
%mov rax, qword ptr [rsi]
%mov rdi, qword ptr [rsi+0x8]
%mov r8d, dword ptr [rsi+0x18]
%add rdi, rax
%test r8d, r8d
%mov qword ptr [rbp-0x98], rdi
%jnz 0x7fd16901e238
@1469
%mov rdx, qword ptr [r10+0x70]
%lea rdi, ptr [rip+0x21c0bb]
%cmp r10, rdi
%mov rsi, qword ptr [rdx+0x8]
%mov qword ptr [rbp-0xa8], rsi
%mov rsi, qword ptr [rbp-0xc0]
%mov rdx, qword ptr [rsi+0x10]
%lea rdx, ptr [rdx+rdx*2]
%lea rbx, ptr [rax+rdx*8]
%jz 0x7fd16901d96f
1467
1468
1469
@1470
%test r14, r14
%jnz 0x7fd16901e2d8
@1471
%cmp qword ptr [r10+0x238], 0x0
%jz 0x7fd16901e2d8
@1472
%mov rax, qword ptr [r10+0x1c8]
%test rax, rax
%jz 0x7fd16901e338
1470
@1473
%cmp rax, rbx
%jb 0x7fd16901e2ff
@1474
%jmp 0x7fd16901d96f
1473
@1475
%mov edx, dword ptr [rax+0x8]
%mov rcx, qword ptr [rax]
%add rcx, r14
%cmp rdx, 0x26
%jz 0x7fd16901e2e8
@1476
%cmp rdx, 0x8
%jz 0x7fd16901e2e8
@1477
%lea rcx, ptr [rip+0x16ad5]
%lea rsi, ptr [rip+0x14b06]
%lea rdi, ptr [rip+0x14b1f]
%mov edx, 0x21c
%call 0x7fd16902c790
1475
1476
@1478
%mov rdx, qword ptr [rax+0x10]
%add rax, 0x18
%add rdx, r14
%cmp rbx, rax
%mov qword ptr [rcx], rdx
%jbe 0x7fd16901d96f
@1479
%mov edx, dword ptr [rax+0x8]
%mov rcx, qword ptr [rax]
%add rcx, r14
%cmp rdx, 0x26
%jz 0x7fd16901e2e8
@1480
%cmp rdx, 0x8
%jz 0x7fd16901e2e8
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
1479
1480
1478
@1481
%mov rax, qword ptr [r10+0x1c8]
%test rax, rax
%jz 0x7fd16901e338
@1482
%cmp qword ptr [rbp-0x98], rbx
%mov rax, qword ptr [rax+0x8]
%mov qword ptr [rbp-0xb0], rax
%jbe 0x7fd16901db88
@1483
%mov qword ptr [rbp-0xb8], r14
%mov qword ptr [rbp-0xe8], 0x0
%mov r14, r10
%mov qword ptr [rbp-0xe0], 0x0
%nop word ptr [rax+rax*1], ax
%mov r15, qword ptr [rbx+0x8]
%mov r12d, r15d
%cmp r12, 0x25
%jz 0x7fd16901e1a0
1481
1482
1483
@1484
%mov rdi, qword ptr [rbp-0xb8]
%add rdi, qword ptr [rbx]
%mov rax, r15
%mov rsi, qword ptr [rbp-0xb0]
%shr rax, 0x20
%cmp r12, 0x8
%mov qword ptr [rbp-0xa0], rdi
%mov rdi, qword ptr [rbp-0xa8]
%movzx edx, word ptr [rsi+rax*2]
%lea rax, ptr [rax+rax*2]
%mov rsi, qword ptr [r14+0x2e0]
%lea r13, ptr [rdi+rax*8]
%mov qword ptr [rbp-0x80], r13
%jz 0x7fd16901e1e0
@1485
%cmp r12, 0x26
%jz 0x7fd16901e200
@1486
%test r12, r12
%jz 0x7fd16901dcb0
1484
1485
1486
@1487
%movzx eax, byte ptr [r13+0x4]
%shr al, 0x4
%test al, al
%jz 0x7fd16901e0d0
@1488
%movzx eax, byte ptr [r13+0x5]
%and eax, 0x3
%sub eax, 0x1
%cmp eax, 0x1
%jbe 0x7fd16901e0d0
@1489
%cmp r13, qword ptr [r14+0x3f8]
%jz 0x7fd16901ebb8
1487
1488
1489
@1490
%cmp r12, 0x7
%jz 0x7fd16901e1c0
@1491
%cmp r12, 0x10
%jz 0x7fd16901e1c0
@1492
%lea rax, ptr [r12-0x11]
%cmp rax, 0x1
%setbe r9b
%cmp r12, 0x24
%setz al
%or r9d, eax
%cmp r12, 0x5
%movzx eax, r9b
%jz 0x7fd16901e1cf
1490
1491
1492
@1493
%xor r9d, r9d
%cmp r12, 0x6
%setz r9b
%shl r9d, 0x2
%and edx, 0x7fff
%or r9d, eax
%mov qword ptr [r14+0x3f8], r13
%lea rdx, ptr [rdx+rdx*2]
%mov dword ptr [r14+0x400], r9d
%lea r8, ptr [rsi+rdx*8]
%test r8, r8
%jz 0x7fd16901dad7
@1494
%mov esi, dword ptr [r8+0x8]
%mov eax, 0x0
%test esi, esi
%cmovz r8, rax
%mov edi, dword ptr [r13]
%mov rcx, qword ptr [rbp-0xc8]
%lea rdx, ptr [rbp-0x80]
%add rdi, qword ptr [rbp-0xd0]
%push 0x0
%mov rsi, r14
%push 0x1
%call 0x7fd16901c0b0
1493
1494
@1495
%push r15
%push r14
%mov r14, rsi
%push r13
%push r12
%mov r12, rdx
%push rbp
%push rbx
%mov r13, r8
%sub rsp, 0x98
%movzx edx, byte ptr [rdi]
%mov qword ptr [rsp], rdi
%mov qword ptr [rsp+0x20], rcx
%mov dword ptr [rsp+0xc], r9d
%mov rbp, qword ptr [rsp+0xd8]
%test dl, dl
%jz 0x7fd16901c340
@1496
%mov rcx, rdi
%mov ebx, 0x1505
%nop dword ptr [rax+rax*1], eax
%mov rax, rbx
%add rcx, 0x1
%shl rax, 0x5
%add rbx, rax
%add rbx, rdx
%movzx edx, byte ptr [rcx]
%test dl, dl
%jnz 0x7fd16901c0f8
@1497
%mov ebx, ebx
%pxor xmm0, xmm0
%mov eax, 0xffffffff
%add qword ptr [rip+0x21d8b5], 0x1
%test r13, r13
%mov qword ptr [rsp+0x40], rax
%movaps xmmword ptr [rsp+0x50], xmm0
%jz 0x7fd16901c143
1495
1496
@1498
%mov rax, rbx
%add rcx, 0x1
%shl rax, 0x5
%add rbx, rax
%add rbx, rdx
%movzx edx, byte ptr [rcx]
%test dl, dl
%jnz 0x7fd16901c0f8
@1499
%mov ebx, ebx
%pxor xmm0, xmm0
%mov eax, 0xffffffff
%add qword ptr [rip+0x21d8b5], 0x1
%test r13, r13
%mov qword ptr [rsp+0x40], rax
%movaps xmmword ptr [rsp+0x50], xmm0
%jz 0x7fd16901c143
@1500
%test dword ptr [rsp+0xd0], 0xfffffffa
%jnz 0x7fd16901cd93
1498
1498
1498
1499
1500
@1501
%mov rax, qword ptr [rsp+0x20]
%test rbp, rbp
%mov r9, qword ptr [rax]
%jnz 0x7fd16901c350
@1502
%test r9, r9
%mov rcx, qword ptr [r12]
%jz 0x7fd16901c380
@1503
%mov qword ptr [rsp+0x28], 0x0
%xor eax, eax
%lea rsi, ptr [rsp+0x50]
%mov r15, qword ptr [rsp+0x20]
%mov qword ptr [rsp+0xd8], rbp
%mov qword ptr [rsp+0x18], rsi
%lea rsi, ptr [rsp+0x40]
%mov rbp, r15
%mov r15, qword ptr [rsp+0xd8]
%mov qword ptr [rsp+0x10], rsi
%jmp 0x7fd16901c1c4
1501
1502
1503
@1504
%push r14
%mov edi, dword ptr [rsp+0x14]
%push rdi
%push r15
%mov esi, dword ptr [rsp+0xe8]
%push rsi
%push r13
%mov rsi, rbx
%push rax
%mov r8, qword ptr [rsp+0x48]
%mov rdx, qword ptr [rsp+0x40]
%mov rdi, qword ptr [rsp+0x30]
%call 0x7fd16901b240
1504
@1505
%push r15
%push r14
%push r13
%push r12
%push rbp
%push rbx
%sub rsp, 0x98
%mov eax, dword ptr [r9+0x8]
%mov qword ptr [rsp+0x28], rdi
%mov qword ptr [rsp], rsi
%mov qword ptr [rsp+0x60], rdx
%mov qword ptr [rsp+0x30], rcx
%mov qword ptr [rsp+0x50], r8
%mov r11, qword ptr [rsp+0xd0]
%mov r10, rax
%mov eax, dword ptr [rsp+0xe0]
%mov r14d, dword ptr [rsp+0xf0]
%shr rsi, 0x6
%mov r12, qword ptr [r9]
%mov qword ptr [rsp+0x20], rsi
%mov rbp, r11
%shl eax, 0x1e
%and r14d, 0x2
%sar eax, 0x1f
%add eax, 0x3
%mov dword ptr [rsp+0x58], eax
%jmp 0x7fd16901b36d
1505
@1506
%mov rax, qword ptr [r12+rbp*8]
%mov rbx, qword ptr [rax+0x28]
%cmp rbx, qword ptr [rsp+0xe8]
%jz 0x7fd16901b360
@1507
%test r14d, r14d
%jz 0x7fd16901b38d
@1508
%test byte ptr [rbx+0x314], 0x3
%jz 0x7fd16901b360
1506
1507
@1509
%test byte ptr [rbx+0x315], 0x20
%jnz 0x7fd16901b360
@1510
%test byte ptr [rip+0x21d3c3], 0x8
%jz 0x7fd16901b2b0
@1511
%mov rdx, qword ptr [rbx+0x8]
%mov rcx, qword ptr [rbx+0x30]
%cmp byte ptr [rdx], 0x0
%jz 0x7fd16901b3d8
1509
1510
@1512
%mov esi, dword ptr [rbx+0x2ec]
%test esi, esi
%jz 0x7fd16901b360
@1513
%mov rax, qword ptr [rbx+0x70]
%mov r8, qword ptr [rax+0x8]
%mov rax, qword ptr [rbx+0x68]
%mov rax, qword ptr [rax+0x8]
%mov qword ptr [rsp+0x18], rax
%mov rax, qword ptr [rbx+0x2f8]
%test rax, rax
%jz 0x7fd16901b3f8
@1514
%mov edx, dword ptr [rsp+0x20]
%and edx, dword ptr [rbx+0x2f0]
%mov rdi, qword ptr [rsp]
%mov ecx, dword ptr [rbx+0x2f4]
%mov rax, qword ptr [rax+rdx*8]
%mov rdx, rdi
%shr rdx, cl
%mov rcx, rdx
%mov rdx, rax
%shr rdx, cl
%mov ecx, edi
%shr rax, cl
%and rax, rdx
%test al, 0x1
%jnz 0x7fd16901b698
1512
1513
1514
@1515
%mov eax, 0x1
%cmp qword ptr [rsp+0xd8], 0x0
%jz 0x7fd16901b360
@1516
%test al, al
%jz 0x7fd16901b360
@1517
%mov rax, qword ptr [rsp+0xd8]
%mov rdi, qword ptr [rax+0x10]
%test rdi, rdi
%jz 0x7fd16901b360
1515
1516
1517
@1518
%add rbp, 0x1
%cmp r10, rbp
%jbe 0x7fd16901b690
@1519
%mov rax, qword ptr [r12+rbp*8]
%mov rbx, qword ptr [rax+0x28]
%cmp rbx, qword ptr [rsp+0xe8]
%jz 0x7fd16901b360
@1520
%test r14d, r14d
%jz 0x7fd16901b38d
1518
1519
1520
1509
1510
1512
1513
1514
@1521
%xor edx, edx
%mov rax, rdi
%div rsi
%mov rax, qword ptr [rbx+0x300]
%mov eax, dword ptr [rax+rdx*4]
%test eax, eax
%jz 0x7fd16901b31a
@1522
%mov rdi, qword ptr [rbx+0x308]
%mov qword ptr [rsp+0xd0], rbp
%mov rbp, r8
%mov qword ptr [rsp+0x80], r10
%mov qword ptr [rsp+0x78], 0x0
%mov r10, rbx
%mov dword ptr [rsp+0x68], 0x0
%mov dword ptr [rsp+0x48], r14d
%mov qword ptr [rsp+0x38], rdi
%lea r15, ptr [rdi+rax*4]
%mov qword ptr [rsp+0x70], r12
%jmp 0x7fd16901b706
1521
1522
@1523
%mov eax, dword ptr [r15]
%mov r13, rax
%xor rax, qword ptr [rsp]
%shr rax, 0x1
%jnz 0x7fd16901b6f8
@1524
%mov rbx, r15
%sub rbx, qword ptr [rsp+0x38]
%sar rbx, 0x2
%mov r12d, ebx
%mov ebx, ebx
%lea rax, ptr [rbx+rbx*2]
%lea r14, ptr [rbp+rax*8]
%movzx ecx, byte ptr [r14+0x4]
%and ecx, 0xf
%cmp qword ptr [r14+0x8], 0x0
%jnz 0x7fd16901b743
@1525
%cmp cl, 0x6
%jnz 0x7fd16901b6f8
1523
@1526
%add r15, 0x4
%and r13d, 0x1
%jnz 0x7fd16901be69
@1527
%mov eax, dword ptr [r15]
%mov r13, rax
%xor rax, qword ptr [rsp]
%shr rax, 0x1
%jnz 0x7fd16901b6f8
@1528
%mov rbx, r15
%sub rbx, qword ptr [rsp+0x38]
%sar rbx, 0x2
%mov r12d, ebx
%mov ebx, ebx
%lea rax, ptr [rbx+rbx*2]
%lea r14, ptr [rbp+rax*8]
%movzx ecx, byte ptr [r14+0x4]
%and ecx, 0xf
%cmp qword ptr [r14+0x8], 0x0
%jnz 0x7fd16901b743
1526
1527
1528
@1529
%xor eax, eax
%cmp word ptr [r14+0x6], 0x0
%setz al
%test dword ptr [rsp+0xf0], eax
%jnz 0x7fd16901b6f8
@1530
%mov eax, 0x467
%sar eax, cl
%and eax, 0x1
%mov dword ptr [rsp+0x88], eax
%jz 0x7fd16901b6f8
@1531
%cmp r14, qword ptr [rsp+0x30]
%jz 0x7fd16901b795
1529
1530
1531
@1532
%cmp qword ptr [rsp+0xd8], 0x0
%mov rax, qword ptr [r10+0x330]
%jz 0x7fd16901be21
@1533
%test rax, rax
%jz 0x7fd16901bfb8
@1534
%movzx ecx, word ptr [rax+rbx*2]
%mov rax, rcx
%and eax, 0x7fff
%lea rsi, ptr [rax+rax*2]
%mov rax, qword ptr [r10+0x2e0]
%lea rax, ptr [rax+rsi*8]
%mov rsi, qword ptr [rsp+0xd8]
%mov ebx, dword ptr [rax+0x8]
%cmp ebx, dword ptr [rsi+0x8]
%jz 0x7fd16901bf48
1532
1533
1534
@1535
%mov rsi, qword ptr [rsi]
%mov rdi, qword ptr [rax]
%mov qword ptr [rsp+0x88], r10
%mov dword ptr [rsp+0x40], ecx
%call 0x7fd16902e360
1535
350
353
@1536
%movdqa xmm1, xmmword ptr [rsi]
%pxor xmm0, xmm0
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmmword ptr [rdi]
%psubb xmm1, xmm0
%pmovmskb r9d, xmm1
%shr edx, cl
%shr r9d, cl
%sub edx, r9d
%jnz 0x7fd16902f755
@1537
%mov rcx, 0x10
%mov r9, 0x10
%pxor xmm0, xmm0
%nop dword ptr [rax], eax
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
@1538
%add rcx, 0x10
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
1536
1537
1301
744
@1539
%test eax, eax
%mov ecx, dword ptr [rsp+0x40]
%mov r10, qword ptr [rsp+0x88]
%jnz 0x7fd16901b7e3
@1540
%jmp 0x7fd16901b7fd
1539
1540
@1541
%cmp qword ptr [rsp+0xf8], 0x0
%mov r13, r14
%mov rbx, r10
%mov r9d, r12d
%mov r8, rbp
%mov r14d, dword ptr [rsp+0x48]
%mov r12, qword ptr [rsp+0x70]
%mov rbp, qword ptr [rsp+0xd0]
%mov r10, qword ptr [rsp+0x80]
%jnz 0x7fd16901b569
@1542
%nop word ptr [rax+rax*1], ax
%test byte ptr [rbx+0x314], 0x3
%jnz 0x7fd16901b569
@1543
%cmp dword ptr [rsp+0xf0], 0x4
%jnz 0x7fd16901b569
1541
@1544
%movzx eax, byte ptr [r13+0x5]
%and eax, 0x3
%sub eax, 0x1
%cmp eax, 0x1
%jbe 0x7fd16901b599
@1545
%movzx eax, byte ptr [r13+0x4]
%shr al, 0x4
%cmp al, 0x2
%jz 0x7fd16901b630
@1546
%cmp al, 0xa
%jz 0x7fd16901b940
1544
1545
1546
@1547
%cmp al, 0x1
%jz 0x7fd16901b63e
@1548
%test r9d, r9d
%setz al
%jmp 0x7fd16901b31f
1547
@1549
%mov qword ptr [rsp], r13
%mov rax, qword ptr [rsp+0x50]
%movq xmm0, qword ptr [rsp]
%mov qword ptr [rsp], rbx
%movhps xmm0, qword ptr [rsp]
%movaps xmmword ptr [rax], xmm0
%mov eax, 0x1
%add rsp, 0x98
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
1549
@1550
%add rsp, 0x30
%test eax, eax
%jle 0x7fd16901c1a0
@1551
%mov rcx, qword ptr [r12]
%mov rbp, r15
%cmp qword ptr [rsp+0x50], 0x0
%jz 0x7fd16901c380
@1552
%test rcx, rcx
%jz 0x7fd16901c21a
1550
1551
1552
@1553
%movzx eax, byte ptr [rcx+0x5]
%and eax, 0x3
%cmp al, 0x3
%jz 0x7fd16901c280
@1554
%mov r15, qword ptr [rsp+0x58]
%xor ebx, ebx
%movzx eax, byte ptr [r15+0x314]
%and eax, 0x3
%cmp al, 0x2
%jz 0x7fd16901c5da
@1555
%mov esi, dword ptr [r15+0x3cc]
%test esi, esi
%jz 0x7fd16901c5ca
1553
1554
1555
@1556
%mov eax, dword ptr [rip+0x21c517]
%test eax, 0x804
%jnz 0x7fd16901c415
@1557
%mov rax, qword ptr [rsp+0x50]
%mov qword ptr [r12], rax
%add rsp, 0x98
%mov rax, r15
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
1556
1557
@1558
%mov r11, rax
%mov rax, qword ptr [rbp-0x80]
%mov qword ptr [r14+0x408], r11
%mov qword ptr [r14+0x410], rax
%pop rdx
%pop rcx
%xor r10d, r10d
%test rax, rax
%jnz 0x7fd16901e0d6
@1559
%cmp r12, 0x25
%jnbe 0x7fd16901eed3
@1560
%lea rcx, ptr [rip+0x13593]
%movsxd rax, dword ptr [rcx+r12*4]
%add rax, rcx
%jmp rax
1558
@1561
%movzx edx, byte ptr [rax+0x4]
%mov r10, qword ptr [rax+0x8]
%add r10, qword ptr [r11]
%and edx, 0xf
%cmp dl, 0xa
%jnz 0x7fd16901db1c
@1562
%cmp word ptr [rax+0x6], 0x0
%jz 0x7fd16901db1c
@1563
%mov eax, dword ptr [rbp-0xd8]
%test eax, eax
%jnz 0x7fd16901db1c
1561
@1564
%cmp r12, 0x25
%jnbe 0x7fd16901eed3
@1565
%lea rcx, ptr [rip+0x13593]
%movsxd rax, dword ptr [rcx+r12*4]
%add rax, rcx
%jmp rax
1564
1565
@1566
%add r10, qword ptr [rbx+0x10]
%mov rax, qword ptr [rbp-0xa0]
%mov qword ptr [rax], r10
%nop word ptr [rax+rax*1], ax
%add rbx, 0x18
%cmp qword ptr [rbp-0x98], rbx
%jnbe 0x7fd16901d9c0
@1567
%mov rbx, qword ptr [rbp-0xe0]
%mov r10, r14
%mov r14, qword ptr [rbp-0xb8]
%test rbx, rbx
%jz 0x7fd16901db88
@1568
%mov r12, qword ptr [rbp-0xe8]
%cmp rbx, r12
%jnbe 0x7fd16901db88
1566
@1569
%mov r15, qword ptr [rbx+0x8]
%mov r12d, r15d
%cmp r12, 0x25
%jz 0x7fd16901e1a0
@1570
%mov rdi, qword ptr [rbp-0xb8]
%add rdi, qword ptr [rbx]
%mov rax, r15
%mov rsi, qword ptr [rbp-0xb0]
%shr rax, 0x20
%cmp r12, 0x8
%mov qword ptr [rbp-0xa0], rdi
%mov rdi, qword ptr [rbp-0xa8]
%movzx edx, word ptr [rsi+rax*2]
%lea rax, ptr [rax+rax*2]
%mov rsi, qword ptr [r14+0x2e0]
%lea r13, ptr [rdi+rax*8]
%mov qword ptr [rbp-0x80], r13
%jz 0x7fd16901e1e0
@1571
%cmp r12, 0x26
%jz 0x7fd16901e200
1569
1570
1571
@1572
%test r12, r12
%jz 0x7fd16901dcb0
@1573
%movzx eax, byte ptr [r13+0x4]
%shr al, 0x4
%test al, al
%jz 0x7fd16901e0d0
@1574
%movzx eax, byte ptr [r13+0x5]
%and eax, 0x3
%sub eax, 0x1
%cmp eax, 0x1
%jbe 0x7fd16901e0d0
1572
1573
@1575
%mov rax, r13
%mov r11, r14
%movzx edx, byte ptr [rax+0x4]
%mov r10, qword ptr [rax+0x8]
%add r10, qword ptr [r11]
%and edx, 0xf
%cmp dl, 0xa
%jnz 0x7fd16901db1c
@1576
%cmp word ptr [rax+0x6], 0x0
%jz 0x7fd16901db1c
@1577
%mov eax, dword ptr [rbp-0xd8]
%test eax, eax
%jnz 0x7fd16901db1c
1575
1564
1565
@1578
%mov rax, qword ptr [rbp-0x80]
%test rax, rax
%jz 0x7fd16901dcb0
@1579
%mov rdx, qword ptr [r11+0x440]
%lea rcx, ptr [rdx+0x1]
%cmp rcx, 0x1
%jbe 0x7fd16901ef95
@1580
%mov rax, qword ptr [rax+0x8]
%mov rsi, qword ptr [rbp-0xa0]
%sub rax, rdx
%add rax, qword ptr [rbx+0x10]
%mov qword ptr [rsi], rax
%jmp 0x7fd16901dcb0
1578
1579
1580
@1581
%add rbx, 0x18
%cmp qword ptr [rbp-0x98], rbx
%jnbe 0x7fd16901d9c0
@1582
%mov rbx, qword ptr [rbp-0xe0]
%mov r10, r14
%mov r14, qword ptr [rbp-0xb8]
%test rbx, rbx
%jz 0x7fd16901db88
@1583
%mov r12, qword ptr [rbp-0xe8]
%cmp rbx, r12
%jnbe 0x7fd16901db88
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1575
1564
1565
1578
1579
1580
1581
1569
1570
1571
1572
1573
1574
@1584
%cmp r13, qword ptr [r14+0x3f8]
%jz 0x7fd16901ebb8
@1585
%cmp r12, 0x7
%jz 0x7fd16901e1c0
@1586
%cmp r12, 0x10
%jz 0x7fd16901e1c0
1584
1585
1586
@1587
%lea rax, ptr [r12-0x11]
%cmp rax, 0x1
%setbe r9b
%cmp r12, 0x24
%setz al
%or r9d, eax
%cmp r12, 0x5
%movzx eax, r9b
%jz 0x7fd16901e1cf
@1588
%xor r9d, r9d
%cmp r12, 0x6
%setz r9b
%shl r9d, 0x2
%and edx, 0x7fff
%or r9d, eax
%mov qword ptr [r14+0x3f8], r13
%lea rdx, ptr [rdx+rdx*2]
%mov dword ptr [r14+0x400], r9d
%lea r8, ptr [rsi+rdx*8]
%test r8, r8
%jz 0x7fd16901dad7
@1589
%mov esi, dword ptr [r8+0x8]
%mov eax, 0x0
%test esi, esi
%cmovz r8, rax
%mov edi, dword ptr [r13]
%mov rcx, qword ptr [rbp-0xc8]
%lea rdx, ptr [rbp-0x80]
%add rdi, qword ptr [rbp-0xd0]
%push 0x0
%mov rsi, r14
%push 0x1
%call 0x7fd16901c0b0
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
@1590
%mov rsi, rbx
%mov qword ptr [rsp+0x18], r10
%call 0x7fd169022700
1590
711
350
351
352
744
715
716
718
350
351
352
744
719
721
723
@1591
%test eax, eax
%mov r10, qword ptr [rsp+0x18]
%jnz 0x7fd16901be8e
@1592
%nop dword ptr [rax], eax
%add rbp, 0x1
%cmp r10, rbp
%jbe 0x7fd16901b690
@1593
%mov rax, qword ptr [r12+rbp*8]
%mov rbx, qword ptr [rax+0x28]
%cmp rbx, qword ptr [rsp+0xe8]
%jz 0x7fd16901b360
1591
1592
1593
@1594
%test r14d, r14d
%jz 0x7fd16901b38d
@1595
%test byte ptr [rbx+0x314], 0x3
%jz 0x7fd16901b360
@1596
%test byte ptr [rbx+0x315], 0x20
%jnz 0x7fd16901b360
1594
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1526
1527
1526
1527
1526
@1597
%mov rbx, r10
%mov r8, rbp
%mov r14d, dword ptr [rsp+0x48]
%mov r12, qword ptr [rsp+0x70]
%mov rbp, qword ptr [rsp+0xd0]
%mov r10, qword ptr [rsp+0x80]
%jmp 0x7fd16901b60d
1597
@1598
%cmp dword ptr [rsp+0x68], 0x1
%jnz 0x7fd16901b31a
@1599
%mov r13, qword ptr [rsp+0x78]
%xor r9d, r9d
%test r13, r13
%jnz 0x7fd16901b55a
@1600
%jmp 0x7fd16901b31a
1598
1515
1516
1517
1590
711
350
351
352
744
715
716
718
350
351
352
744
719
721
723
1591
1592
1593
1594
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
@1601
%mov edi, dword ptr [r14]
%mov rsi, qword ptr [rsp+0x28]
%add rdi, qword ptr [rsp+0x18]
%mov qword ptr [rsp+0x40], r10
%call 0x7fd16902e360
1601
350
351
353
354
740
730
359
744
@1602
%test eax, eax
%mov r10, qword ptr [rsp+0x40]
%jnz 0x7fd16901b6f8
@1603
%cmp qword ptr [rsp+0xd8], 0x0
%mov rax, qword ptr [r10+0x330]
%jz 0x7fd16901be21
@1604
%test rax, rax
%jz 0x7fd16901bfb8
1602
1603
1604
@1605
%movzx ecx, word ptr [rax+rbx*2]
%mov rax, rcx
%and eax, 0x7fff
%lea rsi, ptr [rax+rax*2]
%mov rax, qword ptr [r10+0x2e0]
%lea rax, ptr [rax+rsi*8]
%mov rsi, qword ptr [rsp+0xd8]
%mov ebx, dword ptr [rax+0x8]
%cmp ebx, dword ptr [rsi+0x8]
%jz 0x7fd16901bf48
@1606
%mov rax, qword ptr [rsp+0xd8]
%or ebx, dword ptr [rax+0xc]
%jnz 0x7fd16901b6f8
@1607
%test cx, cx
%js 0x7fd16901b6f8
1605
1535
350
351
352
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
@1608
%mov dword ptr [r15+0x3cc], 0x1
%jmp 0x7fd16901c243
1608
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1590
711
350
351
352
744
715
716
718
350
351
352
744
719
721
723
1591
1592
1593
1594
1509
1510
1512
1513
1514
1515
1516
1517
1590
711
350
351
352
744
715
716
718
350
351
352
744
719
721
723
1591
1592
1593
1594
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1601
350
351
353
354
355
@1609
%pxor xmm0, xmm0
%movdqa xmm2, xmmword ptr [rdi]
%movdqa xmm1, xmmword ptr [rsi]
%pcmpeqb xmm0, xmm1
%pslldq xmm2, 0x4
%pcmpeqb xmm2, xmm1
%psubb xmm2, xmm0
%pmovmskb r9d, xmm2
%shr edx, cl
%shr r9d, cl
%sub edx, r9d
%jnz 0x7fd16902f755
@1610
%movdqa xmm3, xmmword ptr [rdi]
%pxor xmm0, xmm0
%mov rcx, 0x10
%mov r9d, 0xc
%lea r10, ptr [rdi+0xc]
%and r10, 0xfff
%sub r10, 0x1000
%nop word ptr [rax+rax*1], ax
%add r10, 0x10
%jnle 0x7fd16902f350
@1611
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%movdqa xmm4, xmm2
%psrldq xmm3, 0xc
%pslldq xmm2, 0x4
%por xmm2, xmm3
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
1609
1610
1611
@1612
%add rcx, 0x10
%movdqa xmm3, xmm4
%add r10, 0x10
%jnle 0x7fd16902f350
@1613
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%movdqa xmm4, xmm2
%psrldq xmm3, 0xc
%pslldq xmm2, 0x4
%por xmm2, xmm3
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
@1614
%add rcx, 0x10
%movdqa xmm3, xmm4
%jmp 0x7fd16902f2b0
1612
1613
1301
1302
1602
1603
1604
1605
1535
350
351
352
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1590
711
350
351
352
744
715
716
718
350
351
352
744
719
721
723
1591
1592
1593
1594
1509
1510
1512
1513
1514
1515
1516
1517
1590
711
350
351
352
744
715
716
718
350
351
352
744
719
721
723
1591
1592
1593
1594
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1526
1527
1528
1529
1530
1531
1601
350
351
352
744
1602
1603
1604
1605
1535
350
351
352
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
@1615
%mov eax, dword ptr [rip+0x21d176]
%test eax, eax
%jnz 0x7fd16901bf78
@1616
%mov qword ptr [rsp], r13
%mov rax, qword ptr [rsp+0x50]
%movq xmm0, qword ptr [rsp]
%mov qword ptr [rsp], rbx
%movhps xmm0, qword ptr [rsp]
%movaps xmmword ptr [rax], xmm0
%mov eax, 0x1
%add rsp, 0x98
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
1615
1616
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1615
1616
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1615
1616
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1615
1616
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1615
1616
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1615
1616
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1518
1519
1520
1509
1510
1512
1513
1514
1515
1518
1519
1520
1509
1510
1512
1513
1514
1515
1518
@1617
%xor eax, eax
%jmp 0x7fd16901b65c
1617
@1618
%add rsp, 0x98
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
1618
1550
@1619
%test r15, r15
%jnz 0x7fd16901c1ad
@1620
%test eax, eax
%jnz 0x7fd16901c7de
@1621
%add rbp, 0x8
%mov r9, qword ptr [rbp]
%xor eax, eax
%mov rcx, qword ptr [r12]
%test r9, r9
%jz 0x7fd16901c278
1619
1620
1621
@1622
%mov rbp, r15
%jmp 0x7fd16901c1fe
1622
@1623
%cmp qword ptr [rsp+0x50], 0x0
%jz 0x7fd16901c380
@1624
%test rcx, rcx
%jz 0x7fd16901c21a
@1625
%movzx eax, byte ptr [rcx+0x5]
%and eax, 0x3
%cmp al, 0x3
%jz 0x7fd16901c280
1623
@1626
%test rcx, rcx
%jz 0x7fd16901c390
@1627
%movzx eax, byte ptr [rcx+0x4]
%shr al, 0x4
%cmp al, 0x2
%jz 0x7fd16901c405
@1628
%test byte ptr [rip+0x21c3ca], 0x1
%jnz 0x7fd16901c405
1626
1627
@1629
%mov qword ptr [r12], 0x0
%xor r15d, r15d
%jmp 0x7fd16901c25d
1629
@1630
%add rsp, 0x98
%mov rax, r15
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
1630
1558
1559
1560
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1615
1616
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1615
1616
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1590
711
350
351
352
744
715
716
718
350
351
352
744
719
721
723
1591
1592
1593
1594
1509
1510
1512
1513
1514
1515
1516
1517
1590
711
350
351
352
744
715
716
718
350
351
352
744
719
721
723
1591
1592
1593
1594
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1526
1527
1528
1529
1530
1531
1601
350
351
352
744
1602
1603
1604
1605
1535
350
351
352
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
@1631
%cmp r12, 0x24
%jbe 0x7fd16901ec10
@1632
%xor r8d, r8d
%mov ecx, 0x2
%mov eax, 0x4
%cmp r12, 0x5
%mov edi, dword ptr [r14+0x400]
%jz 0x7fd16901ebe4
@1633
%cmp r12, 0x6
%mov ecx, eax
%jnz 0x7fd16901eee8
1631
@1634
%mov ecx, r15d
%mov rax, 0x1000070080
%xor r8d, r8d
%shr rax, cl
%not rax
%and eax, 0x1
%cmp al, 0x1
%mov ecx, eax
%setb r8b
%shl ecx, 0x1f
%shl eax, 0x1f
%sar ecx, 0x1f
%sar eax, 0x1f
%add ecx, 0x3
%add eax, 0x5
%jmp 0x7fd16901ebcb
1634
@1635
%cmp r12, 0x5
%mov edi, dword ptr [r14+0x400]
%jz 0x7fd16901ebe4
@1636
%cmp r12, 0x6
%mov ecx, eax
%jnz 0x7fd16901eee8
@1637
%cmp edi, ecx
%jnz 0x7fd16901da70
1635
1636
@1638
%cmp r8d, edi
%jz 0x7fd16901ebec
@1639
%cmp r12, 0x7
%jz 0x7fd16901ef01
@1640
%cmp r12, 0x10
%jnz 0x7fd16901da70
1638
@1641
%mov rax, qword ptr [r14+0x410]
%add qword ptr [rip+0x21ade5], 0x1
%mov r11, qword ptr [r14+0x408]
%mov qword ptr [rbp-0x80], rax
%jmp 0x7fd16901db10
1641
@1642
%xor r10d, r10d
%test rax, rax
%jnz 0x7fd16901e0d6
@1643
%cmp r12, 0x25
%jnbe 0x7fd16901eed3
@1644
%lea rcx, ptr [rip+0x13593]
%movsxd rax, dword ptr [rcx+r12*4]
%add rax, rcx
%jmp rax
1642
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1631
1634
1635
1636
1638
1641
1642
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
353
1536
1537
1301
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1631
1634
1635
1636
1638
1641
1642
1561
1564
1565
1566
1567
@1645
%add qword ptr [rbp-0xc0], 0x20
%mov rax, qword ptr [rbp-0xc0]
%cmp rax, qword ptr [rbp-0xf0]
%jnz 0x7fd16901d902
@1646
%mov eax, dword ptr [rbp-0xd4]
%mov r15, r10
%test eax, eax
%jnz 0x7fd16901edb3
@1647
%or byte ptr [r15+0x314], 0x4
%cmp qword ptr [rbp-0xf8], 0x0
%jnz 0x7fd16901ed86
1645
@1648
%mov rsi, qword ptr [rbp-0xc0]
%mov r14, qword ptr [r10]
%mov rax, qword ptr [rsi]
%mov rdi, qword ptr [rsi+0x8]
%mov r8d, dword ptr [rsi+0x18]
%add rdi, rax
%test r8d, r8d
%mov qword ptr [rbp-0x98], rdi
%jnz 0x7fd16901e238
@1649
%mov rdx, qword ptr [r10+0x70]
%lea rdi, ptr [rip+0x21c0bb]
%cmp r10, rdi
%mov rsi, qword ptr [rdx+0x8]
%mov qword ptr [rbp-0xa8], rsi
%mov rsi, qword ptr [rbp-0xc0]
%mov rdx, qword ptr [rsi+0x10]
%lea rdx, ptr [rdx+rdx*2]
%lea rbx, ptr [rax+rdx*8]
%jz 0x7fd16901d96f
@1650
%test r14, r14
%jnz 0x7fd16901e2d8
1648
@1651
%cmp rax, rdi
%jnb 0x7fd16901db88
@1652
%xor r12d, r12d
%xor ebx, ebx
%jmp 0x7fd16901e278
1651
1652
@1653
%mov rsi, qword ptr [rax+0x8]
%mov edx, esi
%cmp rdx, 0x25
%jnz 0x7fd16901e250
@1654
%test rbx, rbx
%mov r12, rax
%jnz 0x7fd16901e26b
@1655
%mov rbx, rax
%jmp 0x7fd16901e26b
1653
@1656
%mov rcx, qword ptr [rax]
%add rcx, r14
%cmp rdx, 0x7
%jnz 0x7fd16901e298
@1657
%mov rdx, qword ptr [r10+0x3e0]
%test rdx, rdx
%jnz 0x7fd16901e2c0
@1658
%add qword ptr [rcx], r14
%add rax, 0x18
%cmp rdi, rax
%jbe 0x7fd16901db40
1656
1657
1658
1653
1656
1657
1658
1653
1656
1657
1658
1653
1656
1657
1658
1653
1656
1657
1658
1653
1656
1657
1658
1653
1656
1657
1658
1653
1654
1655
@1659
%add rax, 0x18
%cmp rdi, rax
%jbe 0x7fd16901db40
@1660
%mov rsi, qword ptr [rax+0x8]
%mov edx, esi
%cmp rdx, 0x25
%jnz 0x7fd16901e250
@1661
%test rbx, rbx
%mov r12, rax
%jnz 0x7fd16901e26b
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
1660
1661
1659
@1662
%test rbx, rbx
%jz 0x7fd16901db88
@1663
%cmp rbx, r12
%jnbe 0x7fd16901db88
@1664
%mov edi, dword ptr [rbp-0xd8]
%mov r13, r10
%test edi, edi
%jnz 0x7fd16901e8ed
1662
1663
1664
@1665
%nop dword ptr [rax+rax*1], eax
%cmp dword ptr [rbx+0x8], 0x25
%jnz 0x7fd16901db79
@1666
%mov r15, qword ptr [rbx]
%mov rax, qword ptr [rbx+0x10]
%add rax, qword ptr [r13]
%call rax
1665
1666
@1667
%mov rcx, qword ptr [rip+0x34c1e1]
%lea rax, ptr [rip+0x1c842]
%mov edx, dword ptr [rcx+0xb4]
%test edx, 0x80000
%jnz 0x7fd155798ce5
@1668
%mov eax, edx
%and eax, 0x101000
%cmp eax, 0x1000
%jz 0x7fd155798cf0
@1669
%test dh, 0x8
%jnz 0x7fd155798d20
1667
1668
1669
@1670
%test byte ptr [rcx+0x85], 0x2
%lea rdx, ptr [rip+0xefda2]
%lea rax, ptr [rip+0xefd3b]
%cmovnz rax, rdx
%ret 
1670
@1671
%add r15, r14
%mov qword ptr [r15], rax
%add rbx, 0x18
%cmp rbx, r12
%jbe 0x7fd16901db60
@1672
%mov r10, r13
%nop dword ptr [rax], eax
%add qword ptr [rbp-0xc0], 0x20
%mov rax, qword ptr [rbp-0xc0]
%cmp rax, qword ptr [rbp-0xf0]
%jnz 0x7fd16901d902
@1673
%mov eax, dword ptr [rbp-0xd4]
%mov r15, r10
%test eax, eax
%jnz 0x7fd16901edb3
1671
@1674
%cmp dword ptr [rbx+0x8], 0x25
%jnz 0x7fd16901db79
@1675
%mov r15, qword ptr [rbx]
%mov rax, qword ptr [rbx+0x10]
%add rax, qword ptr [r13]
%call rax
1674
1675
@1676
%mov rdx, qword ptr [rip+0x34d111]
%lea rax, ptr [rip+0x18e22]
%test byte ptr [rdx+0xb4], 0x10
%jnz 0x7fd155797d6d
@1677
%test byte ptr [rdx+0x79], 0x2
%lea rax, ptr [rip+0xac7e]
%lea rdx, ptr [rip+0xdf397]
%cmovnz rax, rdx
%ret 
1676
@1678
%ret 
1678
1671
1674
1675
@1679
%mov rdx, qword ptr [rip+0x34bf01]
%lea rax, ptr [rip+0xec022]
%mov ecx, dword ptr [rdx+0xb4]
%test cl, 0x40
%jnz 0x7fd155798f95
@1680
%mov edx, dword ptr [rdx+0x78]
%test edx, 0x100000
%jz 0x7fd155798f80
@1681
%and ch, 0x2
%lea rax, ptr [rip+0xe7572]
%jz 0x7fd155798f95
1679
@1682
%ret 
1682
1671
1674
1675
@1683
%mov rdx, qword ptr [rip+0x34d6c1]
%lea rax, ptr [rip+0x1bd92]
%test byte ptr [rdx+0xb4], 0x10
%jnz 0x7fd1557977bd
@1684
%test byte ptr [rdx+0x79], 0x2
%lea rax, ptr [rip+0x1bbbe]
%lea rdx, ptr [rip+0x14227]
%cmovnz rax, rdx
%ret 
1683
@1685
%ret 
1685
1671
1674
1675
@1686
%mov rax, qword ptr [rip+0x34d0e1]
%lea rdx, ptr [rip+0xf0642]
%mov eax, dword ptr [rax+0xb4]
%and eax, 0x20c00
%cmp eax, 0xc00
%lea rax, ptr [rip+0x1359b]
%cmovz rax, rdx
%ret 
1686
1671
1674
1675
@1687
%lea rax, ptr [rip+0xe0de1]
%sub rsp, 0x28
%lea rcx, ptr [rip+0xe0ddb]
%mov edx, 0x5f
%mov qword ptr [rsp], rax
%mov rax, 0x103ae75f6
%mov qword ptr [rsp+0x8], rax
%mov eax, 0x50e3a8
%shl rax, 0x4
%add rcx, 0x1
%add rax, rdx
%mov rdx, rax
%shr rdx, 0x18
%and edx, 0xf0
%xor rax, rdx
%movzx edx, byte ptr [rcx]
%test dl, dl
%jnz 0x7fd1557cc9af
@1688
%and eax, 0xfffffff
%cmp rax, 0x3ae75f6
%jnz 0x7fd1557cca09
@1689
%lea rdi, ptr [rip+0xe27f0]
%mov rsi, rsp
%mov qword ptr [rsp+0x10], 0x0
%call 0x7fd1558613b0
1687
@1690
%shl rax, 0x4
%add rcx, 0x1
%add rax, rdx
%mov rdx, rax
%shr rdx, 0x18
%and edx, 0xf0
%xor rax, rdx
%movzx edx, byte ptr [rcx]
%test dl, dl
%jnz 0x7fd1557cc9af
@1691
%and eax, 0xfffffff
%cmp rax, 0x3ae75f6
%jnz 0x7fd1557cca09
@1692
%lea rdi, ptr [rip+0xe27f0]
%mov rsi, rsp
%mov qword ptr [rsp+0x10], 0x0
%call 0x7fd1558613b0
1690
1690
1690
1691
1692
@1693
%sub rsp, 0x38
%mov r8, rsi
%mov rax, qword ptr fs:[0x28]
%mov qword ptr [rsp+0x28], rax
%xor eax, eax
%mov rax, qword ptr [rip+0x283a8a]
%mov rsi, qword ptr [rax+0x158]
%test rsi, rsi
%jz 0x7fd155861450
@1694
%pxor xmm0, xmm0
%lea rdx, ptr [rsp+0x10]
%mov qword ptr [rsp+0x20], 0x0
%lea rcx, ptr [rsi+0x388]
%xor r9d, r9d
%mov qword ptr [rsp+0x8], rdx
%lea rdx, ptr [rsp+0x8]
%movaps xmmword ptr [rsp+0x10], xmm0
%mov byte ptr [rsp+0x14], 0x20
%push 0x0
%push 0x0
%call qword ptr [rax+0x178]
1693
1694
@1695
%push r15
%push r14
%mov r14, rsi
%push r13
%push r12
%mov r12, rdx
%push rbp
%push rbx
%mov r13, r8
%sub rsp, 0x98
%movzx edx, byte ptr [rdi]
%mov qword ptr [rsp], rdi
%mov qword ptr [rsp+0x20], rcx
%mov dword ptr [rsp+0xc], r9d
%mov rbp, qword ptr [rsp+0xd8]
%test dl, dl
%jz 0x7fd16901c340
@1696
%mov rcx, rdi
%mov ebx, 0x1505
%nop dword ptr [rax+rax*1], eax
%mov rax, rbx
%add rcx, 0x1
%shl rax, 0x5
%add rbx, rax
%add rbx, rdx
%movzx edx, byte ptr [rcx]
%test dl, dl
%jnz 0x7fd16901c0f8
@1697
%mov ebx, ebx
%pxor xmm0, xmm0
%mov eax, 0xffffffff
%add qword ptr [rip+0x21d8b5], 0x1
%test r13, r13
%mov qword ptr [rsp+0x40], rax
%movaps xmmword ptr [rsp+0x50], xmm0
%jz 0x7fd16901c143
1695
1696
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1526
1527
1528
1529
1530
1531
1601
350
351
352
744
1602
1603
1604
1605
1535
350
351
352
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
@1698
%mov rcx, qword ptr [rsp+0x18]
%pop rdx
%xor edx, edx
%test rcx, rcx
%pop rsi
%jz 0x7fd15586142e
@1699
%test rax, rax
%jz 0x7fd15586142a
@1700
%mov rdx, qword ptr [rax]
%add rdx, qword ptr [rcx+0x8]
%mov rdi, qword ptr [rsp+0x28]
%xor rdi, qword ptr fs:[0x28]
%mov rax, rdx
%jnz 0x7fd155861454
1698
1699
1700
@1701
%add rsp, 0x38
%ret 
1701
@1702
%lea rdx, ptr [rip-0x8d]
%test rax, rax
%cmovz rax, rdx
%add rsp, 0x28
%ret 
1702
1671
1674
1675
@1703
%mov rax, qword ptr [rip+0x34a691]
%lea rdx, ptr [rip+0xe9f22]
%mov eax, dword ptr [rax+0xb4]
%and eax, 0x20c00
%cmp eax, 0xc00
%lea rax, ptr [rip+0xb4bb]
%cmovz rax, rdx
%ret 
1703
1671
1674
1675
@1704
%mov rax, qword ptr [rip+0x32da41]
%lea rdx, ptr [rip+0xd1fb2]
%mov eax, dword ptr [rax+0xb4]
%and eax, 0x20c00
%cmp eax, 0xc00
%lea rax, ptr [rip+0x12d0b]
%cmovz rax, rdx
%ret 
1704
1671
1674
1675
@1705
%mov rcx, qword ptr [rip+0x34c071]
%lea rax, ptr [rip+0x1c6b2]
%mov edx, dword ptr [rcx+0xb4]
%test edx, 0x80000
%jnz 0x7fd155798e55
@1706
%mov eax, edx
%and eax, 0x101000
%cmp eax, 0x1000
%jz 0x7fd155798e60
@1707
%test dh, 0x8
%jnz 0x7fd155798e90
1705
1706
1707
@1708
%test byte ptr [rcx+0x85], 0x2
%lea rdx, ptr [rip+0xefc12]
%lea rax, ptr [rip+0xefbab]
%cmovnz rax, rdx
%ret 
1708
1671
1674
1675
@1709
%mov rax, qword ptr [rip+0x34c241]
%mov ecx, dword ptr [rax+0xb4]
%mov edx, dword ptr [rax+0x78]
%mov eax, ecx
%and eax, 0x20400
%cmp eax, 0x400
%jz 0x7fd155798c58
@1710
%test edx, 0x80000
%lea rax, ptr [rip+0xf1385]
%jnz 0x7fd155798c52
@1711
%and dh, 0x2
%lea rax, ptr [rip+0xd629]
%lea rdx, ptr [rip+0xf4ca2]
%cmovnz rax, rdx
%ret 
1709
@1712
%test edx, 0x400000
%jz 0x7fd155798c2e
@1713
%and ch, 0x8
%lea rax, ptr [rip+0xebf36]
%jz 0x7fd155798c2e
@1714
%ret 
1712
1713
1714
1671
1674
1675
@1715
%mov rcx, qword ptr [rip+0x34d151]
%mov edx, dword ptr [rcx+0x78]
%test edx, 0x100000
%jz 0x7fd155797d22
@1716
%test byte ptr [rcx+0xb5], 0x2
%lea rax, ptr [rip+0xe77f0]
%jz 0x7fd155797d37
@1717
%and dh, 0x2
%lea rax, ptr [rip+0xc3f4]
%lea rdx, ptr [rip+0xcd28d]
%cmovnz rax, rdx
%ret 
1715
1716
@1718
%ret 
1718
1671
1674
1675
@1719
%mov rdx, qword ptr [rip+0x34d651]
%lea rax, ptr [rip+0xc662]
%test byte ptr [rdx+0xb4], 0x10
%jnz 0x7fd15579782d
@1720
%test byte ptr [rdx+0x79], 0x2
%lea rax, ptr [rip+0xb20e]
%lea rdx, ptr [rip+0xcc537]
%cmovnz rax, rdx
%ret 
1719
@1721
%ret 
1721
1671
1674
1675
@1722
%mov rcx, qword ptr [rip+0x34c111]
%lea rax, ptr [rip+0x1cb62]
%mov edx, dword ptr [rcx+0xb4]
%test edx, 0x80000
%jnz 0x7fd155798da4
@1723
%mov eax, edx
%and eax, 0x101000
%cmp eax, 0x1000
%jz 0x7fd155798db0
@1724
%mov eax, dword ptr [rcx+0x84]
%and eax, 0x200
%and dh, 0x4
%jz 0x7fd155798d90
1722
1723
1724
@1725
%test eax, eax
%lea rdx, ptr [rip+0xf01cd]
%lea rax, ptr [rip+0xf0166]
%cmovnz rax, rdx
%ret 
1725
1671
1674
1675
@1726
%mov rax, qword ptr [rip+0x32ed61]
%lea rdx, ptr [rip+0xd35a2]
%mov eax, dword ptr [rax+0xb4]
%and eax, 0x20c00
%cmp eax, 0xc00
%lea rax, ptr [rip+0x1438b]
%cmovz rax, rdx
%ret 
1726
1671
1674
1675
@1727
%mov rax, qword ptr [rip+0x34d1b1]
%lea rdx, ptr [rip+0xf0a72]
%mov eax, dword ptr [rax+0xb4]
%and eax, 0x20c00
%cmp eax, 0xc00
%lea rax, ptr [rip+0x13afb]
%cmovz rax, rdx
%ret 
1727
1671
1674
1675
@1728
%mov rax, qword ptr [rip+0x34d5e1]
%lea rdx, ptr [rip+0xec7f2]
%test byte ptr [rax+0x7a], 0x10
%lea rax, ptr [rip+0x1d9c7]
%cmovnz rax, rdx
%ret 
1728
1671
1674
1675
@1729
%mov rdx, qword ptr [rip+0x34beb1]
%lea rax, ptr [rip+0xed642]
%mov ecx, dword ptr [rdx+0xb4]
%test cl, 0x40
%jnz 0x7fd155798fe5
@1730
%mov edx, dword ptr [rdx+0x78]
%test edx, 0x100000
%jz 0x7fd155798fd0
@1731
%and ch, 0x2
%lea rax, ptr [rip+0xe90d2]
%jz 0x7fd155798fe5
1729
@1732
%ret 
1732
1671
1674
1675
1704
1671
1674
1675
@1733
%mov rdx, qword ptr [rip+0x34d611]
%lea rax, ptr [rip+0x18cf2]
%test byte ptr [rdx+0xb4], 0x10
%jnz 0x7fd15579786d
@1734
%test byte ptr [rdx+0x79], 0x2
%lea rax, ptr [rip+0x18b1e]
%lea rdx, ptr [rip+0xde0e7]
%cmovnz rax, rdx
%ret 
1733
@1735
%ret 
1735
1671
1674
1675
@1736
%mov rcx, qword ptr [rip+0x34bd71]
%lea rax, ptr [rip+0x1c3d2]
%mov edx, dword ptr [rcx+0xb4]
%test edx, 0x80000
%jnz 0x7fd155799155
@1737
%mov eax, edx
%and eax, 0x101000
%cmp eax, 0x1000
%jz 0x7fd155799160
@1738
%test dh, 0x8
%jnz 0x7fd155799190
1736
1737
1738
@1739
%test byte ptr [rcx+0x85], 0x2
%lea rdx, ptr [rip+0xef932]
%lea rax, ptr [rip+0xef8cb]
%cmovnz rax, rdx
%ret 
1739
1671
1674
1675
@1740
%mov rcx, qword ptr [rip+0x32c791]
%lea rax, ptr [rip+0xd15a2]
%mov edx, dword ptr [rcx+0xb4]
%and edx, 0x20c00
%cmp edx, 0xc00
%jz 0x7fd1557b86f8
@1741
%test byte ptr [rcx+0x7a], 0x8
%lea rax, ptr [rip+0x12473]
%lea rdx, ptr [rip+0x1224c]
%cmovnz rax, rdx
%ret 
1740
@1742
%ret 
1742
1671
1674
1675
@1743
%mov rax, qword ptr [rip+0x32d991]
%mov edx, dword ptr [rax+0xb4]
%lea rax, ptr [rip-0x1c94]
%mov ecx, edx
%and ecx, 0x20c00
%cmp ecx, 0xc00
%jz 0x7fd1557b74f0
@1744
%ret 
1743
@1745
%and edx, 0x101000
%lea rax, ptr [rip+0xd19c3]
%cmp edx, 0x1000
%lea rdx, ptr [rip+0xd5ec6]
%cmovz rax, rdx
%ret 
1745
1671
1674
1675
1743
1745
1671
1674
1675
@1746
%mov rax, qword ptr [rip+0x34d0b1]
%lea rdx, ptr [rip+0xec402]
%test byte ptr [rax+0x7a], 0x10
%lea rax, ptr [rip+0x1d537]
%cmovnz rax, rdx
%ret 
1746
1671
1674
1675
@1747
%mov rax, qword ptr [rip+0x34d691]
%mov edx, dword ptr [rax+0xb4]
%lea rax, ptr [rip+0xf07cc]
%mov ecx, edx
%and ecx, 0x20c00
%cmp ecx, 0xc00
%jz 0x7fd1557977f9
@1748
%and edx, 0x4
%lea rax, ptr [rip+0x13712]
%lea rdx, ptr [rip+0xf5ddb]
%cmovnz rax, rdx
%ret 
1747
@1749
%ret 
1749
1671
1674
1675
@1750
%mov rax, qword ptr [rip+0x34d1e1]
%lea rdx, ptr [rip+0xf0912]
%mov eax, dword ptr [rax+0xb4]
%and eax, 0x20c00
%cmp eax, 0xc00
%lea rax, ptr [rip+0x1398b]
%cmovz rax, rdx
%ret 
1750
1671
1674
1675
@1751
%mov rax, qword ptr [rip+0x342791]
%lea rdx, ptr [rip+0xe2162]
%mov eax, dword ptr [rax+0xb4]
%and eax, 0x20c00
%cmp eax, 0xc00
%lea rax, ptr [rip+0x37bb]
%cmovz rax, rdx
%ret 
1751
1671
1674
1675
@1752
%mov rdx, qword ptr [rip+0x34be61]
%lea rax, ptr [rip+0xebf92]
%mov ecx, dword ptr [rdx+0xb4]
%test cl, 0x40
%jnz 0x7fd155799035
@1753
%mov edx, dword ptr [rdx+0x78]
%test edx, 0x100000
%jz 0x7fd155799020
@1754
%and ch, 0x2
%lea rax, ptr [rip+0xe74e2]
%jz 0x7fd155799035
1752
@1755
%ret 
1755
1671
1674
1675
@1756
%mov rax, qword ptr [rip+0x34c271]
%lea rdx, ptr [rip+0xeb832]
%mov eax, dword ptr [rax+0xb4]
%and eax, 0x20c00
%cmp eax, 0xc00
%lea rax, ptr [rip+0xcd6b]
%cmovz rax, rdx
%ret 
1756
1671
1674
1675
@1757
%mov rax, qword ptr [rip+0x32dfa1]
%lea rdx, ptr [rip+0xd2c02]
%mov eax, dword ptr [rax+0xb4]
%and eax, 0x20c00
%cmp eax, 0xc00
%lea rax, ptr [rip+0x13d2b]
%cmovz rax, rdx
%ret 
1757
1671
1674
1675
@1758
%mov rax, qword ptr [rip+0x34ce01]
%lea rdx, ptr [rip+0xec2a2]
%test byte ptr [rax+0x7a], 0x10
%lea rax, ptr [rip+0x1d327]
%cmovnz rax, rdx
%ret 
1758
1671
1674
1675
@1759
%mov rdx, qword ptr [rip+0x34bf31]
%lea rax, ptr [rip+0x192d2]
%test byte ptr [rdx+0xb4], 0x10
%jnz 0x7fd155798f4d
@1760
%test byte ptr [rdx+0x79], 0x2
%lea rax, ptr [rip+0x9a3e]
%lea rdx, ptr [rip+0xe2547]
%cmovnz rax, rdx
%ret 
1759
@1761
%ret 
1761
1671
1674
1675
@1762
%mov rdx, qword ptr [rip+0x34bf61]
%lea rax, ptr [rip+0x18c52]
%test byte ptr [rdx+0xb4], 0x10
%jnz 0x7fd155798f1d
@1763
%test byte ptr [rdx+0x79], 0x2
%lea rax, ptr [rip+0x1754e]
%lea rdx, ptr [rip+0xe0d67]
%cmovnz rax, rdx
%ret 
1762
@1764
%ret 
1764
1671
1674
1675
@1765
%mov rax, qword ptr [rip+0x34a661]
%lea rdx, ptr [rip+0xed9d2]
%mov eax, dword ptr [rax+0xb4]
%and eax, 0x20c00
%cmp eax, 0xc00
%lea rax, ptr [rip+0x1090b]
%cmovz rax, rdx
%ret 
1765
1671
1674
1675
@1766
%mov rdx, qword ptr [rip+0x34be11]
%lea rax, ptr [rip+0xed5b2]
%mov ecx, dword ptr [rdx+0xb4]
%test cl, 0x40
%jnz 0x7fd155799085
@1767
%mov edx, dword ptr [rdx+0x78]
%test edx, 0x100000
%jz 0x7fd155799070
@1768
%and ch, 0x2
%lea rax, ptr [rip+0xe9042]
%jz 0x7fd155799085
1766
@1769
%ret 
1769
1671
1674
1675
1726
1671
1674
1675
1727
1671
1674
1675
@1770
%lea rax, ptr [rip+0xe0d01]
%sub rsp, 0x28
%lea rcx, ptr [rip+0xe0cfb]
%mov edx, 0x5f
%mov qword ptr [rsp], rax
%mov rax, 0x103ae75f6
%mov qword ptr [rsp+0x8], rax
%mov eax, 0x50e3a8
%shl rax, 0x4
%add rcx, 0x1
%add rax, rdx
%mov rdx, rax
%shr rdx, 0x18
%and edx, 0xf0
%xor rax, rdx
%movzx edx, byte ptr [rcx]
%test dl, dl
%jnz 0x7fd1557cca8f
@1771
%and eax, 0xfffffff
%cmp rax, 0x3ae75f6
%jnz 0x7fd1557ccae9
@1772
%lea rdi, ptr [rip+0xe271c]
%mov rsi, rsp
%mov qword ptr [rsp+0x10], 0x0
%call 0x7fd1558613b0
1770
@1773
%shl rax, 0x4
%add rcx, 0x1
%add rax, rdx
%mov rdx, rax
%shr rdx, 0x18
%and edx, 0xf0
%xor rax, rdx
%movzx edx, byte ptr [rcx]
%test dl, dl
%jnz 0x7fd1557cca8f
@1774
%and eax, 0xfffffff
%cmp rax, 0x3ae75f6
%jnz 0x7fd1557ccae9
@1775
%lea rdi, ptr [rip+0xe271c]
%mov rsi, rsp
%mov qword ptr [rsp+0x10], 0x0
%call 0x7fd1558613b0
1773
1773
1773
1774
1775
1693
1694
1695
1696
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1601
350
351
352
1194
1195
1196
@1776
%pxor xmm0, xmm0
%movdqa xmm2, xmmword ptr [rdi]
%movdqa xmm1, xmmword ptr [rsi]
%pcmpeqb xmm0, xmm1
%pslldq xmm2, 0xd
%pcmpeqb xmm2, xmm1
%psubb xmm2, xmm0
%pmovmskb r9d, xmm2
%shr edx, cl
%shr r9d, cl
%sub edx, r9d
%jnz 0x7fd16902f755
@1777
%movdqa xmm3, xmmword ptr [rdi]
%pxor xmm0, xmm0
%mov rcx, 0x10
%mov r9d, 0x3
%lea r10, ptr [rdi+0x3]
%and r10, 0xfff
%sub r10, 0x1000
%nop word ptr [rax+rax*1], ax
%add r10, 0x10
%jnle 0x7fd16902e810
@1778
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%movdqa xmm4, xmm2
%psrldq xmm3, 0x3
%pslldq xmm2, 0xd
%por xmm2, xmm3
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
1776
1777
1778
1301
1302
1602
1603
1604
1605
1535
350
351
352
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1698
1699
1700
1701
@1779
%lea rdx, ptr [rip-0xad]
%test rax, rax
%cmovz rax, rdx
%add rsp, 0x28
%ret 
1779
1671
1674
1675
@1780
%mov rcx, qword ptr [rip+0x34c1e1]
%lea rax, ptr [rip+0x1c842]
%mov edx, dword ptr [rcx+0xb4]
%test edx, 0x80000
%jnz 0x7fd155798ce5
@1781
%mov eax, edx
%and eax, 0x101000
%cmp eax, 0x1000
%jz 0x7fd155798cf0
@1782
%test dh, 0x8
%jnz 0x7fd155798d20
1780
1781
1782
1670
1671
1672
1673
@1783
%or byte ptr [r15+0x314], 0x4
%cmp qword ptr [rbp-0xf8], 0x0
%jnz 0x7fd16901ed86
@1784
%mov rax, qword ptr [r15+0x460]
%test rax, rax
%jz 0x7fd16901dc11
@1785
%mov rsi, qword ptr [r15+0x458]
%add rsi, qword ptr [r15]
%mov rdx, qword ptr [rip+0x21ab90]
%mov rdi, rsi
%neg rdx
%add rsi, rax
%and rdi, rdx
%and rsi, rdx
%cmp rdi, rsi
%jz 0x7fd16901dc11
1783
1784
1785
@1786
%sub rsi, rdi
%mov edx, 0x1
%call 0x7fd16902dff0
1786
1058
1059
1060
@1787
%test eax, eax
%js 0x7fd16901f2c2
@1788
%lea rsp, ptr [rbp-0x28]
%pop rbx
%pop r12
%pop r13
%pop r14
%pop r15
%pop rbp
%ret 
1787
1788
@1789
%cmp qword ptr [r13+0x428], 0x0
%jz 0x7fd1690152ab
@1790
%cmp byte ptr [rip+0x224ce0], 0x0
%jz 0x7fd1690152ab
@1791
%mov rdi, r13
%call 0x7fd169024970
1789
1790
1791
@1792
%push r12
%mov r12, rdi
%push rbp
%push rbx
%mov rbx, qword ptr [rip+0x21560a]
%mov rbp, qword ptr [rdi+0x448]
%jmp 0x7fd16902499f
1792
@1793
%mov rax, qword ptr [rbx]
%cmp rax, rbp
%jbe 0x7fd169024990
@1794
%mov rax, qword ptr [rip+0x21560a]
%lea rdx, ptr [rax+0x1]
%shl rbp, 0x4
%add rbx, rbp
%mov qword ptr [rbx+0x18], r12
%mov qword ptr [rbx+0x10], rdx
%pop rbx
%pop rbp
%pop r12
%ret 
1793
1794
@1795
%jmp 0x7fd1690152ab
1795
1439
1440
1441
1442
1443
1444
1445
1446
@1796
%xor r13d, r13d
%test eax, eax
%jz 0x7fd16901d7d4
@1797
%lea rdx, ptr [rip+0x12d93]
%jmp 0x7fd16901ea35
1796
@1798
%cmp qword ptr [r15+0xf0], 0x0
%mov qword ptr [rbp-0xf8], 0x0
%jnz 0x7fd16901e926
@1799
%mov rax, qword ptr [r15+0x68]
%cmp qword ptr [r15+0xf8], 0x0
%mov rax, qword ptr [rax+0x8]
%mov qword ptr [rbp-0xd0], rax
%jz 0x7fd16901dc60
@1800
%test r13d, r13d
%jnz 0x7fd16901e4e0
1798
1799
1800
1461
1462
1463
1464
1467
@1801
%cmp rax, rdi
%jnz 0x7fd16901d8b6
@1802
%add rdx, rsi
%mov qword ptr [rbp-0x68], rdx
%jmp 0x7fd16901d8db
1801
1802
@1803
%lea rax, ptr [rbp-0x70]
%and r12d, 0x2000000
%mov r10, r15
%mov qword ptr [rbp-0xc0], rax
%lea rax, ptr [rbp-0x30]
%mov dword ptr [rbp-0xd8], r12d
%mov qword ptr [rbp-0xf0], rax
%mov rsi, qword ptr [rbp-0xc0]
%mov r14, qword ptr [r10]
%mov rax, qword ptr [rsi]
%mov rdi, qword ptr [rsi+0x8]
%mov r8d, dword ptr [rsi+0x18]
%add rdi, rax
%test r8d, r8d
%mov qword ptr [rbp-0x98], rdi
%jnz 0x7fd16901e238
@1804
%mov rdx, qword ptr [r10+0x70]
%lea rdi, ptr [rip+0x21c0bb]
%cmp r10, rdi
%mov rsi, qword ptr [rdx+0x8]
%mov qword ptr [rbp-0xa8], rsi
%mov rsi, qword ptr [rbp-0xc0]
%mov rdx, qword ptr [rsi+0x10]
%lea rdx, ptr [rdx+rdx*2]
%lea rbx, ptr [rax+rdx*8]
%jz 0x7fd16901d96f
@1805
%test r14, r14
%jnz 0x7fd16901e2d8
1803
1804
1805
1473
1475
1476
1478
1479
1480
1478
1479
1480
1478
1481
1482
1483
1484
1485
1486
1487
1488
1489
1490
1491
1492
1493
1494
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1518
1519
1520
1509
1510
1512
1513
1514
1515
1518
1519
1520
1509
1510
1512
1513
1514
1515
1518
1617
1618
1550
1619
1620
1621
1622
1623
1626
1627
1629
1630
1558
1559
1560
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1590
711
350
351
353
354
355
712
359
360
715
716
718
350
351
353
354
355
712
359
360
719
721
723
1591
1592
1593
1594
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1601
350
351
353
354
740
712
713
714
1301
744
1602
1603
1604
1605
1535
350
351
353
354
355
712
713
714
1301
1302
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1518
1519
1520
1509
1510
1512
1513
1514
1515
1518
1519
1520
1509
1510
1512
1513
1514
1515
1518
1617
1618
1550
1619
1620
1621
1622
1623
1626
1627
1629
1630
1558
1559
1560
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1518
1519
1520
1509
1510
1512
1513
1514
1515
1518
1519
1520
1509
1510
1512
1513
1514
1515
1518
1617
1618
1550
1619
1620
1621
1622
1623
1626
1627
1629
1630
1558
1559
1560
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1590
711
350
351
353
354
355
712
359
360
715
716
718
350
351
353
354
355
712
359
360
719
721
723
1591
1592
1593
1594
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1601
350
351
352
744
1602
1603
1604
1605
1535
350
351
353
354
355
712
713
714
1301
1302
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
@1806
%cmp r12, 0x5
%mov eax, 0x1
%jnz 0x7fd16901da95
@1807
%or eax, 0x2
%xor r9d, r9d
%jmp 0x7fd16901daa4
1806
1493
1494
1495
1496
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1590
711
350
351
353
354
355
712
359
360
715
716
718
350
351
353
354
355
712
359
360
719
721
723
1591
1592
1593
1594
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1601
350
351
352
744
1602
1603
1604
1605
1535
350
351
353
354
355
712
713
714
1301
1302
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1562
1563
@1808
%cmp r14, r11
%jz 0x7fd16901e180
@1809
%movzx eax, byte ptr [r11+0x314]
%test al, 0x3
%jz 0x7fd16901e180
@1810
%test al, 0x4
%jnz 0x7fd16901e180
1808
1809
1810
@1811
%mov qword ptr [rbp-0x100], r11
%call r10
1811
@1812
%mov rcx, qword ptr [rip+0x34c111]
%lea rax, ptr [rip+0x1cb62]
%mov edx, dword ptr [rcx+0xb4]
%test edx, 0x80000
%jnz 0x7fd155798da4
@1813
%mov eax, edx
%and eax, 0x101000
%cmp eax, 0x1000
%jz 0x7fd155798db0
@1814
%mov eax, dword ptr [rcx+0x84]
%and eax, 0x200
%and dh, 0x4
%jz 0x7fd155798d90
1812
1813
1814
1725
@1815
%mov r11, qword ptr [rbp-0x100]
%mov r10, rax
%jmp 0x7fd16901db1c
1815
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1806
1493
1494
1495
1496
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1590
711
350
351
353
354
355
712
359
360
715
716
718
350
351
353
354
355
712
359
360
719
721
723
1591
1592
1593
1594
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1528
1529
1530
1531
1601
350
351
352
744
1602
1603
1604
1605
1535
350
351
353
354
355
712
713
714
1301
1302
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1567
1645
1648
1649
1650
1473
1474
1481
1482
1645
1646
1647
@1816
%mov rax, qword ptr [r15+0x460]
%test rax, rax
%jz 0x7fd16901dc11
@1817
%mov rsi, qword ptr [r15+0x458]
%add rsi, qword ptr [r15]
%mov rdx, qword ptr [rip+0x21ab90]
%mov rdi, rsi
%neg rdx
%add rsi, rax
%and rdi, rdx
%and rsi, rdx
%cmp rdi, rsi
%jz 0x7fd16901dc11
@1818
%sub rsi, rdi
%mov edx, 0x1
%call 0x7fd16902dff0
1816
1817
1818
1058
1059
1060
1787
1788
1789
1439
@1819
%rdtsc 
%shl rdx, 0x20
%mov eax, eax
%or rax, rdx
%sub rax, rbx
%xor ebx, ebx
%cmp qword ptr [rip+0x22459e], 0x0
%mov qword ptr [rip+0x224bc7], rax
%jz 0x7fd169015398
@1820
%call 0x7fd169023140
1819
@1821
%cmp byte ptr [rbp-0x1c0], 0x0
%jnz 0x7fd169015505
@1822
%cmp qword ptr [rip+0x224bd3], 0x0
%jz 0x7fd169015505
@1823
%add qword ptr [rip+0x224bfd], 0x1
%mov r15, qword ptr [rbp-0x1b0]
%mov rdi, r15
%call 0x7fd169024160
1821
1822
1823
@1824
%push r15
%push r14
%mov rax, rdi
%push r13
%push r12
%push rbp
%push rbx
%sub rsp, 0x38
%test rdi, rdi
%mov qword ptr [rsp+0x28], rdi
%jz 0x7fd169024338
@1825
%mov rax, qword ptr [rdi+0x8]
%mov r9, qword ptr [rip+0x215df6]
%cmp qword ptr [rax-0x10], r9
%mov qword ptr [rsp+0x18], rax
%jb 0x7fd169024351
@1826
%mov rax, qword ptr [rip+0x215de8]
%xor r14d, r14d
%mov r15, r14
%mov qword ptr [rsp+0x20], rax
%xor eax, eax
%nop dword ptr [rax], eax
%mov rsi, qword ptr [rsp+0x20]
%xor ebx, ebx
%test rax, rax
%setz bl
%lea rcx, ptr [rax+rbx*1]
%mov rdi, qword ptr [rsi]
%mov qword ptr [rsp+0x8], rcx
%cmp rbx, rdi
%jnb 0x7fd169024347
1824
1825
1826
@1827
%cmp r9, rcx
%jb 0x7fd16902434c
@1828
%mov rdx, rbx
%lea r12, ptr [rax+rbx*1+0x1]
%shl rdx, 0x4
%lea r13, ptr [rsi+rdx*1+0x18]
%sub r12, rcx
%mov qword ptr [rsp+0x10], r12
%mov r14, r13
%mov r13, r15
%mov r15, rcx
%jmp 0x7fd16902420d
1827
1828
@1829
%mov rax, qword ptr [r14]
%test rax, rax
%jz 0x7fd1690242c6
@1830
%mov rdx, qword ptr [r14-0x8]
%cmp rdx, qword ptr [rip+0x215d94]
%jnbe 0x7fd1690243cc
@1831
%mov rcx, qword ptr [rax+0x448]
%cmp r13, rdx
%mov rsi, qword ptr [rax+0x440]
%cmovb r13, rdx
%mov rdx, rcx
%lea r11, ptr [rsi+0x1]
%shl rdx, 0x4
%add rdx, qword ptr [rsp+0x18]
%cmp r11, 0x1
%mov qword ptr [rdx], 0xffffffffffffffff
%mov qword ptr [rdx+0x8], 0x0
%jbe 0x7fd1690242c6
1829
1830
1831
@1832
%cmp rcx, r15
%jnz 0x7fd16902445a
@1833
%mov r12, qword ptr [rax+0x428]
%mov rbp, qword ptr [rax+0x420]
%cmp r12, rbp
%jb 0x7fd16902441c
@1834
%cmp rsi, r12
%jb 0x7fd16902443b
1832
1833
1834
@1835
%mov rdi, qword ptr [rsp+0x28]
%sub rdi, rsi
%mov rsi, qword ptr [rax+0x418]
%mov qword ptr [rdx], rdi
%mov rdx, rbp
%call 0x7fd169030830
1835
565
566
567
568
@1836
%mov rdx, r12
%mov rdi, rax
%xor esi, esi
%sub rdx, rbp
%call 0x7fd169030a20
1836
621
622
1080
1082
1083
1084
@1837
%mov rax, qword ptr [rsp+0x20]
%mov r9, qword ptr [rip+0x215cbd]
%mov rdi, qword ptr [rax]
%lea rax, ptr [rbx+0x1]
%sub rax, qword ptr [rsp+0x8]
%add rax, r15
%add r15, qword ptr [rsp+0x10]
%cmp rax, rdi
%jb 0x7fd169024200
@1838
%mov r14, r15
%mov r15, r13
%mov rax, r14
%cmp r9, rax
%jbe 0x7fd16902434c
@1839
%mov rbx, qword ptr [rsp+0x20]
%mov rbx, qword ptr [rbx+0x8]
%test rbx, rbx
%mov qword ptr [rsp+0x20], rbx
%jnz 0x7fd1690241b0
1837
@1840
%add r14, 0x10
%cmp r15, r9
%jnbe 0x7fd169024328
@1841
%mov rax, qword ptr [r14]
%test rax, rax
%jz 0x7fd1690242c6
@1842
%mov rdx, qword ptr [r14-0x8]
%cmp rdx, qword ptr [rip+0x215d94]
%jnbe 0x7fd1690243cc
1840
@1843
%mov r14, r13
%mov rax, qword ptr [rsp+0x18]
%mov qword ptr [rax], r14
%mov rax, qword ptr [rsp+0x28]
%add rsp, 0x38
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
1843
@1844
%cmp byte ptr [rip+0x224c27], 0x0
%jnz 0x7fd169015449
@1845
%mov rsi, r15
%mov eax, 0x9e
%mov edi, 0x1002
%mov qword ptr [rsi], r15
%mov qword ptr [rsi+0x10], r15
%syscall 
1844
@1846
%mov rax, qword ptr [rip+0x224598]
%cmp qword ptr [rip+0x223451], rax
%jnz 0x7fd1690154e6
@1847
%test bl, bl
%jnz 0x7fd1690154ab
@1848
%cmp byte ptr [rbp-0x1b8], 0x0
%jz 0x7fd1690154ab
1846
1847
1848
@1849
%rdtsc 
%and byte ptr [rip+0x224891], 0xfb
%mov eax, eax
%shl rdx, 0x20
%mov rsi, qword ptr [r14+0x380]
%or rdx, rax
%lea rdi, ptr [rip+0x224566]
%mov rbx, rdx
%xor ecx, ecx
%xor edx, edx
%call 0x7fd16901d750
1849
1443
1444
1445
1446
1447
1448
1449
1450
1451
@1850
%mov rcx, qword ptr [rax+0x8]
%mov rax, qword ptr [r15+0x80]
%mov rdx, qword ptr [rax+0x8]
%mov qword ptr [rbp-0x98], rcx
%mov rax, qword ptr [r15+0x180]
%movq xmm0, qword ptr [rbp-0x98]
%mov qword ptr [rbp-0x98], rdx
%lea rdi, ptr [rcx+rdx*1]
%movhps xmm0, qword ptr [rbp-0x98]
%test rax, rax
%movaps xmmword ptr [rbp-0x70], xmm0
%jz 0x7fd16901d87c
@1851
%mov rax, qword ptr [rax+0x8]
%mov qword ptr [rbp-0x60], rax
%cmp qword ptr [r15+0xe0], 0x0
%jz 0x7fd16901d8db
@1852
%mov rax, qword ptr [r15+0xf8]
%mov rsi, qword ptr [r15+0x50]
%mov rax, qword ptr [rax+0x8]
%mov rsi, qword ptr [rsi+0x8]
%lea r8, ptr [rax+rsi*1]
%cmp r8, rdi
%jnz 0x7fd16901d8ad
1850
1851
1852
1467
1801
1802
1803
1804
1481
1482
1483
1484
1485
1486
1487
1488
1489
1490
1491
1492
1493
1494
1495
1496
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1528
1529
1530
1531
1532
1533
1534
1535
350
351
352
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1586
1587
1588
1589
1495
1496
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1601
350
351
352
744
1602
1603
1604
1605
1535
350
351
353
354
355
@1853
%pxor xmm0, xmm0
%movdqa xmm2, xmmword ptr [rdi]
%movdqa xmm1, xmmword ptr [rsi]
%pcmpeqb xmm0, xmm1
%pslldq xmm2, 0x3
%pcmpeqb xmm2, xmm1
%psubb xmm2, xmm0
%pmovmskb r9d, xmm2
%shr edx, cl
%shr r9d, cl
%sub edx, r9d
%jnz 0x7fd16902f755
@1854
%movdqa xmm3, xmmword ptr [rdi]
%pxor xmm0, xmm0
%mov rcx, 0x10
%mov r9d, 0xd
%lea r10, ptr [rdi+0xd]
%and r10, 0xfff
%sub r10, 0x1000
%nop word ptr [rax+rax*1], ax
%add r10, 0x10
%jnle 0x7fd16902f490
@1855
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%movdqa xmm4, xmm2
%psrldq xmm3, 0xd
%pslldq xmm2, 0x3
%por xmm2, xmm3
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
1853
1854
1855
1301
1302
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1806
1493
1494
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1601
350
351
353
354
355
1853
1854
1855
1301
1302
1602
1603
1604
1605
1535
350
351
352
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1806
1493
1494
1495
1496
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1601
350
353
354
740
@1856
%pxor xmm0, xmm0
%movdqa xmm2, xmmword ptr [rdi]
%movdqa xmm1, xmmword ptr [rsi]
%pcmpeqb xmm0, xmm1
%pslldq xmm2, 0xa
%pcmpeqb xmm2, xmm1
%psubb xmm2, xmm0
%pmovmskb r9d, xmm2
%shr edx, cl
%shr r9d, cl
%sub edx, r9d
%jnz 0x7fd16902f755
@1857
%movdqa xmm3, xmmword ptr [rdi]
%pxor xmm0, xmm0
%mov rcx, 0x10
%mov r9d, 0x6
%lea r10, ptr [rdi+0x6]
%and r10, 0xfff
%sub r10, 0x1000
%nop word ptr [rax+rax*1], ax
%add r10, 0x10
%jnle 0x7fd16902ebd0
@1858
%movdqa xmm1, xmmword ptr [rsi+rcx*1]
%movdqa xmm2, xmmword ptr [rdi+rcx*1]
%movdqa xmm4, xmm2
%psrldq xmm3, 0x6
%pslldq xmm2, 0xa
%por xmm2, xmm3
%pcmpeqb xmm0, xmm1
%pcmpeqb xmm1, xmm2
%psubb xmm1, xmm0
%pmovmskb edx, xmm1
%sub edx, 0xffff
%jnz 0x7fd16902f750
1856
1857
1858
1301
744
1602
1603
1604
1605
1535
350
351
353
354
355
1853
1854
1855
1301
1302
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1806
1493
1494
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1526
1527
1528
1529
1530
1531
1601
350
351
353
354
355
1191
1192
1193
1301
1302
1602
1603
1604
1605
1535
350
351
352
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1806
1493
1494
1495
1496
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1601
350
353
354
740
733
734
735
1301
744
1602
1603
1604
1605
1535
350
351
353
354
355
1853
1854
1855
1301
1302
1539
1540
1541
1544
1545
1615
1616
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1806
1493
1494
1495
1496
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1524
1529
1530
1531
1601
350
351
352
744
1602
1603
1604
1605
1535
350
351
353
354
355
1853
1854
1855
1301
1302
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1806
1493
1494
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1526
1527
1528
1529
1530
1531
1601
350
351
352
1194
1195
740
712
359
744
1602
1603
1604
1605
1535
350
351
352
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1569
1570
1571
1572
1573
1574
1584
1585
1806
1493
1494
1495
1496
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1515
1516
1517
1518
1519
1520
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1601
350
351
352
744
1602
1603
1604
1605
1535
350
351
352
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1558
1561
1564
1565
1566
1567
1645
1648
1649
1481
1482
1645
1646
1647
1816
1817
1818
1058
1059
1060
1787
1788
@1859
%rdtsc 
%shl rdx, 0x20
%mov eax, eax
%or rax, rdx
%sub rax, rbx
%add qword ptr [rip+0x224b55], rax
%call 0x7fd16902c080
1859
@1860
%ret 
1860
@1861
%cmp dword ptr [rip+0x223459], 0x0
%jnz 0x7fd16901551c
@1862
%xor esi, esi
%xor edi, edi
%call 0x7fd169021db0
1861
1862
639
642
969
971
@1863
%mov dword ptr [rax+0x18], 0x0
%mov rbx, rax
%call 0x7fd169021da0
1863
@1864
%ret 
1864
@1865
%nop
%call 0x7fd169029b90
1865
@1866
%mov rdi, qword ptr [rip+0x210521]
%lea rax, ptr [rdi-0x1]
%cmp rax, 0xfffffffffffffffd
%jbe 0x7fd169029ba8
@1867
%ret 
1866
@1868
%sub rsp, 0x8
%mov rsi, qword ptr [rip+0x2104f5]
%call 0x7fd16902dfd0
1868
@1869
%mov eax, 0xb
%syscall 
1869
@1870
%cmp rax, 0xfffffffffffff001
%jnb 0x7fd16902dfe0
@1871
%ret 
1870
1871
@1872
%mov qword ptr [rip+0x2104f5], 0x0
%add rsp, 0x8
%ret 
1872
@1873
%lea rsp, ptr [rbp-0x28]
%pop rbx
%pop r12
%pop r13
%pop r14
%pop r15
%pop rbp
%ret 
1873
@1874
%mov rax, qword ptr [rsp+0x40]
%add rsp, 0x58
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
1874
@1875
%mov rbx, rax
%rdtsc 
%shl rdx, 0x20
%mov eax, eax
%or rdx, rax
%sub rdx, qword ptr [rip+0x2255e3]
%test byte ptr [rip+0x22561c], 0x80
%mov qword ptr [rbp-0x38], rdx
%jnz 0x7fd169013390
@1876
%add rsp, 0x48
%mov rax, rbx
%pop rbx
%pop r12
%pop r13
%pop r14
%pop r15
%pop rbp
%ret 
1875
1876
@1877
%mov r12, rax
%mov eax, dword ptr [rip+0x226697]
%pop rdx
%lea rsp, ptr [rsp+rax*8]
%sub edx, eax
%push rdx
%mov rsi, rdx
%mov r13, rsp
%and rsp, 0xfffffffffffffff0
%mov rdi, qword ptr [rip+0x226fa6]
%lea rcx, ptr [r13+rdx*8+0x10]
%lea rdx, ptr [r13+0x8]
%xor ebp, ebp
%call 0x7fd169021630
1877
@1878
%push r15
%push r14
%mov r15, rdi
%push r13
%push r12
%mov r13, rcx
%push rbp
%push rbx
%mov ebp, esi
%mov r12, rdx
%sub rsp, 0x18
%mov rbx, qword ptr [rip+0x218370]
%mov r14, qword ptr [rdi+0x140]
%mov r8, qword ptr [rdi+0x148]
%test rbx, rbx
%jnz 0x7fd169021828
@1879
%test r14, r14
%jz 0x7fd169021675
@1880
%test r8, r8
%jnz 0x7fd1690217c0
1878
1879
@1881
%mov ebx, dword ptr [r15+0x2c0]
%nop dword ptr [rax], eax
%sub ebx, 0x1
%cmp ebx, 0xffffffff
%jz 0x7fd169021749
@1882
%mov rdx, qword ptr [r15+0x3b8]
%mov eax, ebx
%mov r14, qword ptr [rdx+rax*8]
%movzx eax, byte ptr [r14+0x314]
%test al, 0x8
%jnz 0x7fd169021680
@1883
%mov rsi, qword ptr [r14+0x8]
%or eax, 0x8
%mov byte ptr [r14+0x314], al
%movzx edx, byte ptr [rsi]
%test dl, dl
%jz 0x7fd169021818
1881
1882
1883
@1884
%mov rax, qword ptr [r14+0xa0]
%test rax, rax
%jz 0x7fd169021760
@1885
%test byte ptr [rip+0x21708b], 0x2
%jnz 0x7fd169021780
@1886
%mov rax, qword ptr [rax+0x8]
%add rax, qword ptr [r14]
%mov rdx, r13
%mov rsi, r12
%mov edi, ebp
%call rax
1884
@1887
%mov rcx, qword ptr [r14+0x108]
%test rcx, rcx
%jz 0x7fd169021680
@1888
%test byte ptr [rip+0x216fe9], 0x2
%jz 0x7fd1690216f8
@1889
%nop dword ptr [rax], eax
%test dl, dl
%jnz 0x7fd16902179c
1887
@1890
%sub ebx, 0x1
%cmp ebx, 0xffffffff
%jz 0x7fd169021749
@1891
%mov rdx, qword ptr [r15+0x3b8]
%mov eax, ebx
%mov r14, qword ptr [rdx+rax*8]
%movzx eax, byte ptr [r14+0x314]
%test al, 0x8
%jnz 0x7fd169021680
@1892
%mov rsi, qword ptr [r14+0x8]
%or eax, 0x8
%mov byte ptr [r14+0x314], al
%movzx edx, byte ptr [rsi]
%test dl, dl
%jz 0x7fd169021818
1890
1891
1892
1884
1885
1886
@1893
%push r13
%push r12
%mov r12, rdx
%push rbp
%push rbx
%mov rbp, rsi
%mov ebx, edi
%sub rsp, 0x28
%mov rax, qword ptr [rip+0x3c95ff]
%test rax, rax
%jz 0x7fd15571ba50
@1894
%mov eax, dword ptr [rax]
%test eax, eax
%jnz 0x7fd15571ba50
@1895
%mov dword ptr [rip+0x3c984a], 0x1
%mov rax, qword ptr [rip+0x3c954b]
%lea rcx, ptr [rip+0x191e09]
%mov dword ptr [rip+0x3ceb5e], ebx
%mov qword ptr [rip+0x3ceb4f], rbp
%mov edx, 0x5f
%mov qword ptr [rax], r12
%lea rax, ptr [rip+0x191de8]
%mov qword ptr [rsp], rax
%mov rax, 0x103ae75f6
%mov qword ptr [rsp+0x8], rax
%mov eax, 0x50e3a8
%shl rax, 0x4
%add rcx, 0x1
%add rax, rdx
%mov rdx, rax
%shr rdx, 0x18
%and edx, 0xf0
%xor rax, rdx
%movzx edx, byte ptr [rcx]
%test dl, dl
%jnz 0x7fd15571b998
1893
@1896
%mov rax, qword ptr [rip+0x3c9549]
%mov dword ptr [rip+0x3c973f], 0x0
%movzx edi, word ptr [rax]
%mov rax, qword ptr [rip+0x3c93ed]
%cmp word ptr [rax+0x50], di
%jz 0x7fd15571b956
@1897
%call 0x7fd155738b20
1896
@1898
%mov rax, qword ptr [rip+0x3c954b]
%lea rcx, ptr [rip+0x191e09]
%mov dword ptr [rip+0x3ceb5e], ebx
%mov qword ptr [rip+0x3ceb4f], rbp
%mov edx, 0x5f
%mov qword ptr [rax], r12
%lea rax, ptr [rip+0x191de8]
%mov qword ptr [rsp], rax
%mov rax, 0x103ae75f6
%mov qword ptr [rsp+0x8], rax
%mov eax, 0x50e3a8
%shl rax, 0x4
%add rcx, 0x1
%add rax, rdx
%mov rdx, rax
%shr rdx, 0x18
%and edx, 0xf0
%xor rax, rdx
%movzx edx, byte ptr [rcx]
%test dl, dl
%jnz 0x7fd15571b998
@1899
%and eax, 0xfffffff
%cmp rax, 0x3ae75f6
%jnz 0x7fd15571ba7f
@1900
%mov r13, rsp
%lea rdi, ptr [rip+0x191d9d]
%mov qword ptr [rsp+0x10], 0x0
%mov rsi, r13
%call 0x7fd1558613b0
1898
@1901
%shl rax, 0x4
%add rcx, 0x1
%add rax, rdx
%mov rdx, rax
%shr rdx, 0x18
%and edx, 0xf0
%xor rax, rdx
%movzx edx, byte ptr [rcx]
%test dl, dl
%jnz 0x7fd15571b998
@1902
%and eax, 0xfffffff
%cmp rax, 0x3ae75f6
%jnz 0x7fd15571ba7f
@1903
%mov r13, rsp
%lea rdi, ptr [rip+0x191d9d]
%mov qword ptr [rsp+0x10], 0x0
%mov rsi, r13
%call 0x7fd1558613b0
1901
1901
1901
1902
1903
1693
1694
1695
1696
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1601
350
353
354
355
356
357
358
1301
1302
1602
1603
1604
1605
1535
350
351
352
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1698
1699
1700
1701
@1904
%lea rdx, ptr [rip+0x100693]
%lea rdi, ptr [rip+0x191d93]
%test rax, rax
%mov rsi, r13
%cmovz rax, rdx
%xor rax, qword ptr fs:[0x30]
%rol rax, 0x11
%mov qword ptr [rip+0x3cea9e], rax
%call 0x7fd1558613b0
1904
1693
1694
1695
1696
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1498
1499
1500
1501
1502
1503
1504
1505
1506
1507
1509
1510
1512
1513
1514
1521
1522
1523
1526
1527
1528
1529
1530
1531
1601
350
351
352
744
1602
1603
1604
1605
1535
350
351
352
744
1539
1540
1541
1544
1545
1546
1547
1549
1550
1551
1552
1553
1554
1555
1556
1557
1698
1699
1700
1701
@1905
%mov rdx, r12
%mov rsi, rbp
%mov edi, ebx
%xor rax, qword ptr fs:[0x30]
%rol rax, 0x11
%mov qword ptr [rip+0x3cea85], rax
%call 0x7fd15581b6f0
1905
@1906
%test rsi, rsi
%jz 0x7fd15581b740
@1907
%push rbp
%push rbx
%sub rsp, 0x8
%mov rbp, qword ptr [rsi]
%test rbp, rbp
%jz 0x7fd15581b735
@1908
%mov rbx, rsi
%mov rdi, rbp
%mov esi, 0x2f
%call 0x7fd15571b270
1906
1907
1908
@1909
%jmp qword ptr [rip+0x3c9eea]
1909
@1910
%movd xmm4, esi
%mov ecx, edi
%vpbroadcastb ymm4, xmm4
%vpxor ymm0, ymm0, ymm0
%and ecx, 0x3f
%cmp ecx, 0x20
%jnbe 0x7fd155888430
@1911
%vmovdqu ymm1, ymmword ptr [rdi]
%vpcmpeqb ymm2, ymm0, ymm1
%vpcmpeqb ymm3, ymm4, ymm1
%vpmovmskb ecx, ymm2
%vpmovmskb eax, ymm3
%add rdi, 0x20
%test eax, eax
%jnz 0x7fd155888410
@1912
%test ecx, ecx
%jnz 0x7fd155888580
1910
1911
@1913
%test ecx, ecx
%jnz 0x7fd155888555
@1914
%mov edx, eax
%mov rsi, rdi
%and rdi, 0xffffffffffffffe0
%jmp 0x7fd155888480
1913
@1915
%mov r8d, ecx
%sub r8d, 0x1
%xor r8d, ecx
%and eax, r8d
%test eax, eax
%jz 0x7fd155888580
@1916
%bsr eax, eax
%lea rax, ptr [rdi+rax*1-0x20]
%vzeroupper
%ret 
1915
1916
@1917
%lea rdx, ptr [rax+0x1]
%test rax, rax
%mov rax, qword ptr [rip+0x2c96cf]
%cmovnz rbp, rdx
%mov qword ptr [rax], rbp
%mov rax, qword ptr [rip+0x2c96a9]
%mov rdx, qword ptr [rbx]
%mov qword ptr [rax], rdx
%add rsp, 0x8
%pop rbx
%pop rbp
%ret 
1917
@1918
%call 0x7fd15572a8f0
1918
@1919
%mov rax, qword ptr [rip+0x3ba4d1]
%mov rcx, qword ptr [rip+0x3ba502]
%mov rax, qword ptr fs:[rax]
%mov rax, qword ptr [rax]
%mov rsi, qword ptr [rax+0x40]
%mov rdi, qword ptr [rax+0x48]
%mov rax, qword ptr [rax+0x58]
%lea rdx, ptr [rsi+0x100]
%add rax, 0x200
%mov qword ptr fs:[rcx], rdx
%mov rcx, qword ptr [rip+0x3ba5af]
%lea rdx, ptr [rdi+0x200]
%mov qword ptr fs:[rcx], rdx
%mov rdx, qword ptr [rip+0x3ba5e5]
%mov qword ptr fs:[rdx], rax
%ret 
1919
@1920
%add rsp, 0x28
%pop rbx
%pop rbp
%pop r12
%pop r13
%ret 
1920
@1921
%mov rcx, qword ptr [r14+0x108]
%test rcx, rcx
%jz 0x7fd169021680
@1922
%mov rax, qword ptr [r14+0x118]
%mov rdx, qword ptr [rax+0x8]
%mov rax, qword ptr [r14]
%add rax, qword ptr [rcx+0x8]
%shr rdx, 0x3
%test edx, edx
%mov r14, rax
%jz 0x7fd169021680
@1923
%sub edx, 0x1
%lea rax, ptr [rax+rdx*8+0x8]
%mov qword ptr [rsp], rax
%nop dword ptr [rax], eax
%mov rdx, r13
%mov rsi, r12
%mov edi, ebp
%call qword ptr [r14]
1921
1922
1923
@1924
%push r15
%push r14
%push r13
%push r12
%push rbp
%push rbx
%sub rsp, 0x18
%mov r12, qword ptr [rip+0x3c99d3]
%mov eax, dword ptr [r12+0x68]
%mov r15, qword ptr [r12+0xb8]
%mov r14, qword ptr [r12+0xc0]
%cmp eax, 0x1
%jz 0x7fd15571b56a
@1925
%cmp eax, 0x2
%jz 0x7fd15571b6ab
@1926
%test r15, r15
%jz 0x7fd15571b561
1924
@1927
%mov eax, dword ptr [r12+0x6c]
%mov edi, 0xbc
%mov dword ptr [rsp+0x8], eax
%call 0x7fd1557b5e80
1927
@1928
%push r15
%push r14
%push r13
%push r12
%push rbp
%push rbx
%sub rsp, 0x28
%mov r14, qword ptr [rip+0x32efc3]
%mov rax, qword ptr fs:[0x28]
%mov qword ptr [rsp+0x18], rax
%xor eax, eax
%cmp dword ptr [r14+0x6c], 0x1
%jbe 0x7fd1557b5fd7
@1929
%mov ebp, edi
%mov byte ptr [rsp+0x16], 0x0
%mov byte ptr [rsp+0x17], 0x0
%mov dword ptr [rsp+0xc], 0x1
%mov r13d, 0x1
%lea r12, ptr [rsp+0x16]
%lea r15, ptr [rsp+0x17]
%jmp 0x7fd1557b5ee3
1928
1929
@1930
%mov eax, 0x2
%cpuid 
1930
@1931
%cmp r13d, 0x1
%mov dword ptr [rsp+0x8], edx
%mov dword ptr [rsp+0x4], ecx
%mov esi, eax
%jnz 0x7fd1557b5f04
@1932
%movzx eax, al
%xor sil, sil
%mov dword ptr [rsp+0xc], eax
%lea r9, ptr [r14+0xa4]
%lea r8, ptr [r14+0xa0]
%mov rcx, r12
%mov rdx, r15
%mov edi, ebp
%call 0x7fd1557b5b80
1931
1932
@1933
%test esi, esi
%js 0x7fd1557b5ca0
@1934
%lea r10d, ptr [rdi-0xb9]
%push r13
%push r12
%mov r12, rdx
%mov edx, 0x55555556
%push rbp
%mov eax, r10d
%push rbx
%sar r10d, 0x1f
%imul edx
%sub rsp, 0x8
%sub edx, r10d
%test esi, esi
%lea ebp, ptr [rdx+rdx*2]
%jz 0x7fd1557b5c80
@1935
%lea r13, ptr [rip+0xf3e21]
%jmp 0x7fd1557b5bdf
1933
1934
1935
@1936
%movzx eax, sil
%cmp eax, 0x40
%jz 0x7fd1557b5bc8
@1937
%cmp eax, 0xff
%jz 0x7fd1557b5ca3
@1938
%cmp eax, 0x49
%jnz 0x7fd1557b5c19
1936
1937
1938
@1939
%mov ebx, esi
%mov r11d, 0x44
%xor edx, edx
%nop dword ptr [rax+rax*1], eax
%lea rax, ptr [rdx+r11*1]
%shr rax, 0x1
%lea r10, ptr [r13+rax*8]
%cmp bl, byte ptr [r10]
%jz 0x7fd1557b5c58
@1940
%jnb 0x7fd1557b5c48
@1941
%cmp rax, rdx
%jbe 0x7fd1557b5bd4
1939
1940
1941
@1942
%mov r11, rax
%jmp 0x7fd1557b5c28
1942
@1943
%lea rax, ptr [rdx+r11*1]
%shr rax, 0x1
%lea r10, ptr [r13+rax*8]
%cmp bl, byte ptr [r10]
%jz 0x7fd1557b5c58
@1944
%jnb 0x7fd1557b5c48
@1945
%cmp rax, rdx
%jbe 0x7fd1557b5bd4
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
@1946
%shr esi, 0x8
%test esi, esi
%jz 0x7fd1557b5c80
@1947
%movzx eax, sil
%cmp eax, 0x40
%jz 0x7fd1557b5bc8
@1948
%cmp eax, 0xff
%jz 0x7fd1557b5ca3
1946
1947
1948
@1949
%cmp eax, 0x49
%jnz 0x7fd1557b5c19
@1950
%cmp ebp, 0x9
%jnz 0x7fd1557b5c19
@1951
%cmp dword ptr [r8], 0xf
%jnz 0x7fd1557b5c90
1949
1939
1940
@1952
%lea rdx, ptr [rax+0x1]
%cmp rdx, r11
%jb 0x7fd1557b5c28
@1953
%jmp 0x7fd1557b5bd4
1952
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1952
1953
1946
1947
1948
1949
1939
1940
1941
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1946
1947
1948
1949
1939
1940
1952
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1952
1943
1944
1952
1953
1946
@1954
%xor eax, eax
%add rsp, 0x8
%pop rbx
%pop rbp
%pop r12
%pop r13
%ret 
1954
@1955
%test rax, rax
%jnz 0x7fd1557b5fb0
@1956
%lea r9, ptr [r14+0xa4]
%lea r8, ptr [r14+0xa0]
%mov rcx, r12
%mov rdx, r15
%mov esi, ebx
%mov edi, ebp
%call 0x7fd1557b5b80
1955
1956
1933
1934
1935
1936
1937
@1957
%xor ecx, ecx
%mov eax, 0x4
%cpuid 
1957
@1958
%mov edx, eax
%and edx, 0x1f
%jz 0x7fd1557b5c80
@1959
%xor esi, esi
%cmp ebp, 0x3
%jz 0x7fd1557b5e00
@1960
%test ebp, ebp
%jz 0x7fd1557b5db9
1958
1959
@1961
%mov r8d, 0x4
%jmp 0x7fd1557b5e1d
1961
@1962
%shr eax, 0x5
%and eax, 0x7
%cmp eax, 0x1
%jnz 0x7fd1557b5e08
@1963
%cmp edx, 0x1
%jz 0x7fd1557b5d20
@1964
%jmp 0x7fd1557b5e08
1962
1963
@1965
%sub edi, 0xb9
%sub edi, ebp
%jz 0x7fd1557b5d5a
@1966
%cmp edi, 0x1
%jz 0x7fd1557b5da2
@1967
%cmp edi, 0x2
%jnz 0x7fd1557b5e33
1965
@1968
%mov edx, ebx
%mov eax, ebx
%shr edx, 0x16
%and eax, 0xfff
%add eax, 0x1
%add edx, 0x1
%imul edx, eax
%lea eax, ptr [rcx+0x1]
%imul edx, eax
%mov eax, ebx
%shr eax, 0xc
%and eax, 0x3ff
%add eax, 0x1
%imul eax, edx
%jmp 0x7fd1557b5c82
1968
@1969
%add rsp, 0x8
%pop rbx
%pop rbp
%pop r12
%pop r13
%ret 
1969
@1970
%test rax, rax
%jnz 0x7fd1557b5fb0
@1971
%mov esi, dword ptr [rsp+0x4]
%lea r9, ptr [r14+0xa4]
%lea r8, ptr [r14+0xa0]
%mov rcx, r12
%mov rdx, r15
%mov edi, ebp
%call 0x7fd1557b5b80
1970
@1972
%mov rbx, qword ptr [rsp+0x18]
%xor rbx, qword ptr fs:[0x28]
%jnz 0x7fd1557b5fe0
@1973
%add rsp, 0x28
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
1972
1973
@1974
%mov edi, 0xbf
%mov r13, rax
%call 0x7fd1557b5e80
1974
1928
1929
1930
1931
1932
1933
1934
1935
1936
1937
1938
1939
1940
1941
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1946
1947
1948
1949
1939
1940
1952
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1952
1953
1946
1947
1948
1949
1939
1940
1941
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1946
1947
1948
1949
1939
1940
1952
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1952
1943
1944
1952
1953
1946
1954
1955
1956
1933
1934
1935
1936
1937
1957
1958
1959
1960
@1975
%mov r9d, 0x4
%jmp 0x7fd1557b5cfa
1975
@1976
%shr eax, 0x5
%and eax, 0x7
%cmp eax, 0x1
%setz r8b
%cmp edx, 0x1
%jz 0x7fd1557b5cd0
@1977
%cmp edx, 0x2
%jnz 0x7fd1557b5d16
@1978
%test r8b, r8b
%jnz 0x7fd1557b5cdf
1976
@1979
%test r8b, r8b
%jz 0x7fd1557b5d0c
@1980
%cmp ebp, 0x9
%jnz 0x7fd1557b5cdf
@1981
%cmp eax, 0x3
%jz 0x7fd1557b5d20
1979
1980
@1982
%cmp ebp, 0xc
%jnz 0x7fd1557b5ce9
@1983
%cmp eax, 0x4
%jz 0x7fd1557b5d20
@1984
%add esi, 0x1
%mov eax, r9d
%mov ecx, esi
%cpuid 
1982
@1985
%add esi, 0x1
%mov eax, r9d
%mov ecx, esi
%cpuid 
1985
@1986
%mov edx, eax
%and edx, 0x1f
%jz 0x7fd1557b5c80
@1987
%shr eax, 0x5
%and eax, 0x7
%cmp eax, 0x1
%setz r8b
%cmp edx, 0x1
%jz 0x7fd1557b5cd0
@1988
%cmp edx, 0x2
%jnz 0x7fd1557b5d16
1986
1987
1988
@1989
%test r8b, r8b
%jnz 0x7fd1557b5cdf
@1990
%cmp ebp, 0x6
%jnz 0x7fd1557b5cd5
@1991
%cmp eax, 0x2
%jnz 0x7fd1557b5cd5
1989
1982
1985
1986
1987
1988
@1992
%cmp ebp, 0x6
%jnz 0x7fd1557b5cd5
@1993
%cmp eax, 0x2
%jnz 0x7fd1557b5cd5
@1994
%sub edi, 0xb9
%sub edi, ebp
%jz 0x7fd1557b5d5a
1992
1993
1994
1968
1969
1970
1972
1973
@1995
%mov edi, 0xc2
%mov qword ptr [rsp], rax
%call 0x7fd1557b5e80
1995
1928
1929
1930
1931
1932
1933
1934
1935
1936
1937
1938
1939
1940
1941
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1946
1947
1948
1949
1939
1940
1952
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1952
1953
1946
1947
1948
1949
1939
1940
1941
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1946
1947
1948
1949
1939
1940
1952
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1945
1942
1943
1944
1952
1943
1944
1952
1953
1946
1954
1955
1956
1933
1934
1935
1936
1937
1957
1958
1959
1960
1975
1976
1979
1980
1981
1982
1985
1986
1987
1988
1989
1982
1985
1986
1987
1988
1992
@1996
%cmp ebp, 0x9
%jnz 0x7fd1557b5cdf
@1997
%cmp eax, 0x3
%jz 0x7fd1557b5d20
@1998
%cmp ebp, 0xc
%jnz 0x7fd1557b5ce9
1996
1997
1998
1985
1986
1987
1988
1992
1996
1997
1965
1968
1969
1970
1972
1973
@1999
%test rax, rax
%mov rbp, rax
%jle 0x7fd15571b646
@2000
%xor r11d, r11d
%mov dword ptr [rsp+0xc], 0x3
%mov edi, dword ptr [r12+0x7c]
%and edi, 0x10000000
%jz 0x7fd15571b69d
@2001
%cmp dword ptr [rsp+0x8], 0x3
%jle 0x7fd15571b65b
1999
2000
@2002
%test r15, r15
%jz 0x7fd15571b4be
@2003
%jmp 0x7fd15571b4bb
2002
@2004
%test r13, r13
%jle 0x7fd15571b4ee
@2005
%mov rax, r13
%mov qword ptr [rip+0x3c9e4b], r13
%xor r13b, r13b
%sar rax, 0x1
%mov qword ptr [rip+0x3c9e4e], r13
%mov qword ptr [rip+0x3c9e3f], rax
%mov rax, r13
%sar rax, 0x1
%mov qword ptr [rip+0x3c9e42], rax
%test r14, r14
%jz 0x7fd15571b4f6
@2006
%mov rbp, r14
%test rbp, rbp
%jle 0x7fd15571b526
2004
2005
@2007
%test rbp, rbp
%jle 0x7fd15571b526
@2008
%mov rax, rbp
%mov qword ptr [rip+0x3c9df3], rbp
%xor bpl, bpl
%sar rax, 0x1
%mov qword ptr [rip+0x3c9df6], rbp
%mov qword ptr [rip+0x3c9de7], rax
%mov rax, rbp
%sar rax, 0x1
%mov qword ptr [rip+0x3c9dea], rax
%mov rax, qword ptr [r12+0xc8]
%test rax, rax
%jnz 0x7fd15571b54b
@2009
%mov eax, edi
%mov ecx, 0x4
%imul rax, qword ptr [rip+0x3c9dc6]
%lea rax, ptr [rax+rax*2]
%cqo 
%idiv rcx
%mov qword ptr [rip+0x3cf126], rax
%add rsp, 0x18
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
2007
2008
2009
@2010
%add r14, 0x8
%cmp r14, qword ptr [rsp]
%jnz 0x7fd169021728
@2011
%sub ebx, 0x1
%cmp ebx, 0xffffffff
%jnz 0x7fd16902168c
@2012
%add rsp, 0x18
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
2010
2011
@2013
%mov rdx, qword ptr [r15+0x3b8]
%mov eax, ebx
%mov r14, qword ptr [rdx+rax*8]
%movzx eax, byte ptr [r14+0x314]
%test al, 0x8
%jnz 0x7fd169021680
@2014
%mov rsi, qword ptr [r14+0x8]
%or eax, 0x8
%mov byte ptr [r14+0x314], al
%movzx edx, byte ptr [rsi]
%test dl, dl
%jz 0x7fd169021818
@2015
%mov rax, qword ptr [r14+0xa0]
%test rax, rax
%jz 0x7fd169021760
2013
2014
@2016
%test al, 0x3
%jnz 0x7fd1690216be
@2017
%jmp 0x7fd169021680
2016
2017
1890
@2018
%add rsp, 0x18
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
2018
@2019
%lea rdx, ptr [rip+0xf8cf]
%mov rsp, r13
%jmp r12
2019
@2020
%xor ebp, ebp
%mov r9, rdx
%pop rsi
%mov rdx, rsp
%and rsp, 0xfffffffffffffff0
%push rax
%push rsp
%lea r8, ptr [rip+0x1aa]
%lea rcx, ptr [rip+0x133]
%lea rdi, ptr [rip+0xe6]
%call qword ptr [rip+0x200a36]
2020
@2021
%push r13
%push r12
%xor eax, eax
%push rbp
%push rbx
%mov rbp, rcx
%sub rsp, 0x98
%mov qword ptr [rsp+0x8], rdx
%mov rdx, qword ptr [rip+0x3c946a]
%mov qword ptr [rsp+0x18], rdi
%mov dword ptr [rsp+0x14], esi
%test rdx, rdx
%jz 0x7fd15571bae5
@2022
%mov edx, dword ptr [rdx]
%xor eax, eax
%test edx, edx
%setz al
%test r9, r9
%mov dword ptr [rip+0x3c96b2], eax
%jz 0x7fd15571bafc
@2023
%xor edx, edx
%xor esi, esi
%mov rdi, r9
%call 0x7fd15573d430
2021
@2024
%test r9, r9
%mov dword ptr [rip+0x3c96b2], eax
%jz 0x7fd15571bafc
@2025
%xor edx, edx
%xor esi, esi
%mov rdi, r9
%call 0x7fd15573d430
2024
2025
@2026
%push r13
%push r12
%mov r13, rdx
%push rbp
%push rbx
%mov r12, rsi
%mov rbp, rdi
%mov esi, 0x1
%xor eax, eax
%sub rsp, 0x8
%lea rbx, ptr [rip+0x3ad1d7]
%cmp dword ptr [rip+0x3ad4a0], 0x0
%jz 0x7fd15573d462
@2027
%lock cmpxchg dword ptr [rbx], esi
%jnz 0x7fd15573d467
@2028
%jmp 0x7fd15573d47d
2026
@2029
%cmpxchg dword ptr [rbx], esi
%jz 0x7fd15573d47d
@2030
%lea rdi, ptr [rbx]
%sub rsp, 0x80
%call 0x7fd15582a690
2029
@2031
%lea rdi, ptr [rip+0x3a8294]
%call 0x7fd15573d220
2031
@2032
%cmp byte ptr [rip+0x3a9b45], 0x0
%jnz 0x7fd15573d33d
@2033
%push rbp
%push rbx
%xor r9d, r9d
%mov rbx, rdi
%sub rsp, 0x8
%mov rbp, qword ptr [rdi]
%test rbp, rbp
%mov r8, rbp
%jz 0x7fd15573d31e
@2034
%nop dword ptr [rax+rax*1], eax
%mov rax, qword ptr [r8+0x8]
%test rax, rax
%jz 0x7fd15573d297
2032
2033
2034
@2035
%mov rax, qword ptr [r8]
%mov qword ptr [r8+0x8], 0x0
%mov r9, r8
%test rax, rax
%jz 0x7fd15573d310
@2036
%mov r8, rax
%jmp 0x7fd15573d250
2035
@2037
%lea rax, ptr [r8+0x10]
%mov qword ptr [r8+0x8], 0x1
%jmp 0x7fd15573d2d2
2037
@2038
%mov qword ptr [rax], 0x1
%add qword ptr [rip+0x3ad33f], 0x1
%add rsp, 0x8
%pop rbx
%pop rbp
%ret 
2038
@2039
%test rax, rax
%jz 0x7fd15573d4e5
@2040
%xor rbp, qword ptr fs:[0x30]
%rol rbp, 0x11
%mov qword ptr [rax+0x10], r12
%mov qword ptr [rax+0x8], rbp
%mov qword ptr [rax+0x18], r13
%mov qword ptr [rax], 0x4
%cmp dword ptr [rip+0x3ad443], 0x0
%jz 0x7fd15573d4be
@2041
%lock dec dword ptr [rbx]
%jnz 0x7fd15573d4c2
2039
2040
@2042
%dec dword ptr [rbx]
%jz 0x7fd15573d4d8
@2043
%lea rdi, ptr [rbx]
%sub rsp, 0x80
%call 0x7fd15582a6c0
2042
@2044
%xor eax, eax
%add rsp, 0x8
%pop rbx
%pop rbp
%pop r12
%pop r13
%ret 
2044
@2045
%mov rdx, qword ptr [rip+0x3c9355]
%mov ebx, dword ptr [rdx]
%and ebx, 0x2
%jnz 0x7fd15571bbe8
@2046
%test rbp, rbp
%jz 0x7fd15571bb28
@2047
%mov rax, qword ptr [rip+0x3c938e]
%mov rsi, qword ptr [rsp+0x8]
%mov edi, dword ptr [rsp+0x14]
%mov rdx, qword ptr [rax]
%call rbp
2045
2046
2047
@2048
%push r15
%push r14
%mov r15, rdx
%push r13
%push r12
%lea r12, ptr [rip+0x2006ce]
%push rbp
%lea rbp, ptr [rip+0x2006ce]
%push rbx
%mov r13d, edi
%mov r14, rsi
%sub rbp, r12
%sub rsp, 0x8
%sar rbp, 0x3
%call 0x5652b68db528
2048
@2049
%sub rsp, 0x8
%mov rax, qword ptr [rip+0x200ab5]
%test rax, rax
%jz 0x5652b68db53a
@2050
%call rax
2049
@2051
%add rsp, 0x8
%ret 
2051
@2052
%test rbp, rbp
%jz 0x5652b68db726
@2053
%xor ebx, ebx
%nop dword ptr [rax+rax*1], eax
%mov rdx, r15
%mov rsi, r14
%mov edi, r13d
%call qword ptr [r12+rbx*8]
2052
2053
@2054
%push rbp
%mov rbp, rsp
%pop rbp
%jmp 0x5652b68db5f0
2054
@2055
%lea rdi, ptr [rip+0x200a19]
%lea rsi, ptr [rip+0x200a12]
%push rbp
%sub rsi, rdi
%mov rbp, rsp
%sar rsi, 0x3
%mov rax, rsi
%shr rax, 0x3f
%add rsi, rax
%sar rsi, 0x1
%jz 0x5652b68db630
@2056
%mov rax, qword ptr [rip+0x2009d1]
%test rax, rax
%jz 0x5652b68db630
@2057
%pop rbp
%jmp rax
2055
@2058
%pop rbp
%ret 
2058
@2059
%add rbx, 0x1
%cmp rbp, rbx
%jnz 0x5652b68db710
@2060
%add rsp, 0x8
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
2059
2060
@2061
%mov rdx, qword ptr [rip+0x3c9329]
%mov eax, dword ptr [rdx+0x1b0]
%test eax, eax
%jnz 0x7fd15571bc08
@2062
%test ebx, ebx
%jnz 0x7fd15571bc4b
@2063
%lea rdi, ptr [rsp+0x20]
%call 0x7fd155738c10
2061
2062
2063
@2064
%xor esi, esi
%jmp 0x7fd155738b70
2064
@2065
%mov qword ptr [rdi], rbx
%mov rax, rbp
%xor rax, qword ptr fs:[0x30]
%rol rax, 0x11
%mov qword ptr [rdi+0x8], rax
%mov qword ptr [rdi+0x10], r12
%mov qword ptr [rdi+0x18], r13
%mov qword ptr [rdi+0x20], r14
%mov qword ptr [rdi+0x28], r15
%lea rdx, ptr [rsp+0x8]
%xor rdx, qword ptr fs:[0x30]
%rol rdx, 0x11
%mov qword ptr [rdi+0x30], rdx
%mov rax, qword ptr [rsp]
%nop
%xor rax, qword ptr fs:[0x30]
%rol rax, 0x11
%mov qword ptr [rdi+0x38], rax
%jmp 0x7fd155738bd0
2065
@2066
%test esi, esi
%push rbx
%mov rbx, rdi
%jz 0x7fd155738bed
@2067
%lea rdx, ptr [rdi+0x48]
%xor esi, esi
%xor edi, edi
%call 0x7fd155739140
2066
@2068
%mov dword ptr [rbx+0x40], esi
%xor eax, eax
%pop rbx
%ret 
2068
@2069
%test eax, eax
%jnz 0x7fd15571bb9e
@2070
%mov rax, qword ptr fs:[0x300]
%mov qword ptr [rsp+0x68], rax
%mov rax, qword ptr fs:[0x2f8]
%mov qword ptr [rsp+0x70], rax
%lea rax, ptr [rsp+0x20]
%mov qword ptr fs:[0x300], rax
%mov rax, qword ptr [rip+0x3c9324]
%mov rsi, qword ptr [rsp+0x8]
%mov edi, dword ptr [rsp+0x14]
%mov rdx, qword ptr [rax]
%mov rax, qword ptr [rsp+0x18]
%call rax
2069
2070
@2071
%push rbp
%mov rbp, rsp
%sub rsp, 0x50
%mov dword ptr [rbp-0x44], edi
%mov qword ptr [rbp-0x50], rsi
%lea rax, ptr [rbp-0x40]
%mov edx, 0x32
%mov esi, 0x0
%mov rdi, rax
%call 0x5652b68db550
2071
@2072
%jmp qword ptr [rip+0x200a72]
2072
@2073
%vmovd xmm0, esi
%mov rax, rdi
%vpbroadcastb ymm0, xmm0
%cmp rdx, 0x20
%jb 0x7fd15588900a
@2074
%cmp rdx, 0x40
%jnbe 0x7fd155888f83
@2075
%vmovdqu ymmword ptr [rdi+rdx*1-0x20], ymm0
%vmovdqu ymmword ptr [rdi], ymm0
%vzeroupper
%ret 
2073
2074
2075
@2076
%lea rax, ptr [rbp-0x40]
%mov edx, 0x64
%mov rsi, rax
%mov edi, 0x0
%call 0x5652b68db560
2076
@2077
%jmp qword ptr [rip+0x200a6a]
2077
@2078
%lea rax, ptr [rip+0x2e0881]
%mov eax, dword ptr [rax]
%test eax, eax
%jnz 0x7fd15580a090
@2079
%xor eax, eax
%syscall 
2078
2079
@2080
%cmp rax, 0xfffffffffffff000
%jnbe 0x7fd15580a0e0
@2081
%ret 
2080
2081
@2082
%mov eax, 0x0
%leave 
%ret 
2082
@2083
%mov edi, eax
%call 0x7fd15573d120
2083
@2084
%lea rsi, ptr [rip+0x3a85f1]
%sub rsp, 0x8
%mov ecx, 0x1
%mov edx, 0x1
%call 0x7fd15573ced0
2084
@2085
%push r15
%push r14
%push r13
%push r12
%mov r12, rsi
%push rbp
%push rbx
%mov ebp, edi
%sub rsp, 0x18
%test cl, cl
%mov dword ptr [rsp+0xc], edx
%jnz 0x7fd15573d112
@2086
%lea r14, ptr [rip+0x3ad732]
%mov ebx, 0x1
%nop dword ptr [rax+rax*1], eax
%mov esi, ebx
%xor eax, eax
%cmp dword ptr [rip+0x3ad9ed], 0x0
%jz 0x7fd15573cf16
@2087
%lock cmpxchg dword ptr [r14], esi
%jnz 0x7fd15573cf1c
2085
@2088
%call 0x7fd15573d870
2088
@2089
%push rbp
%push rbx
%sub rsp, 0x8
%mov rbp, qword ptr [rip+0x3a74e3]
%mov rbx, qword ptr fs:[rbp]
%test rbx, rbx
%jz 0x7fd15573d8ce
@2090
%nop word ptr [rax+rax*1], ax
%mov rdx, qword ptr [rbx+0x18]
%mov rax, qword ptr [rbx]
%mov rdi, qword ptr [rbx+0x8]
%ror rax, 0x11
%xor rax, qword ptr fs:[0x30]
%mov qword ptr fs:[rbp], rdx
%call rax
2089
@2091
%add rsp, 0x8
%pop rbx
%pop rbp
%ret 
2091
@2092
%jmp 0x7fd15573ceef
2092
@2093
%lea r14, ptr [rip+0x3ad732]
%mov ebx, 0x1
%nop dword ptr [rax+rax*1], eax
%mov esi, ebx
%xor eax, eax
%cmp dword ptr [rip+0x3ad9ed], 0x0
%jz 0x7fd15573cf16
@2094
%lock cmpxchg dword ptr [r14], esi
%jnz 0x7fd15573cf1c
@2095
%jmp 0x7fd15573cf32
2093
@2096
%cmpxchg dword ptr [r14], esi
%jz 0x7fd15573cf32
@2097
%lea rdi, ptr [r14]
%sub rsp, 0x80
%call 0x7fd15582a690
2096
@2098
%mov r15, qword ptr [r12]
%test r15, r15
%jnz 0x7fd15573cfa4
@2099
%jmp 0x7fd15573d098
2098
@2100
%mov rax, qword ptr [r15+0x8]
%test rax, rax
%jz 0x7fd15573d050
@2101
%lea rdx, ptr [rax-0x1]
%mov r13, qword ptr [rip+0x3ad664]
%mov qword ptr [r15+0x8], rdx
%cmp dword ptr [rip+0x3ad931], 0x0
%jz 0x7fd15573cfd1
@2102
%lock dec dword ptr [r14]
%jnz 0x7fd15573cfd6
2100
2101
@2103
%dec dword ptr [r14]
%jz 0x7fd15573cfec
@2104
%lea rdi, ptr [r14]
%sub rsp, 0x80
%call 0x7fd15582a6c0
2103
@2105
%mov rax, rdx
%shl rax, 0x5
%add rax, r15
%mov rdx, qword ptr [rax+0x10]
%cmp rdx, 0x3
%jnz 0x7fd15573cf40
@2106
%mov rax, qword ptr [rax+0x18]
%ror rax, 0x11
%xor rax, qword ptr fs:[0x30]
%call rax
2105
@2107
%cmp rdx, 0x4
%jz 0x7fd15573d020
@2108
%cmp rdx, 0x2
%jnz 0x7fd15573cf69
@2109
%mov rdx, qword ptr [rax+0x18]
%mov rsi, qword ptr [rax+0x20]
%mov edi, ebp
%ror rdx, 0x11
%xor rdx, qword ptr fs:[0x30]
%call rdx
2107
@2110
%mov rdx, qword ptr [rax+0x18]
%mov qword ptr [rax+0x10], 0x0
%mov esi, ebp
%ror rdx, 0x11
%xor rdx, qword ptr fs:[0x30]
%mov rdi, qword ptr [rax+0x20]
%call rdx
2110
@2111
%push rbp
%mov rbp, rsp
%push r15
%push r14
%push r13
%push r12
%push rbx
%sub rsp, 0x28
%mov r12, qword ptr [rip+0x217fa8]
%sub r12, 0x1
%js 0x7fd169021be5
@2112
%mov dword ptr [rbp-0x40], 0x0
%lea rbx, ptr [r12+r12*8]
%lea rax, ptr [rip+0x21768c]
%shl rbx, 0x4
%add rbx, rax
%jmp 0x7fd169021a02
2111
2112
@2113
%lea rdi, ptr [rip+0x217f5f]
%call qword ptr [rip+0x218551]
2113
303
@2114
%mov edx, dword ptr [rbx+0x8]
%test edx, edx
%jz 0x7fd1690219e0
@2115
%mov rax, qword ptr [rbx]
%movzx r13d, byte ptr [rax+0x315]
%shr r13b, 0x3
%mov esi, r13d
%and esi, 0x1
%cmp esi, dword ptr [rbp-0x40]
%mov dword ptr [rbp-0x3c], esi
%jnz 0x7fd1690219e0
@2116
%mov ecx, edx
%mov qword ptr [rbp-0x50], rsp
%xor r15d, r15d
%lea rcx, ptr [rcx*8+0x16]
%shr rcx, 0x4
%shl rcx, 0x4
%sub rsp, rcx
%mov r14, rsp
%jmp 0x7fd169021a61
2114
2115
2116
@2117
%cmp qword ptr [rax+0x28], rax
%jnz 0x7fd169021a58
@2118
%cmp edx, r15d
%jbe 0x7fd169021d74
@2119
%mov ecx, r15d
%mov qword ptr [r14+rcx*8], rax
%mov dword ptr [rax+0x3dc], r15d
%add r15d, 0x1
%add dword ptr [rax+0x310], 0x1
%mov rax, qword ptr [rax+0x18]
%test rax, rax
%jnz 0x7fd169021a61
2117
2118
2119
2117
2118
2119
2117
2118
2119
2117
2118
2119
@2120
%cmp r15d, edx
%setz cl
%test r12, r12
%jnz 0x7fd169021aa5
@2121
%test cl, cl
%jz 0x7fd169021d55
@2122
%test r12, r12
%setz al
%test cl, cl
%jnz 0x7fd169021c08
2120
2121
2122
@2123
%movzx eax, al
%mov esi, r15d
%lea rdi, ptr [r14+0x8]
%sub esi, eax
%test r12, r12
%cmovnz rdi, r14
%jmp 0x7fd169021acd
2123
@2124
%xor edx, edx
%mov ecx, 0x1
%call 0x7fd169028c80
2124
1231
1233
621
1234
1235
1237
1238
@2125
%cmp qword ptr [rbx+0x28], rbx
%jnz 0x7fd169028e87
@2126
%cmp dword ptr [rbx+0x3dc], 0xffffffff
%jnz 0x7fd169028d58
@2127
%cmp dword ptr [rbp-0x38], r14d
%jnz 0x7fd169028e91
2125
2126
@2128
%cmp r15d, dword ptr [rbp-0x74]
%jnb 0x7fd169028e87
@2129
%mov eax, dword ptr [rbp-0x78]
%mov rdx, qword ptr [rbp-0x90]
%mov r12, qword ptr [rbp-0x80]
%mov r13, qword ptr [rbp-0x88]
%sub eax, r15d
%sub rdx, rax
%mov rax, qword ptr [r13]
%mov ecx, r12d
%mov rsi, qword ptr [rax+0x3b8]
%test rsi, rsi
%jz 0x7fd169028e70
@2130
%nop dword ptr [rax], eax
%mov r8, qword ptr [rsi]
%test r8, r8
%jz 0x7fd169028e70
2128
2129
1241
@2131
%mov rsi, qword ptr [rax+0x3c0]
%test rsi, rsi
%jz 0x7fd169028e76
@2132
%lea r11, ptr [rsi+0x8]
%mov esi, dword ptr [rsi]
%sub esi, 0x1
%nop dword ptr [rax], eax
%cmp esi, 0xffffffff
%jz 0x7fd169028e76
@2133
%mov r8d, esi
%sub esi, 0x1
%cmp qword ptr [r11+r8*8], rbx
%jnz 0x7fd169028ef0
2131
@2134
%sub r12, 0x1
%sub r13, 0x8
%cmp rdx, r12
%jnz 0x7fd169028d7d
@2135
%cmp dword ptr [rbp-0x38], r14d
%jz 0x7fd169028f59
@2136
%mov rcx, qword ptr [rbp-0x40]
%mov eax, r14d
%lea rdi, ptr [rcx+rax*2]
%jmp 0x7fd169028e48
2134
@2137
%mov rax, qword ptr [r13]
%mov ecx, r12d
%mov rsi, qword ptr [rax+0x3b8]
%test rsi, rsi
%jz 0x7fd169028e70
@2138
%nop dword ptr [rax], eax
%mov r8, qword ptr [rsi]
%test r8, r8
%jz 0x7fd169028e70
@2139
%add rsi, 0x8
%cmp r8, rbx
%jnz 0x7fd169028d98
2137
2138
2139
@2140
%mov r8, qword ptr [rsi]
%test r8, r8
%jz 0x7fd169028e70
@2141
%add rsi, 0x8
%cmp r8, rbx
%jnz 0x7fd169028d98
@2142
%mov eax, ecx
%mov dword ptr [rbp-0x58], ecx
%mov rcx, qword ptr [rbp-0x48]
%sub eax, r15d
%mov r11d, r14d
%mov qword ptr [rbp-0x68], r10
%lea rdx, ptr [rax*8]
%mov qword ptr [rbp-0x60], r9
%mov qword ptr [rbp-0x50], r11
%lea rsi, ptr [rcx+r11*8]
%mov qword ptr [rbp-0x70], rax
%call 0x7fd169030840
2140
2141
2140
1241
2131
2134
2135
2136
1245
621
1234
1235
1237
@2143
%mov r10d, r14d
%mov rax, qword ptr [rbp-0x40]
%add r14d, 0x1
%jmp 0x7fd169028d30
2143
1248
2125
2126
2128
2129
1241
2131
2134
2135
2136
1245
621
1234
1235
1236
1246
1247
1248
2125
2126
2128
1251
1253
@2144
%lea rdi, ptr [rip+0x217e88]
%call qword ptr [rip+0x218482]
2144
308
@2145
%test r15d, r15d
%jz 0x7fd169021bbe
@2146
%lea eax, ptr [r15-0x1]
%lea rax, ptr [r14+rax*8+0x8]
%mov qword ptr [rbp-0x48], rax
%nop dword ptr [rax], eax
%mov r13, qword ptr [r14]
%movzx eax, byte ptr [r13+0x314]
%test al, 0x8
%jz 0x7fd169021ba8
@2147
%and eax, 0xfffffff7
%mov byte ptr [r13+0x314], al
%mov rax, qword ptr [r13+0x110]
%test rax, rax
%jz 0x7fd169021c20
2145
2146
2147
@2148
%test byte ptr [rip+0x216c2c], 0x2
%jnz 0x7fd169021c40
@2149
%mov r15, qword ptr [rax+0x8]
%mov rax, qword ptr [r13+0x120]
%mov rcx, qword ptr [r13]
%mov rax, qword ptr [rax+0x8]
%add rcx, r15
%shr rax, 0x3
%test eax, eax
%lea edx, ptr [rax-0x1]
%jz 0x7fd169021b7d
@2150
%lea rax, ptr [rcx-0x8]
%lea r15, ptr [rcx+rdx*8]
%mov qword ptr [rbp-0x38], rax
%nop word ptr [rax+rax*1], ax
%call qword ptr [r15]
2148
2149
2150
@2151
%cmp byte ptr [rip+0x2009c9], 0x0
%jnz 0x5652b68db678
@2152
%cmp qword ptr [rip+0x2009a7], 0x0
%push rbp
%mov rbp, rsp
%jz 0x5652b68db663
@2153
%mov rdi, qword ptr [rip+0x2009aa]
%call 0x5652b68db570
2151
2152
2153
@2154
%jmp qword ptr [rip+0x200a82]
2154
@2155
%push r15
%push r14
%mov esi, 0x1
%push r13
%push r12
%mov r13, rdi
%push rbp
%push rbx
%xor eax, eax
%sub rsp, 0x8
%lea rbp, ptr [rip+0x3ad0e9]
%cmp dword ptr [rip+0x3ad3b2], 0x0
%jz 0x7fd15573d551
@2156
%lock cmpxchg dword ptr [rbp], esi
%jnz 0x7fd15573d557
@2157
%jmp 0x7fd15573d56e
2155
@2158
%cmpxchg dword ptr [rbp], esi
%jz 0x7fd15573d56e
@2159
%lea rdi, ptr [rbp]
%sub rsp, 0x80
%call 0x7fd15582a690
2158
@2160
%mov r12, qword ptr [rip+0x3a81a3]
%test r12, r12
%jz 0x7fd15573d672
@2161
%mov rax, qword ptr [r12+0x8]
%lea r14, ptr [r12+0x10]
%shl rax, 0x5
%lea rbx, ptr [r12+rax*1-0x10]
%cmp rbx, r14
%jnb 0x7fd15573d5b3
@2162
%jmp 0x7fd15573d665
2160
2161
2162
@2163
%mov r12, qword ptr [r12]
%test r12, r12
%jnz 0x7fd15573d57e
@2164
%mov rsi, qword ptr [rip+0x3a80a7]
%test rsi, rsi
%jz 0x7fd15573d6e1
@2165
%mov edi, 0x1f
%nop dword ptr [rax+rax*1], eax
%mov rax, qword ptr [rsi+0x8]
%shl rax, 0x5
%lea rdx, ptr [rsi+rax*1-0x10]
%lea rax, ptr [rsi+0x10]
%cmp rdx, rax
%jb 0x7fd15573d6d9
2163
2164
2165
@2166
%mov rsi, qword ptr [rsi]
%test rsi, rsi
%jnz 0x7fd15573d688
@2167
%test r13, r13
%jz 0x7fd15573d6ee
@2168
%mov rdi, r13
%call 0x7fd15582a9d0
2166
2167
2168
@2169
%push rbp
%mov rbp, rsp
%push rbx
%sub rsp, 0x28
%mov r9, qword ptr [rip+0x2bff20]
%mov rax, qword ptr fs:[0x28]
%mov qword ptr [rbp-0x18], rax
%xor eax, eax
%test r9, r9
%jz 0x7fd15582aa11
@2170
%cmp rdi, qword ptr [r9+0x20]
%mov r10, rdi
%jnz 0x7fd15582aa09
@2171
%jmp 0x7fd15582aa2a
2169
@2172
%mov rax, qword ptr [rbp-0x18]
%xor rax, qword ptr fs:[0x28]
%jnz 0x7fd15582abc4
@2173
%mov rbx, qword ptr [rbp-0x8]
%leave 
%ret 
2172
2173
@2174
%cmp dword ptr [rip+0x3ad203], 0x0
%jz 0x7fd15573d6ff
@2175
%lock dec dword ptr [rbp]
%jnz 0x7fd15573d704
@2176
%jmp 0x7fd15573d71b
2174
@2177
%dec dword ptr [rbp]
%jz 0x7fd15573d71b
@2178
%lea rdi, ptr [rbp]
%sub rsp, 0x80
%call 0x7fd15582a6c0
2177
@2179
%add rsp, 0x8
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
2179
@2180
%call 0x5652b68db5b0
2180
@2181
%lea rdi, ptr [rip+0x200a59]
%push rbp
%lea rax, ptr [rip+0x200a51]
%cmp rax, rdi
%mov rbp, rsp
%jz 0x5652b68db5e0
@2182
%mov rax, qword ptr [rip+0x200a0a]
%test rax, rax
%jz 0x5652b68db5e0
@2183
%pop rbp
%jmp rax
2181
@2184
%pop rbp
%ret 
2184
@2185
%mov byte ptr [rip+0x2009a1], 0x1
%pop rbp
%ret 
2185
@2186
%sub r15, 0x8
%cmp r15, qword ptr [rbp-0x38]
%jnz 0x7fd169021b70
@2187
%mov rax, qword ptr [r13+0xa8]
%test rax, rax
%jz 0x7fd169021b93
@2188
%mov rax, qword ptr [rax+0x8]
%add rax, qword ptr [r13]
%call rax
2186
2187
2188
@2189
%sub rsp, 0x8
%add rsp, 0x8
%ret 
2189
@2190
%mov ecx, dword ptr [rbp-0x3c]
%test ecx, ecx
%jnz 0x7fd169021ba8
@2191
%mov esi, dword ptr [rip+0x216d70]
%test esi, esi
%jnz 0x7fd169021cb0
@2192
%sub dword ptr [r13+0x310], 0x1
%add r14, 0x8
%cmp qword ptr [rbp-0x48], r14
%jnz 0x7fd169021b00
2190
2191
2192
@2193
%mov r13, qword ptr [r14]
%movzx eax, byte ptr [r13+0x314]
%test al, 0x8
%jz 0x7fd169021ba8
@2194
%and eax, 0xfffffff7
%mov byte ptr [r13+0x314], al
%mov rax, qword ptr [r13+0x110]
%test rax, rax
%jz 0x7fd169021c20
@2195
%test byte ptr [rip+0x216c2c], 0x2
%jnz 0x7fd169021c40
2193
@2196
%sub dword ptr [r13+0x310], 0x1
%add r14, 0x8
%cmp qword ptr [rbp-0x48], r14
%jnz 0x7fd169021b00
@2197
%mov rsp, qword ptr [rbp-0x50]
%jmp 0x7fd1690219ed
2196
2193
2194
@2198
%mov rax, qword ptr [r13+0xa8]
%test rax, rax
%jz 0x7fd169021b93
@2199
%test byte ptr [rip+0x216b29], 0x2
%jz 0x7fd169021b89
@2200
%nop dword ptr [rax], eax
%mov rsi, qword ptr [r13+0x8]
%cmp byte ptr [rsi], 0x0
%jz 0x7fd169021c70
2198
@2201
%mov ecx, dword ptr [rbp-0x3c]
%test ecx, ecx
%jnz 0x7fd169021ba8
@2202
%mov esi, dword ptr [rip+0x216d70]
%test esi, esi
%jnz 0x7fd169021cb0
@2203
%sub dword ptr [r13+0x310], 0x1
%add r14, 0x8
%cmp qword ptr [rbp-0x48], r14
%jnz 0x7fd169021b00
2201
2202
2203
2193
2194
2198
2201
2202
2203
@2204
%mov rsp, qword ptr [rbp-0x50]
%jmp 0x7fd1690219ed
2204
@2205
%sub r12, 0x1
%sub rbx, 0x90
%cmp r12, 0xffffffffffffffff
%jz 0x7fd169021bd0
@2206
%lea rdi, ptr [rip+0x217f5f]
%call qword ptr [rip+0x218551]
2205
@2207
%mov edx, dword ptr [rbp-0x40]
%test edx, edx
%jnz 0x7fd169021be5
@2208
%mov eax, dword ptr [rip+0x216d33]
%test eax, eax
%jnz 0x7fd169021c8a
@2209
%test byte ptr [rip+0x216b74], 0x80
%jnz 0x7fd169021cf9
2207
2208
2209
@2210
%lea rsp, ptr [rbp-0x28]
%pop rbx
%pop r12
%pop r13
%pop r14
%pop r15
%pop rbp
%ret 
2210
@2211
%jmp 0x7fd15573cf69
2211
@2212
%mov esi, ebx
%xor eax, eax
%cmp dword ptr [rip+0x3ad984], 0x0
%jz 0x7fd15573cf7f
@2213
%lock cmpxchg dword ptr [r14], esi
%jnz 0x7fd15573cf85
@2214
%jmp 0x7fd15573cf9b
2212
@2215
%cmpxchg dword ptr [r14], esi
%jz 0x7fd15573cf9b
@2216
%lea rdi, ptr [r14]
%sub rsp, 0x80
%call 0x7fd15582a690
2215
@2217
%cmp qword ptr [rip+0x3ad67e], r13
%jnz 0x7fd15573cf32
@2218
%mov rax, qword ptr [r15+0x8]
%test rax, rax
%jz 0x7fd15573d050
@2219
%lea rdx, ptr [rax-0x1]
%mov r13, qword ptr [rip+0x3ad664]
%mov qword ptr [r15+0x8], rdx
%cmp dword ptr [rip+0x3ad931], 0x0
%jz 0x7fd15573cfd1
2217
2218
@2220
%mov rax, qword ptr [r15]
%test rax, rax
%mov qword ptr [r12], rax
%jz 0x7fd15573d064
@2221
%mov rdi, r15
%call 0x7fd15571b2c8
2220
@2222
%cmp dword ptr [rip+0x3ad88d], 0x0
%jz 0x7fd15573d075
@2223
%lock dec dword ptr [r14]
%jnz 0x7fd15573d07a
@2224
%jmp 0x7fd15573d090
2222
@2225
%dec dword ptr [r14]
%jz 0x7fd15573d090
@2226
%lea rdi, ptr [r14]
%sub rsp, 0x80
%call 0x7fd15582a6c0
2225
@2227
%jmp 0x7fd15573cf00
2227
@2228
%mov esi, ebx
%xor eax, eax
%cmp dword ptr [rip+0x3ad9ed], 0x0
%jz 0x7fd15573cf16
@2229
%lock cmpxchg dword ptr [r14], esi
%jnz 0x7fd15573cf1c
@2230
%jmp 0x7fd15573cf32
2228
2096
2098
2099
@2231
%mov byte ptr [rip+0x3a9ccd], 0x1
%cmp dword ptr [rip+0x3ad852], 0x0
%jz 0x7fd15573d0b0
@2232
%lock dec dword ptr [r14]
%jnz 0x7fd15573d0b5
@2233
%jmp 0x7fd15573d0cb
2231
@2234
%dec dword ptr [r14]
%jz 0x7fd15573d0cb
@2235
%lea rdi, ptr [r14]
%sub rsp, 0x80
%call 0x7fd15582a6c0
2234
@2236
%cmp byte ptr [rsp+0xc], 0x0
%jz 0x7fd15573d10b
@2237
%lea rbx, ptr [rip+0x3a465f]
%lea rax, ptr [rip+0x3a4660]
%cmp rbx, rax
%jnb 0x7fd15573d10b
@2238
%lea rax, ptr [rip+0x3a465b]
%lea rdx, ptr [rip+0x3a464d]
%sub rax, rdx
%shr rax, 0x3
%lea r12, ptr [rbx+rax*8+0x8]
%nop
%call qword ptr [rbx]
2236
2237
2238
@2239
%push r15
%push r14
%xor edi, edi
%push r13
%push r12
%push rbp
%push rbx
%sub rsp, 0x48
%mov rax, qword ptr fs:[0x28]
%mov qword ptr [rsp+0x38], rax
%xor eax, eax
%call 0x7fd1557890e0
2239
@2240
%push r15
%push r14
%mov r15d, edi
%push r13
%push r12
%push rbp
%push rbx
%sub rsp, 0x48
%mov rax, qword ptr fs:[0x28]
%mov qword ptr [rsp+0x38], rax
%xor eax, eax
%mov eax, dword ptr [rip+0x3617e1]
%test eax, eax
%mov dword ptr [rsp+0x4], eax
%jz 0x7fd1557893b8
@2241
%mov rax, qword ptr [rip+0x36178e]
%lea rdi, ptr [rsp+0x10]
%xor edx, edx
%ror rax, 0x11
%xor rax, qword ptr fs:[0x30]
%lea rsi, ptr [rip-0x1c25]
%call rax
2240
@2242
%lea rax, ptr [rip-0x1eaf]
%mov qword ptr [rsp+0x18], 0x0
%mov qword ptr [rsp+0x10], rax
%jmp 0x7fd155789137
2242
@2243
%mov rdx, qword ptr fs:[0x10]
%cmp qword ptr [rip+0x35e761], rdx
%jz 0x7fd15578918f
@2244
%mov esi, 0x1
%xor eax, eax
%cmp dword ptr [rip+0x3617a1], 0x0
%jz 0x7fd155789165
@2245
%lock cmpxchg dword ptr [rip+0x35e73f], esi
%jnz 0x7fd15578916e
2243
2244
@2246
%cmpxchg dword ptr [rip+0x35e734], esi
%jz 0x7fd155789188
@2247
%lea rdi, ptr [rip+0x35e72b]
%sub rsp, 0x80
%call 0x7fd15582a690
2246
@2248
%mov qword ptr [rip+0x35e719], rdx
%mov eax, dword ptr [rip+0x35e70f]
%mov rbx, qword ptr [rip+0x35d4c4]
%xor ebp, ebp
%add eax, 0x1
%test rbx, rbx
%mov dword ptr [rip+0x35e6fa], eax
%jz 0x7fd155789306
@2249
%lea r13, ptr [rip+0x3585a9]
%lea r12, ptr [rip+0x35930a]
%mov r14, qword ptr fs:[0x10]
%sub r12, r13
%jmp 0x7fd155789278
2248
2249
@2250
%test r15d, r15d
%mov qword ptr [rip+0x35e60e], rbx
%jz 0x7fd1557892da
@2251
%mov eax, dword ptr [rbx]
%and eax, 0x8000
%jnz 0x7fd1557892da
@2252
%mov rdx, qword ptr [rbx+0x88]
%cmp qword ptr [rdx+0x8], r14
%jz 0x7fd1557892d6
2250
@2253
%mov edx, dword ptr [rbx+0xc0]
%test edx, edx
%jnle 0x7fd1557891d0
@2254
%mov rax, qword ptr [rbx+0x20]
%cmp qword ptr [rbx+0x28], rax
%jnbe 0x7fd1557891e1
@2255
%jmp 0x7fd15578920d
2253
2254
2255
@2256
%test r15d, r15d
%jz 0x7fd155789260
@2257
%test dword ptr [rbx], 0x8000
%jnz 0x7fd155789260
@2258
%mov rdx, qword ptr [rbx+0x88]
%sub dword ptr [rdx+0x4], 0x1
%jnz 0x7fd155789260
2256
@2259
%mov rbx, qword ptr [rbx+0x68]
%mov qword ptr [rip+0x35e621], 0x0
%test rbx, rbx
%jz 0x7fd155789300
@2260
%test r15d, r15d
%mov qword ptr [rip+0x35e60e], rbx
%jz 0x7fd1557892da
@2261
%mov eax, dword ptr [rbx]
%and eax, 0x8000
%jnz 0x7fd1557892da
2259
2260
2253
2254
2255
2256
2259
2260
2253
2254
2255
2256
2259
@2262
%mov eax, dword ptr [rip+0x35e59e]
%sub eax, 0x1
%test eax, eax
%mov dword ptr [rip+0x35e593], eax
%jnz 0x7fd155789354
@2263
%mov qword ptr [rip+0x35e58a], 0x0
%cmp dword ptr [rip+0x3615d3], 0x0
%jz 0x7fd155789332
@2264
%lock dec dword ptr [rip+0x35e572]
%jnz 0x7fd15578933a
2262
2263
@2265
%dec dword ptr [rip+0x35e568]
%jz 0x7fd155789354
@2266
%lea rdi, ptr [rip+0x35e55f]
%sub rsp, 0x80
%call 0x7fd15582a6c0
2265
@2267
%mov eax, dword ptr [rsp+0x4]
%test eax, eax
%jz 0x7fd155789379
@2268
%mov rax, qword ptr [rip+0x36154d]
%lea rdi, ptr [rsp+0x10]
%xor esi, esi
%ror rax, 0x11
%xor rax, qword ptr fs:[0x30]
%call rax
2267
@2269
%mov rcx, qword ptr [rsp+0x38]
%xor rcx, qword ptr fs:[0x28]
%mov eax, ebp
%jnz 0x7fd1557893d2
@2270
%add rsp, 0x48
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
2269
2270
@2271
%mov r12d, dword ptr [rip+0x3614dc]
%mov dword ptr [rsp+0x4], eax
%test r12d, r12d
%jz 0x7fd1557896d8
@2272
%mov rax, qword ptr [rip+0x361488]
%lea rdi, ptr [rsp+0x10]
%xor edx, edx
%ror rax, 0x11
%xor rax, qword ptr fs:[0x30]
%lea rsi, ptr [rip-0x1f2b]
%call rax
2271
@2273
%lea rax, ptr [rip-0x21cf]
%mov qword ptr [rsp+0x18], 0x0
%mov qword ptr [rsp+0x10], rax
%jmp 0x7fd15578943d
2273
@2274
%mov rdx, qword ptr fs:[0x10]
%cmp rdx, qword ptr [rip+0x35e45b]
%jz 0x7fd155789495
@2275
%mov esi, 0x1
%xor eax, eax
%cmp dword ptr [rip+0x36149b], 0x0
%jz 0x7fd15578946b
@2276
%lock cmpxchg dword ptr [rip+0x35e439], esi
%jnz 0x7fd155789474
2274
2275
@2277
%cmpxchg dword ptr [rip+0x35e42e], esi
%jz 0x7fd15578948e
@2278
%lea rdi, ptr [rip+0x35e425]
%sub rsp, 0x80
%call 0x7fd15582a690
2277
@2279
%mov qword ptr [rip+0x35e413], rdx
%mov eax, dword ptr [rip+0x35e409]
%mov rbx, qword ptr [rip+0x35d1be]
%add eax, 0x1
%test rbx, rbx
%mov dword ptr [rip+0x35e3f6], eax
%jz 0x7fd1557895f6
@2280
%lea r13, ptr [rip+0x3582a5]
%lea rbp, ptr [rip+0x359006]
%mov r14, qword ptr fs:[0x10]
%sub rbp, r13
%jmp 0x7fd1557894e7
2279
2280
@2281
%mov r15d, dword ptr [rbx]
%and r15d, 0x2
%jnz 0x7fd1557894d0
@2282
%mov edx, dword ptr [rbx+0xc0]
%test edx, edx
%jz 0x7fd1557894d0
@2283
%mov rdx, qword ptr [rbx+0x88]
%test rdx, rdx
%jz 0x7fd155789546
2281
@2284
%mov dword ptr [rbx+0xc0], 0xffffffff
%mov rbx, qword ptr [rbx+0x68]
%test rbx, rbx
%jz 0x7fd1557895f0
@2285
%mov r15d, dword ptr [rbx]
%and r15d, 0x2
%jnz 0x7fd1557894d0
@2286
%mov edx, dword ptr [rbx+0xc0]
%test edx, edx
%jz 0x7fd1557894d0
2284
2285
2286
2284
2285
2286
2284
@2287
%mov eax, dword ptr [rip+0x35e2ae]
%sub eax, 0x1
%test eax, eax
%mov dword ptr [rip+0x35e2a3], eax
%jnz 0x7fd155789644
@2288
%mov qword ptr [rip+0x35e29a], 0x0
%cmp dword ptr [rip+0x3612e3], 0x0
%jz 0x7fd155789622
@2289
%lock dec dword ptr [rip+0x35e282]
%jnz 0x7fd15578962a
2287
2288
@2290
%dec dword ptr [rip+0x35e278]
%jz 0x7fd155789644
@2291
%lea rdi, ptr [rip+0x35e26f]
%sub rsp, 0x80
%call 0x7fd15582a6c0
2290
@2292
%test r12d, r12d
%jz 0x7fd155789666
@2293
%mov rax, qword ptr [rip+0x361260]
%lea rdi, ptr [rsp+0x10]
%xor esi, esi
%ror rax, 0x11
%xor rax, qword ptr fs:[0x30]
%call rax
2292
@2294
%mov rcx, qword ptr [rsp+0x38]
%xor rcx, qword ptr fs:[0x28]
%mov eax, dword ptr [rsp+0x4]
%jnz 0x7fd155789730
@2295
%add rsp, 0x48
%pop rbx
%pop rbp
%pop r12
%pop r13
%pop r14
%pop r15
%ret 
2294
2295
@2296
%add rbx, 0x8
%cmp rbx, r12
%jnz 0x7fd15573d100
@2297
%mov edi, ebp
%call 0x7fd1557dedd0
2296
2297
@2298
%mov edx, edi
%mov r9, qword ptr [rip+0x30608f]
%mov r8d, 0xe7
%mov esi, 0x3c
%jmp 0x7fd1557dedff
2298
@2299
%mov edi, edx
%mov eax, r8d
%syscall 
2299
# eof
